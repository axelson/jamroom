{
  "version": 3,
  "sources": ["../../../assets/node_modules/howler/dist/howler.js", "../../../deps/phoenix_html/priv/static/phoenix_html.js", "../../../deps/phoenix/assets/js/phoenix/utils.js", "../../../deps/phoenix/assets/js/phoenix/constants.js", "../../../deps/phoenix/assets/js/phoenix/push.js", "../../../deps/phoenix/assets/js/phoenix/timer.js", "../../../deps/phoenix/assets/js/phoenix/channel.js", "../../../deps/phoenix/assets/js/phoenix/ajax.js", "../../../deps/phoenix/assets/js/phoenix/longpoll.js", "../../../deps/phoenix/assets/js/phoenix/presence.js", "../../../deps/phoenix/assets/js/phoenix/serializer.js", "../../../deps/phoenix/assets/js/phoenix/socket.js", "../../../deps/phoenix_live_view/assets/js/phoenix_live_view/constants.js", "../../../deps/phoenix_live_view/assets/js/phoenix_live_view/entry_uploader.js", "../../../deps/phoenix_live_view/assets/js/phoenix_live_view/utils.js", "../../../deps/phoenix_live_view/assets/js/phoenix_live_view/browser.js", "../../../deps/phoenix_live_view/assets/js/phoenix_live_view/aria.js", "../../../deps/phoenix_live_view/assets/js/phoenix_live_view/js.js", "../../../deps/phoenix_live_view/assets/js/phoenix_live_view/dom.js", "../../../deps/phoenix_live_view/assets/js/phoenix_live_view/upload_entry.js", "../../../deps/phoenix_live_view/assets/js/phoenix_live_view/live_uploader.js", "../../../deps/phoenix_live_view/assets/js/phoenix_live_view/hooks.js", "../../../deps/phoenix_live_view/assets/js/phoenix_live_view/dom_post_morph_restorer.js", "../../../deps/phoenix_live_view/assets/node_modules/morphdom/dist/morphdom-esm.js", "../../../deps/phoenix_live_view/assets/js/phoenix_live_view/dom_patch.js", "../../../deps/phoenix_live_view/assets/js/phoenix_live_view/rendered.js", "../../../deps/phoenix_live_view/assets/js/phoenix_live_view/view_hook.js", "../../../deps/phoenix_live_view/assets/js/phoenix_live_view/view.js", "../../../deps/phoenix_live_view/assets/js/phoenix_live_view/live_socket.js", "../../../assets/js/sounds.js", "../../../assets/js/app.js"],
  "sourcesContent": ["/*!\n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/(\\d+)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (!node.bufferSource) {\n        return self;\n      }\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, \u221E]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Create a new panner node if one doesn't already exist.\n        var panner = sound._panner;\n        if (!panner) {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n          panner = sound._panner\n        }\n\n        // Update the panner values or create a new panner if none exists.\n        panner.coneInnerAngle = pa.coneInnerAngle;\n        panner.coneOuterAngle = pa.coneOuterAngle;\n        panner.coneOuterGain = pa.coneOuterGain;\n        panner.distanceModel = pa.distanceModel;\n        panner.maxDistance = pa.maxDistance;\n        panner.refDistance = pa.refDistance;\n        panner.rolloffFactor = pa.rolloffFactor;\n        panner.panningModel = pa.panningModel;\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n", "\"use strict\";\n\n(function() {\n  var PolyfillEvent = eventConstructor();\n\n  function eventConstructor() {\n    if (typeof window.CustomEvent === \"function\") return window.CustomEvent;\n    // IE<=9 Support\n    function CustomEvent(event, params) {\n      params = params || {bubbles: false, cancelable: false, detail: undefined};\n      var evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return evt;\n    }\n    CustomEvent.prototype = window.Event.prototype;\n    return CustomEvent;\n  }\n\n  function buildHiddenInput(name, value) {\n    var input = document.createElement(\"input\");\n    input.type = \"hidden\";\n    input.name = name;\n    input.value = value;\n    return input;\n  }\n\n  function handleClick(element, targetModifierKey) {\n    var to = element.getAttribute(\"data-to\"),\n        method = buildHiddenInput(\"_method\", element.getAttribute(\"data-method\")),\n        csrf = buildHiddenInput(\"_csrf_token\", element.getAttribute(\"data-csrf\")),\n        form = document.createElement(\"form\"),\n        submit = document.createElement(\"input\"),\n        target = element.getAttribute(\"target\");\n\n    form.method = (element.getAttribute(\"data-method\") === \"get\") ? \"get\" : \"post\";\n    form.action = to;\n    form.style.display = \"none\";\n\n    if (target) form.target = target;\n    else if (targetModifierKey) form.target = \"_blank\";\n\n    form.appendChild(csrf);\n    form.appendChild(method);\n    document.body.appendChild(form);\n\n    // Insert a button and click it instead of using `form.submit`\n    // because the `submit` function does not emit a `submit` event.\n    submit.type = \"submit\";\n    form.appendChild(submit);\n    submit.click();\n  }\n\n  window.addEventListener(\"click\", function(e) {\n    var element = e.target;\n    if (e.defaultPrevented) return;\n\n    while (element && element.getAttribute) {\n      var phoenixLinkEvent = new PolyfillEvent('phoenix.link.click', {\n        \"bubbles\": true, \"cancelable\": true\n      });\n\n      if (!element.dispatchEvent(phoenixLinkEvent)) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n      }\n\n      if (element.getAttribute(\"data-method\") && element.getAttribute(\"data-to\")) {\n        handleClick(element, e.metaKey || e.shiftKey);\n        e.preventDefault();\n        return false;\n      } else {\n        element = element.parentNode;\n      }\n    }\n  }, false);\n\n  window.addEventListener('phoenix.link.click', function (e) {\n    var message = e.target.getAttribute(\"data-confirm\");\n    if(message && !window.confirm(message)) {\n      e.preventDefault();\n    }\n  }, false);\n})();\n", "// wraps value in closure or returns closure\nexport let closure = (value) => {\n  if(typeof value === \"function\"){\n    return value\n  } else {\n    let closure = function (){ return value }\n    return closure\n  }\n}\n", "export const globalSelf = typeof self !== \"undefined\" ? self : null\nexport const phxWindow = typeof window !== \"undefined\" ? window : null\nexport const global = globalSelf || phxWindow || global\nexport const DEFAULT_VSN = \"2.0.0\"\nexport const SOCKET_STATES = {connecting: 0, open: 1, closing: 2, closed: 3}\nexport const DEFAULT_TIMEOUT = 10000\nexport const WS_CLOSE_NORMAL = 1000\nexport const CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n  leaving: \"leaving\",\n}\nexport const CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n}\n\nexport const TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n}\nexport const XHR_STATES = {\n  complete: 4\n}\n", "/**\n * Initializes the Push\n * @param {Channel} channel - The Channel\n * @param {string} event - The event, for example `\"phx_join\"`\n * @param {Object} payload - The payload, for example `{user_id: 123}`\n * @param {number} timeout - The push timeout in milliseconds\n */\nexport default class Push {\n  constructor(channel, event, payload, timeout){\n    this.channel = channel\n    this.event = event\n    this.payload = payload || function (){ return {} }\n    this.receivedResp = null\n    this.timeout = timeout\n    this.timeoutTimer = null\n    this.recHooks = []\n    this.sent = false\n  }\n\n  /**\n   *\n   * @param {number} timeout\n   */\n  resend(timeout){\n    this.timeout = timeout\n    this.reset()\n    this.send()\n  }\n\n  /**\n   *\n   */\n  send(){\n    if(this.hasReceived(\"timeout\")){ return }\n    this.startTimeout()\n    this.sent = true\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload(),\n      ref: this.ref,\n      join_ref: this.channel.joinRef()\n    })\n  }\n\n  /**\n   *\n   * @param {*} status\n   * @param {*} callback\n   */\n  receive(status, callback){\n    if(this.hasReceived(status)){\n      callback(this.receivedResp.response)\n    }\n\n    this.recHooks.push({status, callback})\n    return this\n  }\n\n  /**\n   * @private\n   */\n  reset(){\n    this.cancelRefEvent()\n    this.ref = null\n    this.refEvent = null\n    this.receivedResp = null\n    this.sent = false\n  }\n\n  /**\n   * @private\n   */\n  matchReceive({status, response, _ref}){\n    this.recHooks.filter(h => h.status === status)\n      .forEach(h => h.callback(response))\n  }\n\n  /**\n   * @private\n   */\n  cancelRefEvent(){\n    if(!this.refEvent){ return }\n    this.channel.off(this.refEvent)\n  }\n\n  /**\n   * @private\n   */\n  cancelTimeout(){\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = null\n  }\n\n  /**\n   * @private\n   */\n  startTimeout(){\n    if(this.timeoutTimer){ this.cancelTimeout() }\n    this.ref = this.channel.socket.makeRef()\n    this.refEvent = this.channel.replyEventName(this.ref)\n\n    this.channel.on(this.refEvent, payload => {\n      this.cancelRefEvent()\n      this.cancelTimeout()\n      this.receivedResp = payload\n      this.matchReceive(payload)\n    })\n\n    this.timeoutTimer = setTimeout(() => {\n      this.trigger(\"timeout\", {})\n    }, this.timeout)\n  }\n\n  /**\n   * @private\n   */\n  hasReceived(status){\n    return this.receivedResp && this.receivedResp.status === status\n  }\n\n  /**\n   * @private\n   */\n  trigger(status, response){\n    this.channel.trigger(this.refEvent, {status, response})\n  }\n}\n", "/**\n *\n * Creates a timer that accepts a `timerCalc` function to perform\n * calculated timeout retries, such as exponential backoff.\n *\n * @example\n * let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *   return [1000, 5000, 10000][tries - 1] || 10000\n * })\n * reconnectTimer.scheduleTimeout() // fires after 1000\n * reconnectTimer.scheduleTimeout() // fires after 5000\n * reconnectTimer.reset()\n * reconnectTimer.scheduleTimeout() // fires after 1000\n *\n * @param {Function} callback\n * @param {Function} timerCalc\n */\nexport default class Timer {\n  constructor(callback, timerCalc){\n    this.callback = callback\n    this.timerCalc = timerCalc\n    this.timer = null\n    this.tries = 0\n  }\n\n  reset(){\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  /**\n   * Cancels any previous scheduleTimeout and schedules callback\n   */\n  scheduleTimeout(){\n    clearTimeout(this.timer)\n\n    this.timer = setTimeout(() => {\n      this.tries = this.tries + 1\n      this.callback()\n    }, this.timerCalc(this.tries + 1))\n  }\n}\n", "import {closure} from \"./utils\"\nimport {\n  CHANNEL_EVENTS,\n  CHANNEL_STATES,\n} from \"./constants\"\n\nimport Push from \"./push\"\nimport Timer from \"./timer\"\n\n/**\n *\n * @param {string} topic\n * @param {(Object|function)} params\n * @param {Socket} socket\n */\nexport default class Channel {\n  constructor(topic, params, socket){\n    this.state = CHANNEL_STATES.closed\n    this.topic = topic\n    this.params = closure(params || {})\n    this.socket = socket\n    this.bindings = []\n    this.bindingRef = 0\n    this.timeout = this.socket.timeout\n    this.joinedOnce = false\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout)\n    this.pushBuffer = []\n    this.stateChangeRefs = []\n\n    this.rejoinTimer = new Timer(() => {\n      if(this.socket.isConnected()){ this.rejoin() }\n    }, this.socket.rejoinAfterMs)\n    this.stateChangeRefs.push(this.socket.onError(() => this.rejoinTimer.reset()))\n    this.stateChangeRefs.push(this.socket.onOpen(() => {\n      this.rejoinTimer.reset()\n      if(this.isErrored()){ this.rejoin() }\n    })\n    )\n    this.joinPush.receive(\"ok\", () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach(pushEvent => pushEvent.send())\n      this.pushBuffer = []\n    })\n    this.joinPush.receive(\"error\", () => {\n      this.state = CHANNEL_STATES.errored\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.onClose(() => {\n      this.rejoinTimer.reset()\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `close ${this.topic} ${this.joinRef()}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket.remove(this)\n    })\n    this.onError(reason => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `error ${this.topic}`, reason)\n      if(this.isJoining()){ this.joinPush.reset() }\n      this.state = CHANNEL_STATES.errored\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.joinPush.receive(\"timeout\", () => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `timeout ${this.topic} (${this.joinRef()})`, this.joinPush.timeout)\n      let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), this.timeout)\n      leavePush.send()\n      this.state = CHANNEL_STATES.errored\n      this.joinPush.reset()\n      if(this.socket.isConnected()){ this.rejoinTimer.scheduleTimeout() }\n    })\n    this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n      this.trigger(this.replyEventName(ref), payload)\n    })\n  }\n\n  /**\n   * Join the channel\n   * @param {integer} timeout\n   * @returns {Push}\n   */\n  join(timeout = this.timeout){\n    if(this.joinedOnce){\n      throw new Error(\"tried to join multiple times. 'join' can only be called a single time per channel instance\")\n    } else {\n      this.timeout = timeout\n      this.joinedOnce = true\n      this.rejoin()\n      return this.joinPush\n    }\n  }\n\n  /**\n   * Hook into channel close\n   * @param {Function} callback\n   */\n  onClose(callback){\n    this.on(CHANNEL_EVENTS.close, callback)\n  }\n\n  /**\n   * Hook into channel errors\n   * @param {Function} callback\n   */\n  onError(callback){\n    return this.on(CHANNEL_EVENTS.error, reason => callback(reason))\n  }\n\n  /**\n   * Subscribes on channel events\n   *\n   * Subscription returns a ref counter, which can be used later to\n   * unsubscribe the exact event listener\n   *\n   * @example\n   * const ref1 = channel.on(\"event\", do_stuff)\n   * const ref2 = channel.on(\"event\", do_other_stuff)\n   * channel.off(\"event\", ref1)\n   * // Since unsubscription, do_stuff won't fire,\n   * // while do_other_stuff will keep firing on the \"event\"\n   *\n   * @param {string} event\n   * @param {Function} callback\n   * @returns {integer} ref\n   */\n  on(event, callback){\n    let ref = this.bindingRef++\n    this.bindings.push({event, ref, callback})\n    return ref\n  }\n\n  /**\n   * Unsubscribes off of channel events\n   *\n   * Use the ref returned from a channel.on() to unsubscribe one\n   * handler, or pass nothing for the ref to unsubscribe all\n   * handlers for the given event.\n   *\n   * @example\n   * // Unsubscribe the do_stuff handler\n   * const ref1 = channel.on(\"event\", do_stuff)\n   * channel.off(\"event\", ref1)\n   *\n   * // Unsubscribe all handlers from event\n   * channel.off(\"event\")\n   *\n   * @param {string} event\n   * @param {integer} ref\n   */\n  off(event, ref){\n    this.bindings = this.bindings.filter((bind) => {\n      return !(bind.event === event && (typeof ref === \"undefined\" || ref === bind.ref))\n    })\n  }\n\n  /**\n   * @private\n   */\n  canPush(){ return this.socket.isConnected() && this.isJoined() }\n\n  /**\n   * Sends a message `event` to phoenix with the payload `payload`.\n   * Phoenix receives this in the `handle_in(event, payload, socket)`\n   * function. if phoenix replies or it times out (default 10000ms),\n   * then optionally the reply can be received.\n   *\n   * @example\n   * channel.push(\"event\")\n   *   .receive(\"ok\", payload => console.log(\"phoenix replied:\", payload))\n   *   .receive(\"error\", err => console.log(\"phoenix errored\", err))\n   *   .receive(\"timeout\", () => console.log(\"timed out pushing\"))\n   * @param {string} event\n   * @param {Object} payload\n   * @param {number} [timeout]\n   * @returns {Push}\n   */\n  push(event, payload, timeout = this.timeout){\n    payload = payload || {}\n    if(!this.joinedOnce){\n      throw new Error(`tried to push '${event}' to '${this.topic}' before joining. Use channel.join() before pushing events`)\n    }\n    let pushEvent = new Push(this, event, function (){ return payload }, timeout)\n    if(this.canPush()){\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  /** Leaves the channel\n   *\n   * Unsubscribes from server events, and\n   * instructs channel to terminate on server\n   *\n   * Triggers onClose() hooks\n   *\n   * To receive leave acknowledgements, use the `receive`\n   * hook to bind to the server ack, ie:\n   *\n   * @example\n   * channel.leave().receive(\"ok\", () => alert(\"left!\") )\n   *\n   * @param {integer} timeout\n   * @returns {Push}\n   */\n  leave(timeout = this.timeout){\n    this.rejoinTimer.reset()\n    this.joinPush.cancelTimeout()\n\n    this.state = CHANNEL_STATES.leaving\n    let onClose = () => {\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", `leave ${this.topic}`)\n      this.trigger(CHANNEL_EVENTS.close, \"leave\")\n    }\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), timeout)\n    leavePush.receive(\"ok\", () => onClose())\n      .receive(\"timeout\", () => onClose())\n    leavePush.send()\n    if(!this.canPush()){ leavePush.trigger(\"ok\", {}) }\n\n    return leavePush\n  }\n\n  /**\n   * Overridable message hook\n   *\n   * Receives all events for specialized message handling\n   * before dispatching to the channel callbacks.\n   *\n   * Must return the payload, modified or unmodified\n   * @param {string} event\n   * @param {Object} payload\n   * @param {integer} ref\n   * @returns {Object}\n   */\n  onMessage(_event, payload, _ref){ return payload }\n\n  /**\n   * @private\n   */\n  isMember(topic, event, payload, joinRef){\n    if(this.topic !== topic){ return false }\n\n    if(joinRef && joinRef !== this.joinRef()){\n      if(this.socket.hasLogger()) this.socket.log(\"channel\", \"dropping outdated message\", {topic, event, payload, joinRef})\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /**\n   * @private\n   */\n  joinRef(){ return this.joinPush.ref }\n\n  /**\n   * @private\n   */\n  rejoin(timeout = this.timeout){\n    if(this.isLeaving()){ return }\n    this.socket.leaveOpenTopic(this.topic)\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  /**\n   * @private\n   */\n  trigger(event, payload, ref, joinRef){\n    let handledPayload = this.onMessage(event, payload, ref, joinRef)\n    if(payload && !handledPayload){ throw new Error(\"channel onMessage callbacks must return the payload, modified or unmodified\") }\n\n    let eventBindings = this.bindings.filter(bind => bind.event === event)\n\n    for(let i = 0; i < eventBindings.length; i++){\n      let bind = eventBindings[i]\n      bind.callback(handledPayload, ref, joinRef || this.joinRef())\n    }\n  }\n\n  /**\n   * @private\n   */\n  replyEventName(ref){ return `chan_reply_${ref}` }\n\n  /**\n   * @private\n   */\n  isClosed(){ return this.state === CHANNEL_STATES.closed }\n\n  /**\n   * @private\n   */\n  isErrored(){ return this.state === CHANNEL_STATES.errored }\n\n  /**\n   * @private\n   */\n  isJoined(){ return this.state === CHANNEL_STATES.joined }\n\n  /**\n   * @private\n   */\n  isJoining(){ return this.state === CHANNEL_STATES.joining }\n\n  /**\n   * @private\n   */\n  isLeaving(){ return this.state === CHANNEL_STATES.leaving }\n}\n", "import {\n  global,\n  XHR_STATES\n} from \"./constants\"\n\nexport default class Ajax {\n\n  static request(method, endPoint, accept, body, timeout, ontimeout, callback){\n    if(global.XDomainRequest){\n      let req = new global.XDomainRequest() // IE8, IE9\n      return this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback)\n    } else {\n      let req = new global.XMLHttpRequest() // IE7+, Firefox, Chrome, Opera, Safari\n      return this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback)\n    }\n  }\n\n  static xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback){\n    req.timeout = timeout\n    req.open(method, endPoint)\n    req.onload = () => {\n      let response = this.parseJSON(req.responseText)\n      callback && callback(response)\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    // Work around bug in IE9 that requires an attached onprogress handler\n    req.onprogress = () => { }\n\n    req.send(body)\n    return req\n  }\n\n  static xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback){\n    req.open(method, endPoint, true)\n    req.timeout = timeout\n    req.setRequestHeader(\"Content-Type\", accept)\n    req.onerror = () => callback && callback(null)\n    req.onreadystatechange = () => {\n      if(req.readyState === XHR_STATES.complete && callback){\n        let response = this.parseJSON(req.responseText)\n        callback(response)\n      }\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    req.send(body)\n    return req\n  }\n\n  static parseJSON(resp){\n    if(!resp || resp === \"\"){ return null }\n\n    try {\n      return JSON.parse(resp)\n    } catch (e){\n      console && console.log(\"failed to parse JSON response\", resp)\n      return null\n    }\n  }\n\n  static serialize(obj, parentKey){\n    let queryStr = []\n    for(var key in obj){\n      if(!Object.prototype.hasOwnProperty.call(obj, key)){ continue }\n      let paramKey = parentKey ? `${parentKey}[${key}]` : key\n      let paramVal = obj[key]\n      if(typeof paramVal === \"object\"){\n        queryStr.push(this.serialize(paramVal, paramKey))\n      } else {\n        queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal))\n      }\n    }\n    return queryStr.join(\"&\")\n  }\n\n  static appendParams(url, params){\n    if(Object.keys(params).length === 0){ return url }\n\n    let prefix = url.match(/\\?/) ? \"&\" : \"?\"\n    return `${url}${prefix}${this.serialize(params)}`\n  }\n}\n", "import {\n  SOCKET_STATES,\n  TRANSPORTS\n} from \"./constants\"\n\nimport Ajax from \"./ajax\"\n\nlet arrayBufferToBase64 = (buffer) => {\n  let binary = \"\"\n  let bytes = new Uint8Array(buffer)\n  let len = bytes.byteLength\n  for(let i = 0; i < len; i++){ binary += String.fromCharCode(bytes[i]) }\n  return btoa(binary)\n}\n\nexport default class LongPoll {\n\n  constructor(endPoint){\n    this.endPoint = null\n    this.token = null\n    this.skipHeartbeat = true\n    this.reqs = new Set()\n    this.awaitingBatchAck = false\n    this.currentBatch = null\n    this.currentBatchTimer = null\n    this.batchBuffer = []\n    this.onopen = function (){ } // noop\n    this.onerror = function (){ } // noop\n    this.onmessage = function (){ } // noop\n    this.onclose = function (){ } // noop\n    this.pollEndpoint = this.normalizeEndpoint(endPoint)\n    this.readyState = SOCKET_STATES.connecting\n    // we must wait for the caller to finish setting up our callbacks and timeout properties\n    setTimeout(() => this.poll(), 0)\n  }\n\n  normalizeEndpoint(endPoint){\n    return (endPoint\n      .replace(\"ws://\", \"http://\")\n      .replace(\"wss://\", \"https://\")\n      .replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll))\n  }\n\n  endpointURL(){\n    return Ajax.appendParams(this.pollEndpoint, {token: this.token})\n  }\n\n  closeAndRetry(code, reason, wasClean){\n    this.close(code, reason, wasClean)\n    this.readyState = SOCKET_STATES.connecting\n  }\n\n  ontimeout(){\n    this.onerror(\"timeout\")\n    this.closeAndRetry(1005, \"timeout\", false)\n  }\n\n  isActive(){ return this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting }\n\n  poll(){\n    this.ajax(\"GET\", \"application/json\", null, () => this.ontimeout(), resp => {\n      if(resp){\n        var {status, token, messages} = resp\n        this.token = token\n      } else {\n        status = 0\n      }\n\n      switch(status){\n        case 200:\n          messages.forEach(msg => {\n            // Tasks are what things like event handlers, setTimeout callbacks,\n            // promise resolves and more are run within.\n            // In modern browsers, there are two different kinds of tasks,\n            // microtasks and macrotasks.\n            // Microtasks are mainly used for Promises, while macrotasks are\n            // used for everything else.\n            // Microtasks always have priority over macrotasks. If the JS engine\n            // is looking for a task to run, it will always try to empty the\n            // microtask queue before attempting to run anything from the\n            // macrotask queue.\n            //\n            // For the WebSocket transport, messages always arrive in their own\n            // event. This means that if any promises are resolved from within,\n            // their callbacks will always finish execution by the time the\n            // next message event handler is run.\n            //\n            // In order to emulate this behaviour, we need to make sure each\n            // onmessage handler is run within its own macrotask.\n            setTimeout(() => this.onmessage({data: msg}), 0)\n          })\n          this.poll()\n          break\n        case 204:\n          this.poll()\n          break\n        case 410:\n          this.readyState = SOCKET_STATES.open\n          this.onopen({})\n          this.poll()\n          break\n        case 403:\n          this.onerror(403)\n          this.close(1008, \"forbidden\", false)\n          break\n        case 0:\n        case 500:\n          this.onerror(500)\n          this.closeAndRetry(1011, \"internal server error\", 500)\n          break\n        default: throw new Error(`unhandled poll status ${status}`)\n      }\n    })\n  }\n\n  // we collect all pushes within the current event loop by\n  // setTimeout 0, which optimizes back-to-back procedural\n  // pushes against an empty buffer\n\n  send(body){\n    if(typeof(body) !== \"string\"){ body = arrayBufferToBase64(body) }\n    if(this.currentBatch){\n      this.currentBatch.push(body)\n    } else if(this.awaitingBatchAck){\n      this.batchBuffer.push(body)\n    } else {\n      this.currentBatch = [body]\n      this.currentBatchTimer = setTimeout(() => {\n        this.batchSend(this.currentBatch)\n        this.currentBatch = null\n      }, 0)\n    }\n  }\n\n  batchSend(messages){\n    this.awaitingBatchAck = true\n    this.ajax(\"POST\", \"application/x-ndjson\", messages.join(\"\\n\"), () => this.onerror(\"timeout\"), resp => {\n      this.awaitingBatchAck = false\n      if(!resp || resp.status !== 200){\n        this.onerror(resp && resp.status)\n        this.closeAndRetry(1011, \"internal server error\", false)\n      } else if(this.batchBuffer.length > 0){\n        this.batchSend(this.batchBuffer)\n        this.batchBuffer = []\n      }\n    })\n  }\n\n  close(code, reason, wasClean){\n    for(let req of this.reqs){ req.abort() }\n    this.readyState = SOCKET_STATES.closed\n    let opts = Object.assign({code: 1000, reason: undefined, wasClean: true}, {code, reason, wasClean})\n    this.batchBuffer = []\n    clearTimeout(this.currentBatchTimer)\n    this.currentBatchTimer = null\n    if(typeof(CloseEvent) !== \"undefined\"){\n      this.onclose(new CloseEvent(\"close\", opts))\n    } else {\n      this.onclose(opts)\n    }\n  }\n\n  ajax(method, contentType, body, onCallerTimeout, callback){\n    let req\n    let ontimeout = () => {\n      this.reqs.delete(req)\n      onCallerTimeout()\n    }\n    req = Ajax.request(method, this.endpointURL(), contentType, body, this.timeout, ontimeout, resp => {\n      this.reqs.delete(req)\n      if(this.isActive()){ callback(resp) }\n    })\n    this.reqs.add(req)\n  }\n}\n", "/**\n * Initializes the Presence\n * @param {Channel} channel - The Channel\n * @param {Object} opts - The options,\n *        for example `{events: {state: \"state\", diff: \"diff\"}}`\n */\nexport default class Presence {\n\n  constructor(channel, opts = {}){\n    let events = opts.events || {state: \"presence_state\", diff: \"presence_diff\"}\n    this.state = {}\n    this.pendingDiffs = []\n    this.channel = channel\n    this.joinRef = null\n    this.caller = {\n      onJoin: function (){ },\n      onLeave: function (){ },\n      onSync: function (){ }\n    }\n\n    this.channel.on(events.state, newState => {\n      let {onJoin, onLeave, onSync} = this.caller\n\n      this.joinRef = this.channel.joinRef()\n      this.state = Presence.syncState(this.state, newState, onJoin, onLeave)\n\n      this.pendingDiffs.forEach(diff => {\n        this.state = Presence.syncDiff(this.state, diff, onJoin, onLeave)\n      })\n      this.pendingDiffs = []\n      onSync()\n    })\n\n    this.channel.on(events.diff, diff => {\n      let {onJoin, onLeave, onSync} = this.caller\n\n      if(this.inPendingSyncState()){\n        this.pendingDiffs.push(diff)\n      } else {\n        this.state = Presence.syncDiff(this.state, diff, onJoin, onLeave)\n        onSync()\n      }\n    })\n  }\n\n  onJoin(callback){ this.caller.onJoin = callback }\n\n  onLeave(callback){ this.caller.onLeave = callback }\n\n  onSync(callback){ this.caller.onSync = callback }\n\n  list(by){ return Presence.list(this.state, by) }\n\n  inPendingSyncState(){\n    return !this.joinRef || (this.joinRef !== this.channel.joinRef())\n  }\n\n  // lower-level public static API\n\n  /**\n   * Used to sync the list of presences on the server\n   * with the client's state. An optional `onJoin` and `onLeave` callback can\n   * be provided to react to changes in the client's local presences across\n   * disconnects and reconnects with the server.\n   *\n   * @returns {Presence}\n   */\n  static syncState(currentState, newState, onJoin, onLeave){\n    let state = this.clone(currentState)\n    let joins = {}\n    let leaves = {}\n\n    this.map(state, (key, presence) => {\n      if(!newState[key]){\n        leaves[key] = presence\n      }\n    })\n    this.map(newState, (key, newPresence) => {\n      let currentPresence = state[key]\n      if(currentPresence){\n        let newRefs = newPresence.metas.map(m => m.phx_ref)\n        let curRefs = currentPresence.metas.map(m => m.phx_ref)\n        let joinedMetas = newPresence.metas.filter(m => curRefs.indexOf(m.phx_ref) < 0)\n        let leftMetas = currentPresence.metas.filter(m => newRefs.indexOf(m.phx_ref) < 0)\n        if(joinedMetas.length > 0){\n          joins[key] = newPresence\n          joins[key].metas = joinedMetas\n        }\n        if(leftMetas.length > 0){\n          leaves[key] = this.clone(currentPresence)\n          leaves[key].metas = leftMetas\n        }\n      } else {\n        joins[key] = newPresence\n      }\n    })\n    return this.syncDiff(state, {joins: joins, leaves: leaves}, onJoin, onLeave)\n  }\n\n  /**\n   *\n   * Used to sync a diff of presence join and leave\n   * events from the server, as they happen. Like `syncState`, `syncDiff`\n   * accepts optional `onJoin` and `onLeave` callbacks to react to a user\n   * joining or leaving from a device.\n   *\n   * @returns {Presence}\n   */\n  static syncDiff(state, diff, onJoin, onLeave){\n    let {joins, leaves} = this.clone(diff)\n    if(!onJoin){ onJoin = function (){ } }\n    if(!onLeave){ onLeave = function (){ } }\n\n    this.map(joins, (key, newPresence) => {\n      let currentPresence = state[key]\n      state[key] = this.clone(newPresence)\n      if(currentPresence){\n        let joinedRefs = state[key].metas.map(m => m.phx_ref)\n        let curMetas = currentPresence.metas.filter(m => joinedRefs.indexOf(m.phx_ref) < 0)\n        state[key].metas.unshift(...curMetas)\n      }\n      onJoin(key, currentPresence, newPresence)\n    })\n    this.map(leaves, (key, leftPresence) => {\n      let currentPresence = state[key]\n      if(!currentPresence){ return }\n      let refsToRemove = leftPresence.metas.map(m => m.phx_ref)\n      currentPresence.metas = currentPresence.metas.filter(p => {\n        return refsToRemove.indexOf(p.phx_ref) < 0\n      })\n      onLeave(key, currentPresence, leftPresence)\n      if(currentPresence.metas.length === 0){\n        delete state[key]\n      }\n    })\n    return state\n  }\n\n  /**\n   * Returns the array of presences, with selected metadata.\n   *\n   * @param {Object} presences\n   * @param {Function} chooser\n   *\n   * @returns {Presence}\n   */\n  static list(presences, chooser){\n    if(!chooser){ chooser = function (key, pres){ return pres } }\n\n    return this.map(presences, (key, presence) => {\n      return chooser(key, presence)\n    })\n  }\n\n  // private\n\n  static map(obj, func){\n    return Object.getOwnPropertyNames(obj).map(key => func(key, obj[key]))\n  }\n\n  static clone(obj){ return JSON.parse(JSON.stringify(obj)) }\n}\n", "/* The default serializer for encoding and decoding messages */\nimport {\n  CHANNEL_EVENTS\n} from \"./constants\"\n\nexport default {\n  HEADER_LENGTH: 1,\n  META_LENGTH: 4,\n  KINDS: {push: 0, reply: 1, broadcast: 2},\n\n  encode(msg, callback){\n    if(msg.payload.constructor === ArrayBuffer){\n      return callback(this.binaryEncode(msg))\n    } else {\n      let payload = [msg.join_ref, msg.ref, msg.topic, msg.event, msg.payload]\n      return callback(JSON.stringify(payload))\n    }\n  },\n\n  decode(rawPayload, callback){\n    if(rawPayload.constructor === ArrayBuffer){\n      return callback(this.binaryDecode(rawPayload))\n    } else {\n      let [join_ref, ref, topic, event, payload] = JSON.parse(rawPayload)\n      return callback({join_ref, ref, topic, event, payload})\n    }\n  },\n\n  // private\n\n  binaryEncode(message){\n    let {join_ref, ref, event, topic, payload} = message\n    let metaLength = this.META_LENGTH + join_ref.length + ref.length + topic.length + event.length\n    let header = new ArrayBuffer(this.HEADER_LENGTH + metaLength)\n    let view = new DataView(header)\n    let offset = 0\n\n    view.setUint8(offset++, this.KINDS.push) // kind\n    view.setUint8(offset++, join_ref.length)\n    view.setUint8(offset++, ref.length)\n    view.setUint8(offset++, topic.length)\n    view.setUint8(offset++, event.length)\n    Array.from(join_ref, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(ref, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(topic, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(event, char => view.setUint8(offset++, char.charCodeAt(0)))\n\n    var combined = new Uint8Array(header.byteLength + payload.byteLength)\n    combined.set(new Uint8Array(header), 0)\n    combined.set(new Uint8Array(payload), header.byteLength)\n\n    return combined.buffer\n  },\n\n  binaryDecode(buffer){\n    let view = new DataView(buffer)\n    let kind = view.getUint8(0)\n    let decoder = new TextDecoder()\n    switch(kind){\n      case this.KINDS.push: return this.decodePush(buffer, view, decoder)\n      case this.KINDS.reply: return this.decodeReply(buffer, view, decoder)\n      case this.KINDS.broadcast: return this.decodeBroadcast(buffer, view, decoder)\n    }\n  },\n\n  decodePush(buffer, view, decoder){\n    let joinRefSize = view.getUint8(1)\n    let topicSize = view.getUint8(2)\n    let eventSize = view.getUint8(3)\n    let offset = this.HEADER_LENGTH + this.META_LENGTH - 1 // pushes have no ref\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize))\n    offset = offset + joinRefSize\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n    return {join_ref: joinRef, ref: null, topic: topic, event: event, payload: data}\n  },\n\n  decodeReply(buffer, view, decoder){\n    let joinRefSize = view.getUint8(1)\n    let refSize = view.getUint8(2)\n    let topicSize = view.getUint8(3)\n    let eventSize = view.getUint8(4)\n    let offset = this.HEADER_LENGTH + this.META_LENGTH\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize))\n    offset = offset + joinRefSize\n    let ref = decoder.decode(buffer.slice(offset, offset + refSize))\n    offset = offset + refSize\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n    let payload = {status: event, response: data}\n    return {join_ref: joinRef, ref: ref, topic: topic, event: CHANNEL_EVENTS.reply, payload: payload}\n  },\n\n  decodeBroadcast(buffer, view, decoder){\n    let topicSize = view.getUint8(1)\n    let eventSize = view.getUint8(2)\n    let offset = this.HEADER_LENGTH + 2\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n\n    return {join_ref: null, ref: null, topic: topic, event: event, payload: data}\n  }\n}\n", "import {\n  global,\n  phxWindow,\n  CHANNEL_EVENTS,\n  DEFAULT_TIMEOUT,\n  DEFAULT_VSN,\n  SOCKET_STATES,\n  TRANSPORTS,\n  WS_CLOSE_NORMAL\n} from \"./constants\"\n\nimport {\n  closure\n} from \"./utils\"\n\nimport Ajax from \"./ajax\"\nimport Channel from \"./channel\"\nimport LongPoll from \"./longpoll\"\nimport Serializer from \"./serializer\"\nimport Timer from \"./timer\"\n\n/** Initializes the Socket *\n *\n * For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"ws://example.com/socket\"`,\n *                                               `\"wss://example.com\"`\n *                                               `\"/socket\"` (inherited host & protocol)\n * @param {Object} [opts] - Optional configuration\n * @param {Function} [opts.transport] - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n *\n * Defaults to WebSocket with automatic LongPoll fallback if WebSocket is not defined.\n * To fallback to LongPoll when WebSocket attempts fail, use `longPollFallbackMs: 2500`.\n *\n * @param {Function} [opts.longPollFallbackMs] - The millisecond time to attempt the primary transport\n * before falling back to the LongPoll transport. Disabled by default.\n *\n * @param {Function} [opts.debug] - When true, enables debug logging. Default false.\n *\n * @param {Function} [opts.encode] - The function to encode outgoing messages.\n *\n * Defaults to JSON encoder.\n *\n * @param {Function} [opts.decode] - The function to decode incoming messages.\n *\n * Defaults to JSON:\n *\n * ```javascript\n * (payload, callback) => callback(JSON.parse(payload))\n * ```\n *\n * @param {number} [opts.timeout] - The default timeout in milliseconds to trigger push timeouts.\n *\n * Defaults `DEFAULT_TIMEOUT`\n * @param {number} [opts.heartbeatIntervalMs] - The millisec interval to send a heartbeat message\n * @param {number} [opts.reconnectAfterMs] - The optional function that returns the millisec\n * socket reconnect interval.\n *\n * Defaults to stepped backoff of:\n *\n * ```javascript\n * function(tries){\n *   return [10, 50, 100, 150, 200, 250, 500, 1000, 2000][tries - 1] || 5000\n * }\n * ````\n *\n * @param {number} [opts.rejoinAfterMs] - The optional function that returns the millisec\n * rejoin interval for individual channels.\n *\n * ```javascript\n * function(tries){\n *   return [1000, 2000, 5000][tries - 1] || 10000\n * }\n * ````\n *\n * @param {Function} [opts.logger] - The optional function for specialized logging, ie:\n *\n * ```javascript\n * function(kind, msg, data) {\n *   console.log(`${kind}: ${msg}`, data)\n * }\n * ```\n *\n * @param {number} [opts.longpollerTimeout] - The maximum timeout of a long poll AJAX request.\n *\n * Defaults to 20s (double the server long poll timer).\n *\n * @param {(Object|function)} [opts.params] - The optional params to pass when connecting\n * @param {string} [opts.binaryType] - The binary type to use for binary WebSocket frames.\n *\n * Defaults to \"arraybuffer\"\n *\n * @param {vsn} [opts.vsn] - The serializer's protocol version to send on connect.\n *\n * Defaults to DEFAULT_VSN.\n *\n * @param {Object} [opts.sessionStorage] - An optional Storage compatible object\n * Phoenix uses sessionStorage for longpoll fallback history. Overriding the store is\n * useful when Phoenix won't have access to `sessionStorage`. For example, This could\n * happen if a site loads a cross-domain channel in an iframe. Example usage:\n *\n *     class InMemoryStorage {\n *       constructor() { this.storage = {} }\n *       getItem(keyName) { return this.storage[keyName] || null }\n *       removeItem(keyName) { delete this.storage[keyName] }\n *       setItem(keyName, keyValue) { this.storage[keyName] = keyValue }\n *     }\n *\n*/\nexport default class Socket {\n  constructor(endPoint, opts = {}){\n    this.stateChangeCallbacks = {open: [], close: [], error: [], message: []}\n    this.channels = []\n    this.sendBuffer = []\n    this.ref = 0\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT\n    this.transport = opts.transport || global.WebSocket || LongPoll\n    this.primaryPassedHealthCheck = false\n    this.longPollFallbackMs = opts.longPollFallbackMs\n    this.fallbackTimer = null\n    this.sessionStore = opts.sessionStorage || (global && global.sessionStorage)\n    this.establishedConnections = 0\n    this.defaultEncoder = Serializer.encode.bind(Serializer)\n    this.defaultDecoder = Serializer.decode.bind(Serializer)\n    this.closeWasClean = false\n    this.binaryType = opts.binaryType || \"arraybuffer\"\n    this.connectClock = 1\n    if(this.transport !== LongPoll){\n      this.encode = opts.encode || this.defaultEncoder\n      this.decode = opts.decode || this.defaultDecoder\n    } else {\n      this.encode = this.defaultEncoder\n      this.decode = this.defaultDecoder\n    }\n    let awaitingConnectionOnPageShow = null\n    if(phxWindow && phxWindow.addEventListener){\n      phxWindow.addEventListener(\"pagehide\", _e => {\n        if(this.conn){\n          this.disconnect()\n          awaitingConnectionOnPageShow = this.connectClock\n        }\n      })\n      phxWindow.addEventListener(\"pageshow\", _e => {\n        if(awaitingConnectionOnPageShow === this.connectClock){\n          awaitingConnectionOnPageShow = null\n          this.connect()\n        }\n      })\n    }\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000\n    this.rejoinAfterMs = (tries) => {\n      if(opts.rejoinAfterMs){\n        return opts.rejoinAfterMs(tries)\n      } else {\n        return [1000, 2000, 5000][tries - 1] || 10000\n      }\n    }\n    this.reconnectAfterMs = (tries) => {\n      if(opts.reconnectAfterMs){\n        return opts.reconnectAfterMs(tries)\n      } else {\n        return [10, 50, 100, 150, 200, 250, 500, 1000, 2000][tries - 1] || 5000\n      }\n    }\n    this.logger = opts.logger || null\n    if(!this.logger && opts.debug){\n      this.logger = (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n    }\n    this.longpollerTimeout = opts.longpollerTimeout || 20000\n    this.params = closure(opts.params || {})\n    this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`\n    this.vsn = opts.vsn || DEFAULT_VSN\n    this.heartbeatTimeoutTimer = null\n    this.heartbeatTimer = null\n    this.pendingHeartbeatRef = null\n    this.reconnectTimer = new Timer(() => {\n      this.teardown(() => this.connect())\n    }, this.reconnectAfterMs)\n  }\n\n  /**\n   * Returns the LongPoll transport reference\n   */\n  getLongPollTransport(){ return LongPoll }\n\n  /**\n   * Disconnects and replaces the active transport\n   *\n   * @param {Function} newTransport - The new transport class to instantiate\n   *\n   */\n  replaceTransport(newTransport){\n    this.connectClock++\n    this.closeWasClean = true\n    clearTimeout(this.fallbackTimer)\n    this.reconnectTimer.reset()\n    if(this.conn){\n      this.conn.close()\n      this.conn = null\n    }\n    this.transport = newTransport\n  }\n\n  /**\n   * Returns the socket protocol\n   *\n   * @returns {string}\n   */\n  protocol(){ return location.protocol.match(/^https/) ? \"wss\" : \"ws\" }\n\n  /**\n   * The fully qualified socket url\n   *\n   * @returns {string}\n   */\n  endPointURL(){\n    let uri = Ajax.appendParams(\n      Ajax.appendParams(this.endPoint, this.params()), {vsn: this.vsn})\n    if(uri.charAt(0) !== \"/\"){ return uri }\n    if(uri.charAt(1) === \"/\"){ return `${this.protocol()}:${uri}` }\n\n    return `${this.protocol()}://${location.host}${uri}`\n  }\n\n  /**\n   * Disconnects the socket\n   *\n   * See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes for valid status codes.\n   *\n   * @param {Function} callback - Optional callback which is called after socket is disconnected.\n   * @param {integer} code - A status code for disconnection (Optional).\n   * @param {string} reason - A textual description of the reason to disconnect. (Optional)\n   */\n  disconnect(callback, code, reason){\n    this.connectClock++\n    this.closeWasClean = true\n    clearTimeout(this.fallbackTimer)\n    this.reconnectTimer.reset()\n    this.teardown(callback, code, reason)\n  }\n\n  /**\n   *\n   * @param {Object} params - The params to send when connecting, for example `{user_id: userToken}`\n   *\n   * Passing params to connect is deprecated; pass them in the Socket constructor instead:\n   * `new Socket(\"/socket\", {params: {user_id: userToken}})`.\n   */\n  connect(params){\n    if(params){\n      console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\")\n      this.params = closure(params)\n    }\n    if(this.conn){ return }\n    if(this.longPollFallbackMs && this.transport !== LongPoll){\n      this.connectWithFallback(LongPoll, this.longPollFallbackMs)\n    } else {\n      this.transportConnect()\n    }\n  }\n\n  /**\n   * Logs the message. Override `this.logger` for specialized logging. noops by default\n   * @param {string} kind\n   * @param {string} msg\n   * @param {Object} data\n   */\n  log(kind, msg, data){ this.logger && this.logger(kind, msg, data) }\n\n  /**\n   * Returns true if a logger has been set on this socket.\n   */\n  hasLogger(){ return this.logger !== null }\n\n  /**\n   * Registers callbacks for connection open events\n   *\n   * @example socket.onOpen(function(){ console.info(\"the socket was opened\") })\n   *\n   * @param {Function} callback\n   */\n  onOpen(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.open.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection close events\n   * @param {Function} callback\n   */\n  onClose(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.close.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection error events\n   *\n   * @example socket.onError(function(error){ alert(\"An error occurred\") })\n   *\n   * @param {Function} callback\n   */\n  onError(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.error.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection message events\n   * @param {Function} callback\n   */\n  onMessage(callback){\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.message.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Pings the server and invokes the callback with the RTT in milliseconds\n   * @param {Function} callback\n   *\n   * Returns true if the ping was pushed or false if unable to be pushed.\n   */\n  ping(callback){\n    if(!this.isConnected()){ return false }\n    let ref = this.makeRef()\n    let startTime = Date.now()\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: ref})\n    let onMsgRef = this.onMessage(msg => {\n      if(msg.ref === ref){\n        this.off([onMsgRef])\n        callback(Date.now() - startTime)\n      }\n    })\n    return true\n  }\n\n  /**\n   * @private\n   */\n\n  transportConnect(){\n    this.connectClock++\n    this.closeWasClean = false\n    this.conn = new this.transport(this.endPointURL())\n    this.conn.binaryType = this.binaryType\n    this.conn.timeout = this.longpollerTimeout\n    this.conn.onopen = () => this.onConnOpen()\n    this.conn.onerror = error => this.onConnError(error)\n    this.conn.onmessage = event => this.onConnMessage(event)\n    this.conn.onclose = event => this.onConnClose(event)\n  }\n\n  getSession(key){ return this.sessionStore && this.sessionStore.getItem(key) }\n\n  storeSession(key, val){ this.sessionStore && this.sessionStore.setItem(key, val) }\n\n  connectWithFallback(fallbackTransport, fallbackThreshold = 2500){\n    clearTimeout(this.fallbackTimer)\n    let established = false\n    let primaryTransport = true\n    let openRef, errorRef\n    let fallback = (reason) => {\n      this.log(\"transport\", `falling back to ${fallbackTransport.name}...`, reason)\n      this.off([openRef, errorRef])\n      primaryTransport = false\n      this.replaceTransport(fallbackTransport)\n      this.transportConnect()\n    }\n    if(this.getSession(`phx:fallback:${fallbackTransport.name}`)){ return fallback(\"memorized\") }\n\n    this.fallbackTimer = setTimeout(fallback, fallbackThreshold)\n\n    errorRef = this.onError(reason => {\n      this.log(\"transport\", \"error\", reason)\n      if(primaryTransport && !established){\n        clearTimeout(this.fallbackTimer)\n        fallback(reason)\n      }\n    })\n    this.onOpen(() => {\n      established = true\n      if(!primaryTransport){\n        // only memorize LP if we never connected to primary\n        if(!this.primaryPassedHealthCheck){ this.storeSession(`phx:fallback:${fallbackTransport.name}`, \"true\") }\n        return this.log(\"transport\", `established ${fallbackTransport.name} fallback`)\n      }\n      // if we've established primary, give the fallback a new period to attempt ping\n      clearTimeout(this.fallbackTimer)\n      this.fallbackTimer = setTimeout(fallback, fallbackThreshold)\n      this.ping(rtt => {\n        this.log(\"transport\", \"connected to primary after\", rtt)\n        this.primaryPassedHealthCheck = true\n        clearTimeout(this.fallbackTimer)\n      })\n    })\n    this.transportConnect()\n  }\n\n  clearHeartbeats(){\n    clearTimeout(this.heartbeatTimer)\n    clearTimeout(this.heartbeatTimeoutTimer)\n  }\n\n  onConnOpen(){\n    if(this.hasLogger()) this.log(\"transport\", `${this.transport.name} connected to ${this.endPointURL()}`)\n    this.closeWasClean = false\n    this.establishedConnections++\n    this.flushSendBuffer()\n    this.reconnectTimer.reset()\n    this.resetHeartbeat()\n    this.stateChangeCallbacks.open.forEach(([, callback]) => callback())\n  }\n\n  /**\n   * @private\n   */\n\n  heartbeatTimeout(){\n    if(this.pendingHeartbeatRef){\n      this.pendingHeartbeatRef = null\n      if(this.hasLogger()){ this.log(\"transport\", \"heartbeat timeout. Attempting to re-establish connection\") }\n      this.triggerChanError()\n      this.closeWasClean = false\n      this.teardown(() => this.reconnectTimer.scheduleTimeout(), WS_CLOSE_NORMAL, \"heartbeat timeout\")\n    }\n  }\n\n  resetHeartbeat(){\n    if(this.conn && this.conn.skipHeartbeat){ return }\n    this.pendingHeartbeatRef = null\n    this.clearHeartbeats()\n    this.heartbeatTimer = setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n  }\n\n  teardown(callback, code, reason){\n    if(!this.conn){\n      return callback && callback()\n    }\n\n    this.waitForBufferDone(() => {\n      if(this.conn){\n        if(code){ this.conn.close(code, reason || \"\") } else { this.conn.close() }\n      }\n\n      this.waitForSocketClosed(() => {\n        if(this.conn){\n          this.conn.onopen = function (){ } // noop\n          this.conn.onerror = function (){ } // noop\n          this.conn.onmessage = function (){ } // noop\n          this.conn.onclose = function (){ } // noop\n          this.conn = null\n        }\n\n        callback && callback()\n      })\n    })\n  }\n\n  waitForBufferDone(callback, tries = 1){\n    if(tries === 5 || !this.conn || !this.conn.bufferedAmount){\n      callback()\n      return\n    }\n\n    setTimeout(() => {\n      this.waitForBufferDone(callback, tries + 1)\n    }, 150 * tries)\n  }\n\n  waitForSocketClosed(callback, tries = 1){\n    if(tries === 5 || !this.conn || this.conn.readyState === SOCKET_STATES.closed){\n      callback()\n      return\n    }\n\n    setTimeout(() => {\n      this.waitForSocketClosed(callback, tries + 1)\n    }, 150 * tries)\n  }\n\n  onConnClose(event){\n    let closeCode = event && event.code\n    if(this.hasLogger()) this.log(\"transport\", \"close\", event)\n    this.triggerChanError()\n    this.clearHeartbeats()\n    if(!this.closeWasClean && closeCode !== 1000){\n      this.reconnectTimer.scheduleTimeout()\n    }\n    this.stateChangeCallbacks.close.forEach(([, callback]) => callback(event))\n  }\n\n  /**\n   * @private\n   */\n  onConnError(error){\n    if(this.hasLogger()) this.log(\"transport\", error)\n    let transportBefore = this.transport\n    let establishedBefore = this.establishedConnections\n    this.stateChangeCallbacks.error.forEach(([, callback]) => {\n      callback(error, transportBefore, establishedBefore)\n    })\n    if(transportBefore === this.transport || establishedBefore > 0){\n      this.triggerChanError()\n    }\n  }\n\n  /**\n   * @private\n   */\n  triggerChanError(){\n    this.channels.forEach(channel => {\n      if(!(channel.isErrored() || channel.isLeaving() || channel.isClosed())){\n        channel.trigger(CHANNEL_EVENTS.error)\n      }\n    })\n  }\n\n  /**\n   * @returns {string}\n   */\n  connectionState(){\n    switch(this.conn && this.conn.readyState){\n      case SOCKET_STATES.connecting: return \"connecting\"\n      case SOCKET_STATES.open: return \"open\"\n      case SOCKET_STATES.closing: return \"closing\"\n      default: return \"closed\"\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isConnected(){ return this.connectionState() === \"open\" }\n\n  /**\n   * @private\n   *\n   * @param {Channel}\n   */\n  remove(channel){\n    this.off(channel.stateChangeRefs)\n    this.channels = this.channels.filter(c => c !== channel)\n  }\n\n  /**\n   * Removes `onOpen`, `onClose`, `onError,` and `onMessage` registrations.\n   *\n   * @param {refs} - list of refs returned by calls to\n   *                 `onOpen`, `onClose`, `onError,` and `onMessage`\n   */\n  off(refs){\n    for(let key in this.stateChangeCallbacks){\n      this.stateChangeCallbacks[key] = this.stateChangeCallbacks[key].filter(([ref]) => {\n        return refs.indexOf(ref) === -1\n      })\n    }\n  }\n\n  /**\n   * Initiates a new channel for the given topic\n   *\n   * @param {string} topic\n   * @param {Object} chanParams - Parameters for the channel\n   * @returns {Channel}\n   */\n  channel(topic, chanParams = {}){\n    let chan = new Channel(topic, chanParams, this)\n    this.channels.push(chan)\n    return chan\n  }\n\n  /**\n   * @param {Object} data\n   */\n  push(data){\n    if(this.hasLogger()){\n      let {topic, event, payload, ref, join_ref} = data\n      this.log(\"push\", `${topic} ${event} (${join_ref}, ${ref})`, payload)\n    }\n\n    if(this.isConnected()){\n      this.encode(data, result => this.conn.send(result))\n    } else {\n      this.sendBuffer.push(() => this.encode(data, result => this.conn.send(result)))\n    }\n  }\n\n  /**\n   * Return the next message ref, accounting for overflows\n   * @returns {string}\n   */\n  makeRef(){\n    let newRef = this.ref + 1\n    if(newRef === this.ref){ this.ref = 0 } else { this.ref = newRef }\n\n    return this.ref.toString()\n  }\n\n  sendHeartbeat(){\n    if(this.pendingHeartbeatRef && !this.isConnected()){ return }\n    this.pendingHeartbeatRef = this.makeRef()\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.pendingHeartbeatRef})\n    this.heartbeatTimeoutTimer = setTimeout(() => this.heartbeatTimeout(), this.heartbeatIntervalMs)\n  }\n\n  flushSendBuffer(){\n    if(this.isConnected() && this.sendBuffer.length > 0){\n      this.sendBuffer.forEach(callback => callback())\n      this.sendBuffer = []\n    }\n  }\n\n  onConnMessage(rawMessage){\n    this.decode(rawMessage.data, msg => {\n      let {topic, event, payload, ref, join_ref} = msg\n      if(ref && ref === this.pendingHeartbeatRef){\n        this.clearHeartbeats()\n        this.pendingHeartbeatRef = null\n        this.heartbeatTimer = setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n      }\n\n      if(this.hasLogger()) this.log(\"receive\", `${payload.status || \"\"} ${topic} ${event} ${ref && \"(\" + ref + \")\" || \"\"}`, payload)\n\n      for(let i = 0; i < this.channels.length; i++){\n        const channel = this.channels[i]\n        if(!channel.isMember(topic, event, payload, join_ref)){ continue }\n        channel.trigger(event, payload, ref, join_ref)\n      }\n\n      for(let i = 0; i < this.stateChangeCallbacks.message.length; i++){\n        let [, callback] = this.stateChangeCallbacks.message[i]\n        callback(msg)\n      }\n    })\n  }\n\n  leaveOpenTopic(topic){\n    let dupChannel = this.channels.find(c => c.topic === topic && (c.isJoined() || c.isJoining()))\n    if(dupChannel){\n      if(this.hasLogger()) this.log(\"transport\", `leaving duplicate topic \"${topic}\"`)\n      dupChannel.leave()\n    }\n  }\n}\n", "export const CONSECUTIVE_RELOADS = \"consecutive-reloads\"\nexport const MAX_RELOADS = 10\nexport const RELOAD_JITTER_MIN = 5000\nexport const RELOAD_JITTER_MAX = 10000\nexport const FAILSAFE_JITTER = 30000\nexport const PHX_EVENT_CLASSES = [\n  \"phx-click-loading\", \"phx-change-loading\", \"phx-submit-loading\",\n  \"phx-keydown-loading\", \"phx-keyup-loading\", \"phx-blur-loading\", \"phx-focus-loading\",\n  \"phx-hook-loading\"\n]\nexport const PHX_COMPONENT = \"data-phx-component\"\nexport const PHX_LIVE_LINK = \"data-phx-link\"\nexport const PHX_TRACK_STATIC = \"track-static\"\nexport const PHX_LINK_STATE = \"data-phx-link-state\"\nexport const PHX_REF = \"data-phx-ref\"\nexport const PHX_REF_SRC = \"data-phx-ref-src\"\nexport const PHX_TRACK_UPLOADS = \"track-uploads\"\nexport const PHX_UPLOAD_REF = \"data-phx-upload-ref\"\nexport const PHX_PREFLIGHTED_REFS = \"data-phx-preflighted-refs\"\nexport const PHX_DONE_REFS = \"data-phx-done-refs\"\nexport const PHX_DROP_TARGET = \"drop-target\"\nexport const PHX_ACTIVE_ENTRY_REFS = \"data-phx-active-refs\"\nexport const PHX_LIVE_FILE_UPDATED = \"phx:live-file:updated\"\nexport const PHX_SKIP = \"data-phx-skip\"\nexport const PHX_MAGIC_ID = \"data-phx-id\"\nexport const PHX_PRUNE = \"data-phx-prune\"\nexport const PHX_PAGE_LOADING = \"page-loading\"\nexport const PHX_CONNECTED_CLASS = \"phx-connected\"\nexport const PHX_LOADING_CLASS = \"phx-loading\"\nexport const PHX_NO_FEEDBACK_CLASS = \"phx-no-feedback\"\nexport const PHX_ERROR_CLASS = \"phx-error\"\nexport const PHX_CLIENT_ERROR_CLASS = \"phx-client-error\"\nexport const PHX_SERVER_ERROR_CLASS = \"phx-server-error\"\nexport const PHX_PARENT_ID = \"data-phx-parent-id\"\nexport const PHX_MAIN = \"data-phx-main\"\nexport const PHX_ROOT_ID = \"data-phx-root-id\"\nexport const PHX_VIEWPORT_TOP = \"viewport-top\"\nexport const PHX_VIEWPORT_BOTTOM = \"viewport-bottom\"\nexport const PHX_TRIGGER_ACTION = \"trigger-action\"\nexport const PHX_FEEDBACK_FOR = \"feedback-for\"\nexport const PHX_FEEDBACK_GROUP = \"feedback-group\"\nexport const PHX_HAS_FOCUSED = \"phx-has-focused\"\nexport const FOCUSABLE_INPUTS = [\"text\", \"textarea\", \"number\", \"email\", \"password\", \"search\", \"tel\", \"url\", \"date\", \"time\", \"datetime-local\", \"color\", \"range\"]\nexport const CHECKABLE_INPUTS = [\"checkbox\", \"radio\"]\nexport const PHX_HAS_SUBMITTED = \"phx-has-submitted\"\nexport const PHX_SESSION = \"data-phx-session\"\nexport const PHX_VIEW_SELECTOR = `[${PHX_SESSION}]`\nexport const PHX_STICKY = \"data-phx-sticky\"\nexport const PHX_STATIC = \"data-phx-static\"\nexport const PHX_READONLY = \"data-phx-readonly\"\nexport const PHX_DISABLED = \"data-phx-disabled\"\nexport const PHX_DISABLE_WITH = \"disable-with\"\nexport const PHX_DISABLE_WITH_RESTORE = \"data-phx-disable-with-restore\"\nexport const PHX_HOOK = \"hook\"\nexport const PHX_DEBOUNCE = \"debounce\"\nexport const PHX_THROTTLE = \"throttle\"\nexport const PHX_UPDATE = \"update\"\nexport const PHX_STREAM = \"stream\"\nexport const PHX_STREAM_REF = \"data-phx-stream\"\nexport const PHX_KEY = \"key\"\nexport const PHX_PRIVATE = \"phxPrivate\"\nexport const PHX_AUTO_RECOVER = \"auto-recover\"\nexport const PHX_LV_DEBUG = \"phx:live-socket:debug\"\nexport const PHX_LV_PROFILE = \"phx:live-socket:profiling\"\nexport const PHX_LV_LATENCY_SIM = \"phx:live-socket:latency-sim\"\nexport const PHX_PROGRESS = \"progress\"\nexport const PHX_MOUNTED = \"mounted\"\nexport const LOADER_TIMEOUT = 1\nexport const BEFORE_UNLOAD_LOADER_TIMEOUT = 200\nexport const BINDING_PREFIX = \"phx-\"\nexport const PUSH_TIMEOUT = 30000\nexport const LINK_HEADER = \"x-requested-with\"\nexport const RESPONSE_URL_HEADER = \"x-response-url\"\nexport const DEBOUNCE_TRIGGER = \"debounce-trigger\"\nexport const THROTTLED = \"throttled\"\nexport const DEBOUNCE_PREV_KEY = \"debounce-prev-key\"\nexport const DEFAULTS = {\n  debounce: 300,\n  throttle: 300\n}\n\n// Rendered\nexport const DYNAMICS = \"d\"\nexport const STATIC = \"s\"\nexport const ROOT = \"r\"\nexport const COMPONENTS = \"c\"\nexport const EVENTS = \"e\"\nexport const REPLY = \"r\"\nexport const TITLE = \"t\"\nexport const TEMPLATES = \"p\"\nexport const STREAM = \"stream\"", "import {\n  logError\n} from \"./utils\"\n\nexport default class EntryUploader {\n  constructor(entry, chunkSize, liveSocket){\n    this.liveSocket = liveSocket\n    this.entry = entry\n    this.offset = 0\n    this.chunkSize = chunkSize\n    this.chunkTimer = null\n    this.errored = false\n    this.uploadChannel = liveSocket.channel(`lvu:${entry.ref}`, {token: entry.metadata()})\n  }\n\n  error(reason){\n    if(this.errored){ return }\n    this.uploadChannel.leave()\n    this.errored = true\n    clearTimeout(this.chunkTimer)\n    this.entry.error(reason)\n  }\n\n  upload(){\n    this.uploadChannel.onError(reason => this.error(reason))\n    this.uploadChannel.join()\n      .receive(\"ok\", _data => this.readNextChunk())\n      .receive(\"error\", reason => this.error(reason))\n  }\n\n  isDone(){ return this.offset >= this.entry.file.size }\n\n  readNextChunk(){\n    let reader = new window.FileReader()\n    let blob = this.entry.file.slice(this.offset, this.chunkSize + this.offset)\n    reader.onload = (e) => {\n      if(e.target.error === null){\n        this.offset += e.target.result.byteLength\n        this.pushChunk(e.target.result)\n      } else {\n        return logError(\"Read error: \" + e.target.error)\n      }\n    }\n    reader.readAsArrayBuffer(blob)\n  }\n\n  pushChunk(chunk){\n    if(!this.uploadChannel.isJoined()){ return }\n    this.uploadChannel.push(\"chunk\", chunk)\n      .receive(\"ok\", () => {\n        this.entry.progress((this.offset / this.entry.file.size) * 100)\n        if(!this.isDone()){\n          this.chunkTimer = setTimeout(() => this.readNextChunk(), this.liveSocket.getLatencySim() || 0)\n        }\n      })\n      .receive(\"error\", ({reason}) => this.error(reason))\n  }\n}\n", "import {\n  PHX_VIEW_SELECTOR\n} from \"./constants\"\n\nimport EntryUploader from \"./entry_uploader\"\n\nexport let logError = (msg, obj) => console.error && console.error(msg, obj)\n\nexport let isCid = (cid) => {\n  let type = typeof(cid)\n  return type === \"number\" || (type === \"string\" && /^(0|[1-9]\\d*)$/.test(cid))\n}\n\nexport function detectDuplicateIds(){\n  let ids = new Set()\n  let elems = document.querySelectorAll(\"*[id]\")\n  for(let i = 0, len = elems.length; i < len; i++){\n    if(ids.has(elems[i].id)){\n      console.error(`Multiple IDs detected: ${elems[i].id}. Ensure unique element ids.`)\n    } else {\n      ids.add(elems[i].id)\n    }\n  }\n}\n\nexport let debug = (view, kind, msg, obj) => {\n  if(view.liveSocket.isDebugEnabled()){\n    console.log(`${view.id} ${kind}: ${msg} - `, obj)\n  }\n}\n\n// wraps value in closure or returns closure\nexport let closure = (val) => typeof val === \"function\" ? val : function (){ return val }\n\nexport let clone = (obj) => { return JSON.parse(JSON.stringify(obj)) }\n\nexport let closestPhxBinding = (el, binding, borderEl) => {\n  do {\n    if(el.matches(`[${binding}]`) && !el.disabled){ return el }\n    el = el.parentElement || el.parentNode\n  } while(el !== null && el.nodeType === 1 && !((borderEl && borderEl.isSameNode(el)) || el.matches(PHX_VIEW_SELECTOR)))\n  return null\n}\n\nexport let isObject = (obj) => {\n  return obj !== null && typeof obj === \"object\" && !(obj instanceof Array)\n}\n\nexport let isEqualObj = (obj1, obj2) => JSON.stringify(obj1) === JSON.stringify(obj2)\n\nexport let isEmpty = (obj) => {\n  for(let x in obj){ return false }\n  return true\n}\n\nexport let maybe = (el, callback) => el && callback(el)\n\nexport let channelUploader = function (entries, onError, resp, liveSocket){\n  entries.forEach(entry => {\n    let entryUploader = new EntryUploader(entry, resp.config.chunk_size, liveSocket)\n    entryUploader.upload()\n  })\n}\n", "let Browser = {\n  canPushState(){ return (typeof (history.pushState) !== \"undefined\") },\n\n  dropLocal(localStorage, namespace, subkey){\n    return localStorage.removeItem(this.localKey(namespace, subkey))\n  },\n\n  updateLocal(localStorage, namespace, subkey, initial, func){\n    let current = this.getLocal(localStorage, namespace, subkey)\n    let key = this.localKey(namespace, subkey)\n    let newVal = current === null ? initial : func(current)\n    localStorage.setItem(key, JSON.stringify(newVal))\n    return newVal\n  },\n\n  getLocal(localStorage, namespace, subkey){\n    return JSON.parse(localStorage.getItem(this.localKey(namespace, subkey)))\n  },\n\n  updateCurrentState(callback){\n    if(!this.canPushState()){ return }\n    history.replaceState(callback(history.state || {}), \"\", window.location.href)\n  },\n\n  pushState(kind, meta, to){\n    if(this.canPushState()){\n      if(to !== window.location.href){\n        if(meta.type == \"redirect\" && meta.scroll){\n          // If we're redirecting store the current scrollY for the current history state.\n          let currentState = history.state || {}\n          currentState.scroll = meta.scroll\n          history.replaceState(currentState, \"\", window.location.href)\n        }\n\n        delete meta.scroll // Only store the scroll in the redirect case.\n        history[kind + \"State\"](meta, \"\", to || null) // IE will coerce undefined to string\n        let hashEl = this.getHashTargetEl(window.location.hash)\n\n        if(hashEl){\n          hashEl.scrollIntoView()\n        } else if(meta.type === \"redirect\"){\n          window.scroll(0, 0)\n        }\n      }\n    } else {\n      this.redirect(to)\n    }\n  },\n\n  setCookie(name, value){\n    document.cookie = `${name}=${value}`\n  },\n\n  getCookie(name){\n    return document.cookie.replace(new RegExp(`(?:(?:^|.*;\\s*)${name}\\s*\\=\\s*([^;]*).*$)|^.*$`), \"$1\")\n  },\n\n  redirect(toURL, flash){\n    if(flash){ Browser.setCookie(\"__phoenix_flash__\", flash + \"; max-age=60000; path=/\") }\n    window.location = toURL\n  },\n\n  localKey(namespace, subkey){ return `${namespace}-${subkey}` },\n\n  getHashTargetEl(maybeHash){\n    let hash = maybeHash.toString().substring(1)\n    if(hash === \"\"){ return }\n    return document.getElementById(hash) || document.querySelector(`a[name=\"${hash}\"]`)\n  }\n}\n\nexport default Browser\n", "let ARIA = {\n  focusMain(){\n    let target = document.querySelector(\"main h1, main, h1\")\n    if(target){\n      let origTabIndex = target.tabIndex\n      target.tabIndex = -1\n      target.focus()\n      target.tabIndex = origTabIndex\n    }\n  },\n\n  anyOf(instance, classes){ return classes.find(name => instance instanceof name) },\n\n  isFocusable(el, interactiveOnly){\n    return(\n      (el instanceof HTMLAnchorElement && el.rel !== \"ignore\") ||\n      (el instanceof HTMLAreaElement && el.href !== undefined) ||\n      (!el.disabled && (this.anyOf(el, [HTMLInputElement, HTMLSelectElement, HTMLTextAreaElement, HTMLButtonElement]))) ||\n      (el instanceof HTMLIFrameElement) ||\n      (el.tabIndex > 0 || (!interactiveOnly && el.getAttribute(\"tabindex\") !== null && el.getAttribute(\"aria-hidden\") !== \"true\"))\n    )\n  },\n\n  attemptFocus(el, interactiveOnly){\n    if(this.isFocusable(el, interactiveOnly)){ try{ el.focus() } catch(e){} }\n    return !!document.activeElement && document.activeElement.isSameNode(el)\n  },\n\n  focusFirstInteractive(el){\n    let child = el.firstElementChild\n    while(child){\n      if(this.attemptFocus(child, true) || this.focusFirstInteractive(child, true)){\n        return true\n      }\n      child = child.nextElementSibling\n    }\n  },\n\n  focusFirst(el){\n    let child = el.firstElementChild\n    while(child){\n      if(this.attemptFocus(child) || this.focusFirst(child)){\n        return true\n      }\n      child = child.nextElementSibling\n    }\n  },\n\n  focusLast(el){\n    let child = el.lastElementChild\n    while(child){\n      if(this.attemptFocus(child) || this.focusLast(child)){\n        return true\n      }\n      child = child.previousElementSibling\n    }\n  }\n}\nexport default ARIA", "import DOM from \"./dom\"\nimport ARIA from \"./aria\"\n\nlet focusStack = []\nlet default_transition_time = 200\n\nlet JS = {\n  exec(eventType, phxEvent, view, sourceEl, defaults){\n    let [defaultKind, defaultArgs] = defaults || [null, {callback: defaults && defaults.callback}]\n    let commands = phxEvent.charAt(0) === \"[\" ?\n      JSON.parse(phxEvent) : [[defaultKind, defaultArgs]]\n\n    commands.forEach(([kind, args]) => {\n      if(kind === defaultKind && defaultArgs.data){\n        args.data = Object.assign(args.data || {}, defaultArgs.data)\n        args.callback = args.callback || defaultArgs.callback\n      }\n      this.filterToEls(sourceEl, args).forEach(el => {\n        this[`exec_${kind}`](eventType, phxEvent, view, sourceEl, el, args)\n      })\n    })\n  },\n\n  isVisible(el){\n    return !!(el.offsetWidth || el.offsetHeight || el.getClientRects().length > 0)\n  },\n\n  // returns true if any part of the element is inside the viewport\n  isInViewport(el){\n    const rect = el.getBoundingClientRect()\n    const windowHeight = window.innerHeight || document.documentElement.clientHeight\n    const windowWidth = window.innerWidth || document.documentElement.clientWidth\n\n    return (\n      rect.right > 0 &&\n      rect.bottom > 0 &&\n      rect.left < windowWidth &&\n      rect.top < windowHeight\n    )\n  },\n\n  // private\n\n  // commands\n\n  exec_exec(eventType, phxEvent, view, sourceEl, el, {attr, to}){\n    let nodes = to ? DOM.all(document, to) : [sourceEl]\n    nodes.forEach(node => {\n      let encodedJS = node.getAttribute(attr)\n      if(!encodedJS){ throw new Error(`expected ${attr} to contain JS command on \"${to}\"`) }\n      view.liveSocket.execJS(node, encodedJS, eventType)\n    })\n  },\n\n  exec_dispatch(eventType, phxEvent, view, sourceEl, el, {to, event, detail, bubbles}){\n    detail = detail || {}\n    detail.dispatcher = sourceEl\n    DOM.dispatchEvent(el, event, {detail, bubbles})\n  },\n\n  exec_push(eventType, phxEvent, view, sourceEl, el, args){\n    let {event, data, target, page_loading, loading, value, dispatcher, callback} = args\n    let pushOpts = {loading, value, target, page_loading: !!page_loading}\n    let targetSrc = eventType === \"change\" && dispatcher ? dispatcher : sourceEl\n    let phxTarget = target || targetSrc.getAttribute(view.binding(\"target\")) || targetSrc\n    view.withinTargets(phxTarget, (targetView, targetCtx) => {\n      if(!targetView.isConnected()){ return }\n      if(eventType === \"change\"){\n        let {newCid, _target} = args\n        _target = _target || (DOM.isFormInput(sourceEl) ? sourceEl.name : undefined)\n        if(_target){ pushOpts._target = _target }\n        targetView.pushInput(sourceEl, targetCtx, newCid, event || phxEvent, pushOpts, callback)\n      } else if(eventType === \"submit\"){\n        let {submitter} = args\n        targetView.submitForm(sourceEl, targetCtx, event || phxEvent, submitter, pushOpts, callback)\n      } else {\n        targetView.pushEvent(eventType, sourceEl, targetCtx, event || phxEvent, data, pushOpts, callback)\n      }\n    })\n  },\n\n  exec_navigate(eventType, phxEvent, view, sourceEl, el, {href, replace}){\n    view.liveSocket.historyRedirect(href, replace ? \"replace\" : \"push\")\n  },\n\n  exec_patch(eventType, phxEvent, view, sourceEl, el, {href, replace}){\n    view.liveSocket.pushHistoryPatch(href, replace ? \"replace\" : \"push\", sourceEl)\n  },\n\n  exec_focus(eventType, phxEvent, view, sourceEl, el){\n    window.requestAnimationFrame(() => ARIA.attemptFocus(el))\n  },\n\n  exec_focus_first(eventType, phxEvent, view, sourceEl, el){\n    window.requestAnimationFrame(() => ARIA.focusFirstInteractive(el) || ARIA.focusFirst(el))\n  },\n\n  exec_push_focus(eventType, phxEvent, view, sourceEl, el){\n    window.requestAnimationFrame(() => focusStack.push(el || sourceEl))\n  },\n\n  exec_pop_focus(eventType, phxEvent, view, sourceEl, el){\n    window.requestAnimationFrame(() => {\n      const el = focusStack.pop()\n      if(el){ el.focus() }\n    })\n  },\n\n  exec_add_class(eventType, phxEvent, view, sourceEl, el, {names, transition, time}){\n    this.addOrRemoveClasses(el, names, [], transition, time, view)\n  },\n\n  exec_remove_class(eventType, phxEvent, view, sourceEl, el, {names, transition, time}){\n    this.addOrRemoveClasses(el, [], names, transition, time, view)\n  },\n\n  exec_toggle_class(eventType, phxEvent, view, sourceEl, el, {to, names, transition, time}){\n    this.toggleClasses(el, names, transition, time, view)\n  },\n\n  exec_toggle_attr(eventType, phxEvent, view, sourceEl, el, {attr: [attr, val1, val2]}){\n    if(el.hasAttribute(attr)){\n      if(val2 !== undefined){\n        // toggle between val1 and val2\n        if(el.getAttribute(attr) === val1){\n          this.setOrRemoveAttrs(el, [[attr, val2]], [])\n        } else {\n          this.setOrRemoveAttrs(el, [[attr, val1]], [])\n        }\n      } else {\n        // remove attr\n        this.setOrRemoveAttrs(el, [], [attr])\n      }\n    } else {\n      this.setOrRemoveAttrs(el, [[attr, val1]], [])\n    }\n  },\n\n  exec_transition(eventType, phxEvent, view, sourceEl, el, {time, transition}){\n    this.addOrRemoveClasses(el, [], [], transition, time, view)\n  },\n\n  exec_toggle(eventType, phxEvent, view, sourceEl, el, {display, ins, outs, time}){\n    this.toggle(eventType, view, el, display, ins, outs, time)\n  },\n\n  exec_show(eventType, phxEvent, view, sourceEl, el, {display, transition, time}){\n    this.show(eventType, view, el, display, transition, time)\n  },\n\n  exec_hide(eventType, phxEvent, view, sourceEl, el, {display, transition, time}){\n    this.hide(eventType, view, el, display, transition, time)\n  },\n\n  exec_set_attr(eventType, phxEvent, view, sourceEl, el, {attr: [attr, val]}){\n    this.setOrRemoveAttrs(el, [[attr, val]], [])\n  },\n\n  exec_remove_attr(eventType, phxEvent, view, sourceEl, el, {attr}){\n    this.setOrRemoveAttrs(el, [], [attr])\n  },\n\n  // utils for commands\n\n  show(eventType, view, el, display, transition, time){\n    if(!this.isVisible(el)){\n      this.toggle(eventType, view, el, display, transition, null, time)\n    }\n  },\n\n  hide(eventType, view, el, display, transition, time){\n    if(this.isVisible(el)){\n      this.toggle(eventType, view, el, display, null, transition, time)\n    }\n  },\n\n  toggle(eventType, view, el, display, ins, outs, time){\n    time = time || default_transition_time\n    let [inClasses, inStartClasses, inEndClasses] = ins || [[], [], []]\n    let [outClasses, outStartClasses, outEndClasses] = outs || [[], [], []]\n    if(inClasses.length > 0 || outClasses.length > 0){\n      if(this.isVisible(el)){\n        let onStart = () => {\n          this.addOrRemoveClasses(el, outStartClasses, inClasses.concat(inStartClasses).concat(inEndClasses))\n          window.requestAnimationFrame(() => {\n            this.addOrRemoveClasses(el, outClasses, [])\n            window.requestAnimationFrame(() => this.addOrRemoveClasses(el, outEndClasses, outStartClasses))\n          })\n        }\n        el.dispatchEvent(new Event(\"phx:hide-start\"))\n        view.transition(time, onStart, () => {\n          this.addOrRemoveClasses(el, [], outClasses.concat(outEndClasses))\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = \"none\")\n          el.dispatchEvent(new Event(\"phx:hide-end\"))\n        })\n      } else {\n        if(eventType === \"remove\"){ return }\n        let onStart = () => {\n          this.addOrRemoveClasses(el, inStartClasses, outClasses.concat(outStartClasses).concat(outEndClasses))\n          let stickyDisplay = display || this.defaultDisplay(el)\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = stickyDisplay)\n          window.requestAnimationFrame(() => {\n            this.addOrRemoveClasses(el, inClasses, [])\n            window.requestAnimationFrame(() => this.addOrRemoveClasses(el, inEndClasses, inStartClasses))\n          })\n        }\n        el.dispatchEvent(new Event(\"phx:show-start\"))\n        view.transition(time, onStart, () => {\n          this.addOrRemoveClasses(el, [], inClasses.concat(inEndClasses))\n          el.dispatchEvent(new Event(\"phx:show-end\"))\n        })\n      }\n    } else {\n      if(this.isVisible(el)){\n        window.requestAnimationFrame(() => {\n          el.dispatchEvent(new Event(\"phx:hide-start\"))\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = \"none\")\n          el.dispatchEvent(new Event(\"phx:hide-end\"))\n        })\n      } else {\n        window.requestAnimationFrame(() => {\n          el.dispatchEvent(new Event(\"phx:show-start\"))\n          let stickyDisplay = display || this.defaultDisplay(el)\n          DOM.putSticky(el, \"toggle\", currentEl => currentEl.style.display = stickyDisplay)\n          el.dispatchEvent(new Event(\"phx:show-end\"))\n        })\n      }\n    }\n  },\n\n  toggleClasses(el, classes, transition, time, view){\n    window.requestAnimationFrame(() => {\n      let [prevAdds, prevRemoves] = DOM.getSticky(el, \"classes\", [[], []])\n      let newAdds = classes.filter(name => prevAdds.indexOf(name) < 0 && !el.classList.contains(name))\n      let newRemoves = classes.filter(name => prevRemoves.indexOf(name) < 0 && el.classList.contains(name))\n      this.addOrRemoveClasses(el, newAdds, newRemoves, transition, time, view)\n    })\n  },\n\n  addOrRemoveClasses(el, adds, removes, transition, time, view){\n    time = time || default_transition_time\n    let [transitionRun, transitionStart, transitionEnd] = transition || [[], [], []]\n    if(transitionRun.length > 0){\n      let onStart = () => {\n        this.addOrRemoveClasses(el, transitionStart, [].concat(transitionRun).concat(transitionEnd))\n        window.requestAnimationFrame(() => {\n          this.addOrRemoveClasses(el, transitionRun, [])\n          window.requestAnimationFrame(() => this.addOrRemoveClasses(el, transitionEnd, transitionStart))\n        })\n      }\n      let onDone = () => this.addOrRemoveClasses(el, adds.concat(transitionEnd), removes.concat(transitionRun).concat(transitionStart))\n      return view.transition(time, onStart, onDone)\n    }\n\n    window.requestAnimationFrame(() => {\n      let [prevAdds, prevRemoves] = DOM.getSticky(el, \"classes\", [[], []])\n      let keepAdds = adds.filter(name => prevAdds.indexOf(name) < 0 && !el.classList.contains(name))\n      let keepRemoves = removes.filter(name => prevRemoves.indexOf(name) < 0 && el.classList.contains(name))\n      let newAdds = prevAdds.filter(name => removes.indexOf(name) < 0).concat(keepAdds)\n      let newRemoves = prevRemoves.filter(name => adds.indexOf(name) < 0).concat(keepRemoves)\n\n      DOM.putSticky(el, \"classes\", currentEl => {\n        currentEl.classList.remove(...newRemoves)\n        currentEl.classList.add(...newAdds)\n        return [newAdds, newRemoves]\n      })\n    })\n  },\n\n  setOrRemoveAttrs(el, sets, removes){\n    let [prevSets, prevRemoves] = DOM.getSticky(el, \"attrs\", [[], []])\n\n    let alteredAttrs = sets.map(([attr, _val]) => attr).concat(removes)\n    let newSets = prevSets.filter(([attr, _val]) => !alteredAttrs.includes(attr)).concat(sets)\n    let newRemoves = prevRemoves.filter((attr) => !alteredAttrs.includes(attr)).concat(removes)\n\n    DOM.putSticky(el, \"attrs\", currentEl => {\n      newRemoves.forEach(attr => currentEl.removeAttribute(attr))\n      newSets.forEach(([attr, val]) => currentEl.setAttribute(attr, val))\n      return [newSets, newRemoves]\n    })\n  },\n\n  hasAllClasses(el, classes){ return classes.every(name => el.classList.contains(name)) },\n\n  isToggledOut(el, outClasses){\n    return !this.isVisible(el) || this.hasAllClasses(el, outClasses)\n  },\n\n  filterToEls(sourceEl, {to}){\n    return to ? DOM.all(document, to) : [sourceEl]\n  },\n\n  defaultDisplay(el){\n    return {tr: \"table-row\", td: \"table-cell\"}[el.tagName.toLowerCase()] || \"block\"\n  }\n}\n\nexport default JS", "import {\n  CHECKABLE_INPUTS,\n  DEBOUNCE_PREV_KEY,\n  DEBOUNCE_TRIGGER,\n  FOCUSABLE_INPUTS,\n  PHX_COMPONENT,\n  PHX_EVENT_CLASSES,\n  PHX_HAS_FOCUSED,\n  PHX_HAS_SUBMITTED,\n  PHX_MAIN,\n  PHX_NO_FEEDBACK_CLASS,\n  PHX_PARENT_ID,\n  PHX_PRIVATE,\n  PHX_REF,\n  PHX_REF_SRC,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_STATIC,\n  PHX_UPLOAD_REF,\n  PHX_VIEW_SELECTOR,\n  PHX_STICKY,\n  THROTTLED\n} from \"./constants\"\n\nimport JS from \"./js\"\n\nimport {\n  logError\n} from \"./utils\"\n\nlet DOM = {\n  byId(id){ return document.getElementById(id) || logError(`no id found for ${id}`) },\n\n  removeClass(el, className){\n    el.classList.remove(className)\n    if(el.classList.length === 0){ el.removeAttribute(\"class\") }\n  },\n\n  all(node, query, callback){\n    if(!node){ return [] }\n    let array = Array.from(node.querySelectorAll(query))\n    return callback ? array.forEach(callback) : array\n  },\n\n  childNodeLength(html){\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    return template.content.childElementCount\n  },\n\n  isUploadInput(el){ return el.type === \"file\" && el.getAttribute(PHX_UPLOAD_REF) !== null },\n\n  isAutoUpload(inputEl){ return inputEl.hasAttribute(\"data-phx-auto-upload\") },\n\n  findUploadInputs(node){\n    const formId = node.id\n    const inputsOutsideForm = this.all(document, `input[type=\"file\"][${PHX_UPLOAD_REF}][form=\"${formId}\"]`)\n    return this.all(node, `input[type=\"file\"][${PHX_UPLOAD_REF}]`).concat(inputsOutsideForm)\n  },\n\n  findComponentNodeList(node, cid){\n    return this.filterWithinSameLiveView(this.all(node, `[${PHX_COMPONENT}=\"${cid}\"]`), node)\n  },\n\n  isPhxDestroyed(node){\n    return node.id && DOM.private(node, \"destroyed\") ? true : false\n  },\n\n  wantsNewTab(e){\n    let wantsNewTab = e.ctrlKey || e.shiftKey || e.metaKey || (e.button && e.button === 1)\n    let isDownload = (e.target instanceof HTMLAnchorElement && e.target.hasAttribute(\"download\"))\n    let isTargetBlank = e.target.hasAttribute(\"target\") && e.target.getAttribute(\"target\").toLowerCase() === \"_blank\"\n    let isTargetNamedTab = e.target.hasAttribute(\"target\") && !e.target.getAttribute(\"target\").startsWith(\"_\")\n    return wantsNewTab || isTargetBlank || isDownload || isTargetNamedTab\n  },\n\n  isUnloadableFormSubmit(e){\n    // Ignore form submissions intended to close a native <dialog> element\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog#usage_notes\n    let isDialogSubmit = (e.target && e.target.getAttribute(\"method\") === \"dialog\") ||\n      (e.submitter && e.submitter.getAttribute(\"formmethod\") === \"dialog\")\n\n    if(isDialogSubmit){\n      return false\n    } else {\n      return !e.defaultPrevented && !this.wantsNewTab(e)\n    }\n  },\n\n  isNewPageClick(e, currentLocation){\n    let href = e.target instanceof HTMLAnchorElement ? e.target.getAttribute(\"href\") : null\n    let url\n\n    if(e.defaultPrevented || href === null || this.wantsNewTab(e)){ return false }\n    if(href.startsWith(\"mailto:\") || href.startsWith(\"tel:\")){ return false }\n    if(e.target.isContentEditable){ return false }\n\n    try {\n      url = new URL(href)\n    } catch(e) {\n      try {\n        url = new URL(href, currentLocation)\n      } catch(e) {\n        // bad URL, fallback to let browser try it as external\n        return true\n      }\n    }\n\n    if(url.host === currentLocation.host && url.protocol === currentLocation.protocol){\n      if(url.pathname === currentLocation.pathname && url.search === currentLocation.search){\n        return url.hash === \"\" && !url.href.endsWith(\"#\")\n      }\n    }\n    return url.protocol.startsWith(\"http\")\n  },\n\n  markPhxChildDestroyed(el){\n    if(this.isPhxChild(el)){ el.setAttribute(PHX_SESSION, \"\") }\n    this.putPrivate(el, \"destroyed\", true)\n  },\n\n  findPhxChildrenInFragment(html, parentId){\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    return this.findPhxChildren(template.content, parentId)\n  },\n\n  isIgnored(el, phxUpdate){\n    return (el.getAttribute(phxUpdate) || el.getAttribute(\"data-phx-update\")) === \"ignore\"\n  },\n\n  isPhxUpdate(el, phxUpdate, updateTypes){\n    return el.getAttribute && updateTypes.indexOf(el.getAttribute(phxUpdate)) >= 0\n  },\n\n  findPhxSticky(el){ return this.all(el, `[${PHX_STICKY}]`) },\n\n  findPhxChildren(el, parentId){\n    return this.all(el, `${PHX_VIEW_SELECTOR}[${PHX_PARENT_ID}=\"${parentId}\"]`)\n  },\n\n  findExistingParentCIDs(node, cids){\n    // we only want to find parents that exist on the page\n    // if a cid is not on the page, the only way it can be added back to the page\n    // is if a parent adds it back, therefore if a cid does not exist on the page,\n    // we should not try to render it by itself (because it would be rendered twice,\n    // one by the parent, and a second time by itself)\n    let parentCids = new Set()\n    let childrenCids = new Set()\n\n    cids.forEach(cid => {\n      this.filterWithinSameLiveView(this.all(node, `[${PHX_COMPONENT}=\"${cid}\"]`), node).forEach(parent => {\n        parentCids.add(cid)\n        this.all(parent, `[${PHX_COMPONENT}]`)\n          .map(el => parseInt(el.getAttribute(PHX_COMPONENT)))\n          .forEach(childCID => childrenCids.add(childCID))\n      })\n    })\n\n    childrenCids.forEach(childCid => parentCids.delete(childCid))\n\n    return parentCids\n  },\n\n  filterWithinSameLiveView(nodes, parent){\n    if(parent.querySelector(PHX_VIEW_SELECTOR)){\n      return nodes.filter(el => this.withinSameLiveView(el, parent))\n    } else {\n      return nodes\n    }\n  },\n\n  withinSameLiveView(node, parent){\n    while(node = node.parentNode){\n      if(node.isSameNode(parent)){ return true }\n      if(node.getAttribute(PHX_SESSION) !== null){ return false }\n    }\n  },\n\n  private(el, key){ return el[PHX_PRIVATE] && el[PHX_PRIVATE][key] },\n\n  deletePrivate(el, key){ el[PHX_PRIVATE] && delete (el[PHX_PRIVATE][key]) },\n\n  putPrivate(el, key, value){\n    if(!el[PHX_PRIVATE]){ el[PHX_PRIVATE] = {} }\n    el[PHX_PRIVATE][key] = value\n  },\n\n  updatePrivate(el, key, defaultVal, updateFunc){\n    let existing = this.private(el, key)\n    if(existing === undefined){\n      this.putPrivate(el, key, updateFunc(defaultVal))\n    } else {\n      this.putPrivate(el, key, updateFunc(existing))\n    }\n  },\n\n  copyPrivates(target, source){\n    if(source[PHX_PRIVATE]){\n      target[PHX_PRIVATE] = source[PHX_PRIVATE]\n    }\n  },\n\n  putTitle(str){\n    let titleEl = document.querySelector(\"title\")\n    if(titleEl){\n      let {prefix, suffix} = titleEl.dataset\n      document.title = `${prefix || \"\"}${str}${suffix || \"\"}`\n    } else {\n      document.title = str\n    }\n  },\n\n  debounce(el, event, phxDebounce, defaultDebounce, phxThrottle, defaultThrottle, asyncFilter, callback){\n    let debounce = el.getAttribute(phxDebounce)\n    let throttle = el.getAttribute(phxThrottle)\n\n    if(debounce === \"\"){ debounce = defaultDebounce }\n    if(throttle === \"\"){ throttle = defaultThrottle }\n    let value = debounce || throttle\n    switch(value){\n      case null: return callback()\n\n      case \"blur\":\n        if(this.once(el, \"debounce-blur\")){\n          el.addEventListener(\"blur\", () => {\n            if(asyncFilter()){ callback() }\n          })\n        }\n        return\n\n      default:\n        let timeout = parseInt(value)\n        let trigger = () => throttle ? this.deletePrivate(el, THROTTLED) : callback()\n        let currentCycle = this.incCycle(el, DEBOUNCE_TRIGGER, trigger)\n        if(isNaN(timeout)){ return logError(`invalid throttle/debounce value: ${value}`) }\n        if(throttle){\n          let newKeyDown = false\n          if(event.type === \"keydown\"){\n            let prevKey = this.private(el, DEBOUNCE_PREV_KEY)\n            this.putPrivate(el, DEBOUNCE_PREV_KEY, event.key)\n            newKeyDown = prevKey !== event.key\n          }\n\n          if(!newKeyDown && this.private(el, THROTTLED)){\n            return false\n          } else {\n            callback()\n            const t = setTimeout(() => {\n              if(asyncFilter()){ this.triggerCycle(el, DEBOUNCE_TRIGGER) }\n            }, timeout)\n            this.putPrivate(el, THROTTLED, t)\n          }\n        } else {\n          setTimeout(() => {\n            if(asyncFilter()){ this.triggerCycle(el, DEBOUNCE_TRIGGER, currentCycle) }\n          }, timeout)\n        }\n\n        let form = el.form\n        if(form && this.once(form, \"bind-debounce\")){\n          form.addEventListener(\"submit\", () => {\n            Array.from((new FormData(form)).entries(), ([name]) => {\n              let input = form.querySelector(`[name=\"${name}\"]`)\n              this.incCycle(input, DEBOUNCE_TRIGGER)\n              this.deletePrivate(input, THROTTLED)\n            })\n          })\n        }\n        if(this.once(el, \"bind-debounce\")){\n          el.addEventListener(\"blur\", () => {\n            // because we trigger the callback here,\n            // we also clear the throttle timeout to prevent the callback\n            // from being called again after the timeout fires\n            clearTimeout(this.private(el, THROTTLED))\n            this.triggerCycle(el, DEBOUNCE_TRIGGER)\n          })\n        }\n    }\n  },\n\n  triggerCycle(el, key, currentCycle){\n    let [cycle, trigger] = this.private(el, key)\n    if(!currentCycle){ currentCycle = cycle }\n    if(currentCycle === cycle){\n      this.incCycle(el, key)\n      trigger()\n    }\n  },\n\n  once(el, key){\n    if(this.private(el, key) === true){ return false }\n    this.putPrivate(el, key, true)\n    return true\n  },\n\n  incCycle(el, key, trigger = function (){ }){\n    let [currentCycle] = this.private(el, key) || [0, trigger]\n    currentCycle++\n    this.putPrivate(el, key, [currentCycle, trigger])\n    return currentCycle\n  },\n\n  maybeAddPrivateHooks(el, phxViewportTop, phxViewportBottom){\n    if(el.hasAttribute && (el.hasAttribute(phxViewportTop) || el.hasAttribute(phxViewportBottom))){\n      el.setAttribute(\"data-phx-hook\", \"Phoenix.InfiniteScroll\")\n    }\n  },\n\n  isFeedbackContainer(el, phxFeedbackFor){\n    return el.hasAttribute && el.hasAttribute(phxFeedbackFor)\n  },\n\n  maybeHideFeedback(container, feedbackContainers, phxFeedbackFor, phxFeedbackGroup){\n    // because we can have multiple containers with the same phxFeedbackFor value\n    // we perform the check only once and store the result;\n    // we often have multiple containers, because we push both fromEl and toEl in dompatch\n    // when a container is updated\n    const feedbackResults = {}\n    feedbackContainers.forEach(el => {\n      // skip elements that are not in the DOM\n      if(!container.contains(el)) return\n      const feedback = el.getAttribute(phxFeedbackFor)\n      if(!feedback){\n        // the container previously had phx-feedback-for, but now it doesn't\n        // remove the class from the container (if it exists)\n        JS.addOrRemoveClasses(el, [], [PHX_NO_FEEDBACK_CLASS])\n        return\n      }\n      if(feedbackResults[feedback] === true){\n        this.hideFeedback(el)\n        return\n      }\n      feedbackResults[feedback] = this.shouldHideFeedback(container, feedback, phxFeedbackGroup)\n      if(feedbackResults[feedback] === true){\n        this.hideFeedback(el)\n      }\n    })\n  },\n\n  hideFeedback(container){\n    JS.addOrRemoveClasses(container, [PHX_NO_FEEDBACK_CLASS], [])\n  },\n\n  shouldHideFeedback(container, nameOrGroup, phxFeedbackGroup){\n    const query = `[name=\"${nameOrGroup}\"],\n                   [name=\"${nameOrGroup}[]\"],\n                   [${phxFeedbackGroup}=\"${nameOrGroup}\"]`\n    let focused = false\n    DOM.all(container, query, (input) => {\n      if(this.private(input, PHX_HAS_FOCUSED) || this.private(input, PHX_HAS_SUBMITTED)){\n        focused = true\n      }\n    })\n    return !focused\n  },\n\n  feedbackSelector(input, phxFeedbackFor, phxFeedbackGroup){\n    let query = `[${phxFeedbackFor}=\"${input.name}\"],\n                 [${phxFeedbackFor}=\"${input.name.replace(/\\[\\]$/, \"\")}\"]`\n    if(input.getAttribute(phxFeedbackGroup)){\n      query += `,[${phxFeedbackFor}=\"${input.getAttribute(phxFeedbackGroup)}\"]`\n    }\n    return query\n  },\n\n  resetForm(form, phxFeedbackFor, phxFeedbackGroup){\n    Array.from(form.elements).forEach(input => {\n      let query = this.feedbackSelector(input, phxFeedbackFor, phxFeedbackGroup)\n      this.deletePrivate(input, PHX_HAS_FOCUSED)\n      this.deletePrivate(input, PHX_HAS_SUBMITTED)\n      this.all(document, query, feedbackEl => {\n        JS.addOrRemoveClasses(feedbackEl, [PHX_NO_FEEDBACK_CLASS], [])\n      })\n    })\n  },\n\n  showError(inputEl, phxFeedbackFor, phxFeedbackGroup){\n    if(inputEl.name){\n      let query = this.feedbackSelector(inputEl, phxFeedbackFor, phxFeedbackGroup)\n      this.all(document, query, (el) => {\n        JS.addOrRemoveClasses(el, [], [PHX_NO_FEEDBACK_CLASS])\n      })\n    }\n  },\n\n  isPhxChild(node){\n    return node.getAttribute && node.getAttribute(PHX_PARENT_ID)\n  },\n\n  isPhxSticky(node){\n    return node.getAttribute && node.getAttribute(PHX_STICKY) !== null\n  },\n\n  isChildOfAny(el, parents){\n    return !!parents.find(parent => parent.contains(el))\n  },\n\n  firstPhxChild(el){\n    return this.isPhxChild(el) ? el : this.all(el, `[${PHX_PARENT_ID}]`)[0]\n  },\n\n  dispatchEvent(target, name, opts = {}){\n    let defaultBubble = true\n    let isUploadTarget = target.nodeName === \"INPUT\" && target.type === \"file\"\n    if(isUploadTarget && name === \"click\"){\n      defaultBubble = false\n    }\n    let bubbles = opts.bubbles === undefined ? defaultBubble : !!opts.bubbles\n    let eventOpts = {bubbles: bubbles, cancelable: true, detail: opts.detail || {}}\n    let event = name === \"click\" ? new MouseEvent(\"click\", eventOpts) : new CustomEvent(name, eventOpts)\n    target.dispatchEvent(event)\n  },\n\n  cloneNode(node, html){\n    if(typeof (html) === \"undefined\"){\n      return node.cloneNode(true)\n    } else {\n      let cloned = node.cloneNode(false)\n      cloned.innerHTML = html\n      return cloned\n    }\n  },\n\n  // merge attributes from source to target\n  // if an element is ignored, we only merge data attributes\n  // including removing data attributes that are no longer in the source\n  mergeAttrs(target, source, opts = {}){\n    let exclude = new Set(opts.exclude || [])\n    let isIgnored = opts.isIgnored\n    let sourceAttrs = source.attributes\n    for(let i = sourceAttrs.length - 1; i >= 0; i--){\n      let name = sourceAttrs[i].name\n      if(!exclude.has(name)){\n        const sourceValue = source.getAttribute(name)\n        if(target.getAttribute(name) !== sourceValue && (!isIgnored || (isIgnored && name.startsWith(\"data-\")))){\n          target.setAttribute(name, sourceValue)\n        }\n      } else {\n        // We exclude the value from being merged on focused inputs, because the\n        // user's input should always win.\n        // We can still assign it as long as the value property is the same, though.\n        // This prevents a situation where the updated hook is not being triggered\n        // when an input is back in its \"original state\", because the attribute\n        // was never changed, see:\n        // https://github.com/phoenixframework/phoenix_live_view/issues/2163\n        if(name === \"value\" && target.value === source.value){\n          // actually set the value attribute to sync it with the value property\n          target.setAttribute(\"value\", source.getAttribute(name))\n        }\n      }\n    }\n\n    let targetAttrs = target.attributes\n    for(let i = targetAttrs.length - 1; i >= 0; i--){\n      let name = targetAttrs[i].name\n      if(isIgnored){\n        if(name.startsWith(\"data-\") && !source.hasAttribute(name) && ![PHX_REF, PHX_REF_SRC].includes(name)){ target.removeAttribute(name) }\n      } else {\n        if(!source.hasAttribute(name)){ target.removeAttribute(name) }\n      }\n    }\n  },\n\n  mergeFocusedInput(target, source){\n    // skip selects because FF will reset highlighted index for any setAttribute\n    if(!(target instanceof HTMLSelectElement)){ DOM.mergeAttrs(target, source, {exclude: [\"value\"]}) }\n\n    if(source.readOnly){\n      target.setAttribute(\"readonly\", true)\n    } else {\n      target.removeAttribute(\"readonly\")\n    }\n  },\n\n  hasSelectionRange(el){\n    return el.setSelectionRange && (el.type === \"text\" || el.type === \"textarea\")\n  },\n\n  restoreFocus(focused, selectionStart, selectionEnd){\n    if(focused instanceof HTMLSelectElement){ focused.focus() }\n    if(!DOM.isTextualInput(focused)){ return }\n\n    let wasFocused = focused.matches(\":focus\")\n    if(!wasFocused){ focused.focus() }\n    if(this.hasSelectionRange(focused)){\n      focused.setSelectionRange(selectionStart, selectionEnd)\n    }\n  },\n\n  isFormInput(el){ return /^(?:input|select|textarea)$/i.test(el.tagName) && el.type !== \"button\" },\n\n  syncAttrsToProps(el){\n    if(el instanceof HTMLInputElement && CHECKABLE_INPUTS.indexOf(el.type.toLocaleLowerCase()) >= 0){\n      el.checked = el.getAttribute(\"checked\") !== null\n    }\n  },\n\n  isTextualInput(el){ return FOCUSABLE_INPUTS.indexOf(el.type) >= 0 },\n\n  isNowTriggerFormExternal(el, phxTriggerExternal){\n    return el.getAttribute && el.getAttribute(phxTriggerExternal) !== null\n  },\n\n  syncPendingRef(fromEl, toEl, disableWith){\n    let ref = fromEl.getAttribute(PHX_REF)\n    if(ref === null){ return true }\n    let refSrc = fromEl.getAttribute(PHX_REF_SRC)\n\n    if(DOM.isFormInput(fromEl) || fromEl.getAttribute(disableWith) !== null){\n      if(DOM.isUploadInput(fromEl)){ DOM.mergeAttrs(fromEl, toEl, {isIgnored: true}) }\n      DOM.putPrivate(fromEl, PHX_REF, toEl)\n      return false\n    } else {\n      PHX_EVENT_CLASSES.forEach(className => {\n        fromEl.classList.contains(className) && toEl.classList.add(className)\n      })\n      toEl.setAttribute(PHX_REF, ref)\n      toEl.setAttribute(PHX_REF_SRC, refSrc)\n      return true\n    }\n  },\n\n  cleanChildNodes(container, phxUpdate){\n    if(DOM.isPhxUpdate(container, phxUpdate, [\"append\", \"prepend\"])){\n      let toRemove = []\n      container.childNodes.forEach(childNode => {\n        if(!childNode.id){\n          // Skip warning if it's an empty text node (e.g. a new-line)\n          let isEmptyTextNode = childNode.nodeType === Node.TEXT_NODE && childNode.nodeValue.trim() === \"\"\n          if(!isEmptyTextNode && childNode.nodeType !== Node.COMMENT_NODE){\n            logError(\"only HTML element tags with an id are allowed inside containers with phx-update.\\n\\n\" +\n              `removing illegal node: \"${(childNode.outerHTML || childNode.nodeValue).trim()}\"\\n\\n`)\n          }\n          toRemove.push(childNode)\n        }\n      })\n      toRemove.forEach(childNode => childNode.remove())\n    }\n  },\n\n  replaceRootContainer(container, tagName, attrs){\n    let retainedAttrs = new Set([\"id\", PHX_SESSION, PHX_STATIC, PHX_MAIN, PHX_ROOT_ID])\n    if(container.tagName.toLowerCase() === tagName.toLowerCase()){\n      Array.from(container.attributes)\n        .filter(attr => !retainedAttrs.has(attr.name.toLowerCase()))\n        .forEach(attr => container.removeAttribute(attr.name))\n\n      Object.keys(attrs)\n        .filter(name => !retainedAttrs.has(name.toLowerCase()))\n        .forEach(attr => container.setAttribute(attr, attrs[attr]))\n\n      return container\n\n    } else {\n      let newContainer = document.createElement(tagName)\n      Object.keys(attrs).forEach(attr => newContainer.setAttribute(attr, attrs[attr]))\n      retainedAttrs.forEach(attr => newContainer.setAttribute(attr, container.getAttribute(attr)))\n      newContainer.innerHTML = container.innerHTML\n      container.replaceWith(newContainer)\n      return newContainer\n    }\n  },\n\n  getSticky(el, name, defaultVal){\n    let op = (DOM.private(el, \"sticky\") || []).find(([existingName, ]) => name === existingName)\n    if(op){\n      let [_name, _op, stashedResult] = op\n      return stashedResult\n    } else {\n      return typeof(defaultVal) === \"function\" ? defaultVal() : defaultVal\n    }\n  },\n\n  deleteSticky(el, name){\n    this.updatePrivate(el, \"sticky\", [], ops => {\n      return ops.filter(([existingName, _]) => existingName !== name)\n    })\n  },\n\n  putSticky(el, name, op){\n    let stashedResult = op(el)\n    this.updatePrivate(el, \"sticky\", [], ops => {\n      let existingIndex = ops.findIndex(([existingName, ]) => name === existingName)\n      if(existingIndex >= 0){\n        ops[existingIndex] = [name, op, stashedResult]\n      } else {\n        ops.push([name, op, stashedResult])\n      }\n      return ops\n    })\n  },\n\n  applyStickyOperations(el){\n    let ops = DOM.private(el, \"sticky\")\n    if(!ops){ return }\n\n    ops.forEach(([name, op, _stashed]) => this.putSticky(el, name, op))\n  }\n}\n\nexport default DOM\n", "import {\n  PHX_ACTIVE_ENTRY_REFS,\n  PHX_LIVE_FILE_UPDATED,\n  PHX_PREFLIGHTED_REFS\n} from \"./constants\"\n\nimport {\n  channelUploader,\n  logError\n} from \"./utils\"\n\nimport LiveUploader from \"./live_uploader\"\n\nexport default class UploadEntry {\n  static isActive(fileEl, file){\n    let isNew = file._phxRef === undefined\n    let activeRefs = fileEl.getAttribute(PHX_ACTIVE_ENTRY_REFS).split(\",\")\n    let isActive = activeRefs.indexOf(LiveUploader.genFileRef(file)) >= 0\n    return file.size > 0 && (isNew || isActive)\n  }\n\n  static isPreflighted(fileEl, file){\n    let preflightedRefs = fileEl.getAttribute(PHX_PREFLIGHTED_REFS).split(\",\")\n    let isPreflighted = preflightedRefs.indexOf(LiveUploader.genFileRef(file)) >= 0\n    return isPreflighted && this.isActive(fileEl, file)\n  }\n\n  static isPreflightInProgress(file){\n    return file._preflightInProgress === true\n  }\n\n  static markPreflightInProgress(file){\n    file._preflightInProgress = true\n  }\n\n  constructor(fileEl, file, view, autoUpload){\n    this.ref = LiveUploader.genFileRef(file)\n    this.fileEl = fileEl\n    this.file = file\n    this.view = view\n    this.meta = null\n    this._isCancelled = false\n    this._isDone = false\n    this._progress = 0\n    this._lastProgressSent = -1\n    this._onDone = function(){ }\n    this._onElUpdated = this.onElUpdated.bind(this)\n    this.fileEl.addEventListener(PHX_LIVE_FILE_UPDATED, this._onElUpdated)\n    this.autoUpload = autoUpload\n  }\n\n  metadata(){ return this.meta }\n\n  progress(progress){\n    this._progress = Math.floor(progress)\n    if(this._progress > this._lastProgressSent){\n      if(this._progress >= 100){\n        this._progress = 100\n        this._lastProgressSent = 100\n        this._isDone = true\n        this.view.pushFileProgress(this.fileEl, this.ref, 100, () => {\n          LiveUploader.untrackFile(this.fileEl, this.file)\n          this._onDone()\n        })\n      } else {\n        this._lastProgressSent = this._progress\n        this.view.pushFileProgress(this.fileEl, this.ref, this._progress)\n      }\n    }\n  }\n\n  isCancelled(){ return this._isCancelled }\n\n  cancel(){\n    this.file._preflightInProgress = false\n    this._isCancelled = true\n    this._isDone = true\n    this._onDone()\n  }\n\n  isDone(){ return this._isDone }\n\n  error(reason = \"failed\"){\n    this.fileEl.removeEventListener(PHX_LIVE_FILE_UPDATED, this._onElUpdated)\n    this.view.pushFileProgress(this.fileEl, this.ref, {error: reason})\n    if(!this.isAutoUpload()){ LiveUploader.clearFiles(this.fileEl) }\n  }\n\n  isAutoUpload(){ return this.autoUpload }\n\n  //private\n\n  onDone(callback){\n    this._onDone = () => {\n      this.fileEl.removeEventListener(PHX_LIVE_FILE_UPDATED, this._onElUpdated)\n      callback()\n    }\n  }\n\n  onElUpdated(){\n    let activeRefs = this.fileEl.getAttribute(PHX_ACTIVE_ENTRY_REFS).split(\",\")\n    if(activeRefs.indexOf(this.ref) === -1){\n      LiveUploader.untrackFile(this.fileEl, this.file)\n      this.cancel()\n    }\n  }\n\n  toPreflightPayload(){\n    return {\n      last_modified: this.file.lastModified,\n      name: this.file.name,\n      relative_path: this.file.webkitRelativePath,\n      size: this.file.size,\n      type: this.file.type,\n      ref: this.ref,\n      meta: typeof(this.file.meta) === \"function\" ? this.file.meta() : undefined\n    }\n  }\n\n  uploader(uploaders){\n    if(this.meta.uploader){\n      let callback = uploaders[this.meta.uploader] || logError(`no uploader configured for ${this.meta.uploader}`)\n      return {name: this.meta.uploader, callback: callback}\n    } else {\n      return {name: \"channel\", callback: channelUploader}\n    }\n  }\n\n  zipPostFlight(resp){\n    this.meta = resp.entries[this.ref]\n    if(!this.meta){ logError(`no preflight upload response returned with ref ${this.ref}`, {input: this.fileEl, response: resp}) }\n  }\n}\n", "import {\n  PHX_DONE_REFS,\n  PHX_PREFLIGHTED_REFS,\n  PHX_UPLOAD_REF\n} from \"./constants\"\n\nimport {\n} from \"./utils\"\n\nimport DOM from \"./dom\"\nimport UploadEntry from \"./upload_entry\"\n\nlet liveUploaderFileRef = 0\n\nexport default class LiveUploader {\n  static genFileRef(file){\n    let ref = file._phxRef\n    if(ref !== undefined){\n      return ref\n    } else {\n      file._phxRef = (liveUploaderFileRef++).toString()\n      return file._phxRef\n    }\n  }\n\n  static getEntryDataURL(inputEl, ref, callback){\n    let file = this.activeFiles(inputEl).find(file => this.genFileRef(file) === ref)\n    callback(URL.createObjectURL(file))\n  }\n\n  static hasUploadsInProgress(formEl){\n    let active = 0\n    DOM.findUploadInputs(formEl).forEach(input => {\n      if(input.getAttribute(PHX_PREFLIGHTED_REFS) !== input.getAttribute(PHX_DONE_REFS)){\n        active++\n      }\n    })\n    return active > 0\n  }\n\n  static serializeUploads(inputEl){\n    let files = this.activeFiles(inputEl)\n    let fileData = {}\n    files.forEach(file => {\n      let entry = {path: inputEl.name}\n      let uploadRef = inputEl.getAttribute(PHX_UPLOAD_REF)\n      fileData[uploadRef] = fileData[uploadRef] || []\n      entry.ref = this.genFileRef(file)\n      entry.last_modified = file.lastModified\n      entry.name = file.name || entry.ref\n      entry.relative_path = file.webkitRelativePath\n      entry.type = file.type\n      entry.size = file.size\n      if(typeof(file.meta) === \"function\"){ entry.meta = file.meta() }\n      fileData[uploadRef].push(entry)\n    })\n    return fileData\n  }\n\n  static clearFiles(inputEl){\n    inputEl.value = null\n    inputEl.removeAttribute(PHX_UPLOAD_REF)\n    DOM.putPrivate(inputEl, \"files\", [])\n  }\n\n  static untrackFile(inputEl, file){\n    DOM.putPrivate(inputEl, \"files\", DOM.private(inputEl, \"files\").filter(f => !Object.is(f, file)))\n  }\n\n  static trackFiles(inputEl, files, dataTransfer){\n    if(inputEl.getAttribute(\"multiple\") !== null){\n      let newFiles = files.filter(file => !this.activeFiles(inputEl).find(f => Object.is(f, file)))\n      DOM.updatePrivate(inputEl, \"files\", [], (existing) => existing.concat(newFiles))\n      inputEl.value = null\n    } else {\n      // Reset inputEl files to align output with programmatic changes (i.e. drag and drop)\n      if(dataTransfer && dataTransfer.files.length > 0){ inputEl.files = dataTransfer.files }\n      DOM.putPrivate(inputEl, \"files\", files)\n    }\n  }\n\n  static activeFileInputs(formEl){\n    let fileInputs = DOM.findUploadInputs(formEl)\n    return Array.from(fileInputs).filter(el => el.files && this.activeFiles(el).length > 0)\n  }\n\n  static activeFiles(input){\n    return (DOM.private(input, \"files\") || []).filter(f => UploadEntry.isActive(input, f))\n  }\n\n  static inputsAwaitingPreflight(formEl){\n    let fileInputs = DOM.findUploadInputs(formEl)\n    return Array.from(fileInputs).filter(input => this.filesAwaitingPreflight(input).length > 0)\n  }\n\n  static filesAwaitingPreflight(input){\n    return this.activeFiles(input).filter(f => !UploadEntry.isPreflighted(input, f) && !UploadEntry.isPreflightInProgress(f))\n  }\n\n  static markPreflightInProgress(entries){\n    entries.forEach(entry => UploadEntry.markPreflightInProgress(entry.file))\n  }\n\n  constructor(inputEl, view, onComplete){\n    this.autoUpload = DOM.isAutoUpload(inputEl)\n    this.view = view\n    this.onComplete = onComplete\n    this._entries =\n      Array.from(LiveUploader.filesAwaitingPreflight(inputEl) || [])\n        .map(file => new UploadEntry(inputEl, file, view, this.autoUpload))\n\n    // prevent sending duplicate preflight requests\n    LiveUploader.markPreflightInProgress(this._entries)\n\n    this.numEntriesInProgress = this._entries.length\n  }\n\n  isAutoUpload(){ return this.autoUpload }\n\n  entries(){ return this._entries }\n\n  initAdapterUpload(resp, onError, liveSocket){\n    this._entries =\n      this._entries.map(entry => {\n        if(entry.isCancelled()){\n          this.numEntriesInProgress--\n          if(this.numEntriesInProgress === 0){ this.onComplete() }\n        } else {\n          entry.zipPostFlight(resp)\n          entry.onDone(() => {\n            this.numEntriesInProgress--\n            if(this.numEntriesInProgress === 0){ this.onComplete() }\n          })\n        }\n        return entry\n      })\n\n    let groupedEntries = this._entries.reduce((acc, entry) => {\n      if(!entry.meta){ return acc }\n      let {name, callback} = entry.uploader(liveSocket.uploaders)\n      acc[name] = acc[name] || {callback: callback, entries: []}\n      acc[name].entries.push(entry)\n      return acc\n    }, {})\n\n    for(let name in groupedEntries){\n      let {callback, entries} = groupedEntries[name]\n      callback(entries, onError, resp, liveSocket)\n    }\n  }\n}\n", "import {\n  PHX_ACTIVE_ENTRY_REFS,\n  PHX_LIVE_FILE_UPDATED,\n  PHX_PREFLIGHTED_REFS,\n  PHX_UPLOAD_REF\n} from \"./constants\"\n\nimport LiveUploader from \"./live_uploader\"\nimport ARIA from \"./aria\"\n\nlet Hooks = {\n  LiveFileUpload: {\n    activeRefs(){ return this.el.getAttribute(PHX_ACTIVE_ENTRY_REFS) },\n\n    preflightedRefs(){ return this.el.getAttribute(PHX_PREFLIGHTED_REFS) },\n\n    mounted(){ this.preflightedWas = this.preflightedRefs() },\n\n    updated(){\n      let newPreflights = this.preflightedRefs()\n      if(this.preflightedWas !== newPreflights){\n        this.preflightedWas = newPreflights\n        if(newPreflights === \"\"){\n          this.__view.cancelSubmit(this.el.form)\n        }\n      }\n\n      if(this.activeRefs() === \"\"){ this.el.value = null }\n      this.el.dispatchEvent(new CustomEvent(PHX_LIVE_FILE_UPDATED))\n    }\n  },\n\n  LiveImgPreview: {\n    mounted(){\n      this.ref = this.el.getAttribute(\"data-phx-entry-ref\")\n      this.inputEl = document.getElementById(this.el.getAttribute(PHX_UPLOAD_REF))\n      LiveUploader.getEntryDataURL(this.inputEl, this.ref, url => {\n        this.url = url\n        this.el.src = url\n      })\n    },\n    destroyed(){\n      URL.revokeObjectURL(this.url)\n    }\n  },\n  FocusWrap: {\n    mounted(){\n      this.focusStart = this.el.firstElementChild\n      this.focusEnd = this.el.lastElementChild\n      this.focusStart.addEventListener(\"focus\", () => ARIA.focusLast(this.el))\n      this.focusEnd.addEventListener(\"focus\", () => ARIA.focusFirst(this.el))\n      this.el.addEventListener(\"phx:show-end\", () => this.el.focus())\n      if(window.getComputedStyle(this.el).display !== \"none\"){\n        ARIA.focusFirst(this.el)\n      }\n    }\n  }\n}\n\nlet findScrollContainer = (el) => {\n  // the scroll event won't be fired on the html/body element even if overflow is set\n  // therefore we return null to instead listen for scroll events on document\n  if ([\"HTML\", \"BODY\"].indexOf(el.nodeName.toUpperCase()) >= 0) return null\n  if([\"scroll\", \"auto\"].indexOf(getComputedStyle(el).overflowY) >= 0) return el\n  return findScrollContainer(el.parentElement)\n}\n\nlet scrollTop = (scrollContainer) => {\n  if(scrollContainer){\n    return scrollContainer.scrollTop\n  } else {\n    return document.documentElement.scrollTop || document.body.scrollTop\n  }\n}\n\nlet bottom = (scrollContainer) => {\n  if(scrollContainer){\n    return scrollContainer.getBoundingClientRect().bottom\n  } else {\n    // when we have no container, the whole page scrolls,\n    // therefore the bottom coordinate is the viewport height\n    return window.innerHeight || document.documentElement.clientHeight\n  }\n}\n\nlet top = (scrollContainer) => {\n  if(scrollContainer){\n    return scrollContainer.getBoundingClientRect().top\n  } else {\n    // when we have no container the whole page scrolls,\n    // therefore the top coordinate is 0\n    return 0\n  }\n}\n\nlet isAtViewportTop = (el, scrollContainer) => {\n  let rect = el.getBoundingClientRect()\n  return rect.top >= top(scrollContainer) && rect.left >= 0 && rect.top <= bottom(scrollContainer)\n}\n\nlet isAtViewportBottom = (el, scrollContainer) => {\n  let rect = el.getBoundingClientRect()\n  return rect.right >= top(scrollContainer) && rect.left >= 0 && rect.bottom <= bottom(scrollContainer)\n}\n\nlet isWithinViewport = (el, scrollContainer) => {\n  let rect = el.getBoundingClientRect()\n  return rect.top >= top(scrollContainer) && rect.left >= 0 && rect.top <= bottom(scrollContainer)\n}\n\nHooks.InfiniteScroll = {\n  mounted(){\n    this.scrollContainer = findScrollContainer(this.el)\n    let scrollBefore = scrollTop(this.scrollContainer)\n    let topOverran = false\n    let throttleInterval = 500\n    let pendingOp = null\n\n    let onTopOverrun = this.throttle(throttleInterval, (topEvent, firstChild) => {\n      pendingOp = () => true\n      this.liveSocket.execJSHookPush(this.el, topEvent, {id: firstChild.id, _overran: true}, () => {\n        pendingOp = null\n      })\n    })\n\n    let onFirstChildAtTop = this.throttle(throttleInterval, (topEvent, firstChild) => {\n      pendingOp = () => firstChild.scrollIntoView({block: \"start\"})\n      this.liveSocket.execJSHookPush(this.el, topEvent, {id: firstChild.id}, () => {\n        pendingOp = null\n        // make sure that the DOM is patched by waiting for the next tick\n        window.requestAnimationFrame(() => {\n          if(!isWithinViewport(firstChild, this.scrollContainer)){\n            firstChild.scrollIntoView({block: \"start\"})\n          }\n        })\n      })\n    })\n\n    let onLastChildAtBottom = this.throttle(throttleInterval, (bottomEvent, lastChild) => {\n      pendingOp = () => lastChild.scrollIntoView({block: \"end\"})\n      this.liveSocket.execJSHookPush(this.el, bottomEvent, {id: lastChild.id}, () => {\n        pendingOp = null\n        // make sure that the DOM is patched by waiting for the next tick\n        window.requestAnimationFrame(() => {\n          if(!isWithinViewport(lastChild, this.scrollContainer)){\n            lastChild.scrollIntoView({block: \"end\"})\n          }\n        })\n      })\n    })\n\n    this.onScroll = (_e) => {\n      let scrollNow = scrollTop(this.scrollContainer)\n\n      if(pendingOp){\n        scrollBefore = scrollNow\n        return pendingOp()\n      }\n      let rect = this.el.getBoundingClientRect()\n      let topEvent = this.el.getAttribute(this.liveSocket.binding(\"viewport-top\"))\n      let bottomEvent = this.el.getAttribute(this.liveSocket.binding(\"viewport-bottom\"))\n      let lastChild = this.el.lastElementChild\n      let firstChild = this.el.firstElementChild\n      let isScrollingUp = scrollNow < scrollBefore\n      let isScrollingDown = scrollNow > scrollBefore\n\n      // el overran while scrolling up\n      if(isScrollingUp && topEvent && !topOverran && rect.top >= 0){\n        topOverran = true\n        onTopOverrun(topEvent, firstChild)\n      } else if(isScrollingDown && topOverran && rect.top <= 0){\n        topOverran = false\n      }\n\n      if(topEvent && isScrollingUp && isAtViewportTop(firstChild, this.scrollContainer)){\n        onFirstChildAtTop(topEvent, firstChild)\n      } else if(bottomEvent && isScrollingDown && isAtViewportBottom(lastChild, this.scrollContainer)){\n        onLastChildAtBottom(bottomEvent, lastChild)\n      }\n      scrollBefore = scrollNow\n    }\n\n    if(this.scrollContainer){\n      this.scrollContainer.addEventListener(\"scroll\", this.onScroll)\n    } else {\n      window.addEventListener(\"scroll\", this.onScroll)\n    }\n  },\n  \n  destroyed(){\n    if(this.scrollContainer){\n      this.scrollContainer.removeEventListener(\"scroll\", this.onScroll)\n    } else {\n      window.removeEventListener(\"scroll\", this.onScroll)\n    }\n  },\n\n  throttle(interval, callback){\n    let lastCallAt = 0\n    let timer\n\n    return (...args) => {\n      let now = Date.now()\n      let remainingTime = interval - (now - lastCallAt)\n\n      if(remainingTime <= 0 || remainingTime > interval){\n        if(timer) {\n          clearTimeout(timer)\n          timer = null\n        }\n        lastCallAt = now\n        callback(...args)\n      } else if(!timer){\n        timer = setTimeout(() => {\n          lastCallAt = Date.now()\n          timer = null\n          callback(...args)\n        }, remainingTime)\n      }\n    }\n  }\n}\nexport default Hooks\n", "import {\n  maybe\n} from \"./utils\"\n\nimport DOM from \"./dom\"\n\nexport default class DOMPostMorphRestorer {\n  constructor(containerBefore, containerAfter, updateType){\n    let idsBefore = new Set()\n    let idsAfter = new Set([...containerAfter.children].map(child => child.id))\n\n    let elementsToModify = []\n\n    Array.from(containerBefore.children).forEach(child => {\n      if(child.id){ // all of our children should be elements with ids\n        idsBefore.add(child.id)\n        if(idsAfter.has(child.id)){\n          let previousElementId = child.previousElementSibling && child.previousElementSibling.id\n          elementsToModify.push({elementId: child.id, previousElementId: previousElementId})\n        }\n      }\n    })\n\n    this.containerId = containerAfter.id\n    this.updateType = updateType\n    this.elementsToModify = elementsToModify\n    this.elementIdsToAdd = [...idsAfter].filter(id => !idsBefore.has(id))\n  }\n\n  // We do the following to optimize append/prepend operations:\n  //   1) Track ids of modified elements & of new elements\n  //   2) All the modified elements are put back in the correct position in the DOM tree\n  //      by storing the id of their previous sibling\n  //   3) New elements are going to be put in the right place by morphdom during append.\n  //      For prepend, we move them to the first position in the container\n  perform(){\n    let container = DOM.byId(this.containerId)\n    this.elementsToModify.forEach(elementToModify => {\n      if(elementToModify.previousElementId){\n        maybe(document.getElementById(elementToModify.previousElementId), previousElem => {\n          maybe(document.getElementById(elementToModify.elementId), elem => {\n            let isInRightPlace = elem.previousElementSibling && elem.previousElementSibling.id == previousElem.id\n            if(!isInRightPlace){\n              previousElem.insertAdjacentElement(\"afterend\", elem)\n            }\n          })\n        })\n      } else {\n        // This is the first element in the container\n        maybe(document.getElementById(elementToModify.elementId), elem => {\n          let isInRightPlace = elem.previousElementSibling == null\n          if(!isInRightPlace){\n            container.insertAdjacentElement(\"afterbegin\", elem)\n          }\n        })\n      }\n    })\n\n    if(this.updateType == \"prepend\"){\n      this.elementIdsToAdd.reverse().forEach(elemId => {\n        maybe(document.getElementById(elemId), elem => container.insertAdjacentElement(\"afterbegin\", elem))\n      })\n    }\n  }\n}\n", "var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n    return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n  return function morphdom(fromNode, toNode, options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (typeof toNode === 'string') {\n      if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n        var toNodeHtml = toNode;\n        toNode = doc.createElement('html');\n        toNode.innerHTML = toNodeHtml;\n      } else {\n        toNode = toElement(toNode);\n      }\n    } else if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n      toNode = toNode.firstElementChild;\n    }\n\n    var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n    var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n    var onNodeAdded = options.onNodeAdded || noop;\n    var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n    var onElUpdated = options.onElUpdated || noop;\n    var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n    var onNodeDiscarded = options.onNodeDiscarded || noop;\n    var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n    var skipFromChildren = options.skipFromChildren || noop;\n    var addChild = options.addChild || function(parent, child){ return parent.appendChild(child); };\n    var childrenOnly = options.childrenOnly === true;\n\n    // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n    var fromNodesLookup = Object.create(null);\n    var keyedRemovalList = [];\n\n    function addKeyedRemoval(key) {\n      keyedRemovalList.push(key);\n    }\n\n    function walkDiscardedChildNodes(node, skipKeyedNodes) {\n      if (node.nodeType === ELEMENT_NODE) {\n        var curChild = node.firstChild;\n        while (curChild) {\n\n          var key = undefined;\n\n          if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n            // If we are skipping keyed nodes then we add the key\n            // to a list so that it can be handled at the very end.\n            addKeyedRemoval(key);\n          } else {\n            // Only report the node as discarded if it is not keyed. We do this because\n            // at the end we loop through all keyed elements that were unmatched\n            // and then discard them in one final pass.\n            onNodeDiscarded(curChild);\n            if (curChild.firstChild) {\n              walkDiscardedChildNodes(curChild, skipKeyedNodes);\n            }\n          }\n\n          curChild = curChild.nextSibling;\n        }\n      }\n    }\n\n    /**\n    * Removes a DOM node out of the original DOM\n    *\n    * @param  {Node} node The node to remove\n    * @param  {Node} parentNode The nodes parent\n    * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n    * @return {undefined}\n    */\n    function removeNode(node, parentNode, skipKeyedNodes) {\n      if (onBeforeNodeDiscarded(node) === false) {\n        return;\n      }\n\n      if (parentNode) {\n        parentNode.removeChild(node);\n      }\n\n      onNodeDiscarded(node);\n      walkDiscardedChildNodes(node, skipKeyedNodes);\n    }\n\n    // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n    // function indexTree(root) {\n    //     var treeWalker = document.createTreeWalker(\n    //         root,\n    //         NodeFilter.SHOW_ELEMENT);\n    //\n    //     var el;\n    //     while((el = treeWalker.nextNode())) {\n    //         var key = getNodeKey(el);\n    //         if (key) {\n    //             fromNodesLookup[key] = el;\n    //         }\n    //     }\n    // }\n\n    // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n    //\n    // function indexTree(node) {\n    //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n    //     var el;\n    //     while((el = nodeIterator.nextNode())) {\n    //         var key = getNodeKey(el);\n    //         if (key) {\n    //             fromNodesLookup[key] = el;\n    //         }\n    //     }\n    // }\n\n    function indexTree(node) {\n      if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n        var curChild = node.firstChild;\n        while (curChild) {\n          var key = getNodeKey(curChild);\n          if (key) {\n            fromNodesLookup[key] = curChild;\n          }\n\n          // Walk recursively\n          indexTree(curChild);\n\n          curChild = curChild.nextSibling;\n        }\n      }\n    }\n\n    indexTree(fromNode);\n\n    function handleNodeAdded(el) {\n      onNodeAdded(el);\n\n      var curChild = el.firstChild;\n      while (curChild) {\n        var nextSibling = curChild.nextSibling;\n\n        var key = getNodeKey(curChild);\n        if (key) {\n          var unmatchedFromEl = fromNodesLookup[key];\n          // if we find a duplicate #id node in cache, replace `el` with cache value\n          // and morph it to the child node.\n          if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n            curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n            morphEl(unmatchedFromEl, curChild);\n          } else {\n            handleNodeAdded(curChild);\n          }\n        } else {\n          // recursively call for curChild and it's children to see if we find something in\n          // fromNodesLookup\n          handleNodeAdded(curChild);\n        }\n\n        curChild = nextSibling;\n      }\n    }\n\n    function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n      // We have processed all of the \"to nodes\". If curFromNodeChild is\n      // non-null then we still have some from nodes left over that need\n      // to be removed\n      while (curFromNodeChild) {\n        var fromNextSibling = curFromNodeChild.nextSibling;\n        if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n          // Since the node is keyed it might be matched up later so we defer\n          // the actual removal to later\n          addKeyedRemoval(curFromNodeKey);\n        } else {\n          // NOTE: we skip nested keyed nodes from being removed since there is\n          //       still a chance they will be matched up later\n          removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n        }\n        curFromNodeChild = fromNextSibling;\n      }\n    }\n\n    function morphEl(fromEl, toEl, childrenOnly) {\n      var toElKey = getNodeKey(toEl);\n\n      if (toElKey) {\n        // If an element with an ID is being morphed then it will be in the final\n        // DOM so clear it out of the saved elements collection\n        delete fromNodesLookup[toElKey];\n      }\n\n      if (!childrenOnly) {\n        // optional\n        if (onBeforeElUpdated(fromEl, toEl) === false) {\n          return;\n        }\n\n        // update attributes on original DOM element first\n        morphAttrs(fromEl, toEl);\n        // optional\n        onElUpdated(fromEl);\n\n        if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n          return;\n        }\n      }\n\n      if (fromEl.nodeName !== 'TEXTAREA') {\n        morphChildren(fromEl, toEl);\n      } else {\n        specialElHandlers.TEXTAREA(fromEl, toEl);\n      }\n    }\n\n    function morphChildren(fromEl, toEl) {\n      var skipFrom = skipFromChildren(fromEl, toEl);\n      var curToNodeChild = toEl.firstChild;\n      var curFromNodeChild = fromEl.firstChild;\n      var curToNodeKey;\n      var curFromNodeKey;\n\n      var fromNextSibling;\n      var toNextSibling;\n      var matchingFromEl;\n\n      // walk the children\n      outer: while (curToNodeChild) {\n        toNextSibling = curToNodeChild.nextSibling;\n        curToNodeKey = getNodeKey(curToNodeChild);\n\n        // walk the fromNode children all the way through\n        while (!skipFrom && curFromNodeChild) {\n          fromNextSibling = curFromNodeChild.nextSibling;\n\n          if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n            curToNodeChild = toNextSibling;\n            curFromNodeChild = fromNextSibling;\n            continue outer;\n          }\n\n          curFromNodeKey = getNodeKey(curFromNodeChild);\n\n          var curFromNodeType = curFromNodeChild.nodeType;\n\n          // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n          var isCompatible = undefined;\n\n          if (curFromNodeType === curToNodeChild.nodeType) {\n            if (curFromNodeType === ELEMENT_NODE) {\n              // Both nodes being compared are Element nodes\n\n              if (curToNodeKey) {\n                // The target node has a key so we want to match it up with the correct element\n                // in the original DOM tree\n                if (curToNodeKey !== curFromNodeKey) {\n                  // The current element in the original DOM tree does not have a matching key so\n                  // let's check our lookup to see if there is a matching element in the original\n                  // DOM tree\n                  if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                    if (fromNextSibling === matchingFromEl) {\n                      // Special case for single element removals. To avoid removing the original\n                      // DOM node out of the tree (since that can break CSS transitions, etc.),\n                      // we will instead discard the current node and wait until the next\n                      // iteration to properly match up the keyed target element with its matching\n                      // element in the original tree\n                      isCompatible = false;\n                    } else {\n                      // We found a matching keyed element somewhere in the original DOM tree.\n                      // Let's move the original DOM node into the current position and morph\n                      // it.\n\n                      // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                      // the `removeNode()` function for the node that is being discarded so that\n                      // all lifecycle hooks are correctly invoked\n                      fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                      // fromNextSibling = curFromNodeChild.nextSibling;\n\n                      if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                      } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                      }\n\n                      curFromNodeChild = matchingFromEl;\n                      curFromNodeKey = getNodeKey(curFromNodeChild);\n                    }\n                  } else {\n                    // The nodes are not compatible since the \"to\" node has a key and there\n                    // is no matching keyed node in the source tree\n                    isCompatible = false;\n                  }\n                }\n              } else if (curFromNodeKey) {\n                // The original has a key\n                isCompatible = false;\n              }\n\n              isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n              if (isCompatible) {\n                // We found compatible DOM elements so transform\n                // the current \"from\" node to match the current\n                // target DOM node.\n                // MORPH\n                morphEl(curFromNodeChild, curToNodeChild);\n              }\n\n            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n              // Both nodes being compared are Text or Comment nodes\n              isCompatible = true;\n              // Simply update nodeValue on the original node to\n              // change the text value\n              if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n              }\n\n            }\n          }\n\n          if (isCompatible) {\n            // Advance both the \"to\" child and the \"from\" child since we found a match\n            // Nothing else to do as we already recursively called morphChildren above\n            curToNodeChild = toNextSibling;\n            curFromNodeChild = fromNextSibling;\n            continue outer;\n          }\n\n          // No compatible match so remove the old node from the DOM and continue trying to find a\n          // match in the original DOM. However, we only do this if the from node is not keyed\n          // since it is possible that a keyed node might match up with a node somewhere else in the\n          // target tree and we don't want to discard it just yet since it still might find a\n          // home in the final DOM tree. After everything is done we will remove any keyed nodes\n          // that didn't find a home\n          if (curFromNodeKey) {\n            // Since the node is keyed it might be matched up later so we defer\n            // the actual removal to later\n            addKeyedRemoval(curFromNodeKey);\n          } else {\n            // NOTE: we skip nested keyed nodes from being removed since there is\n            //       still a chance they will be matched up later\n            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n          }\n\n          curFromNodeChild = fromNextSibling;\n        } // END: while(curFromNodeChild) {}\n\n        // If we got this far then we did not find a candidate match for\n        // our \"to node\" and we exhausted all of the children \"from\"\n        // nodes. Therefore, we will just append the current \"to\" node\n        // to the end\n        if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n          // MORPH\n          if(!skipFrom){ addChild(fromEl, matchingFromEl); }\n          morphEl(matchingFromEl, curToNodeChild);\n        } else {\n          var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n          if (onBeforeNodeAddedResult !== false) {\n            if (onBeforeNodeAddedResult) {\n              curToNodeChild = onBeforeNodeAddedResult;\n            }\n\n            if (curToNodeChild.actualize) {\n              curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n            }\n            addChild(fromEl, curToNodeChild);\n            handleNodeAdded(curToNodeChild);\n          }\n        }\n\n        curToNodeChild = toNextSibling;\n        curFromNodeChild = fromNextSibling;\n      }\n\n      cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n      var specialElHandler = specialElHandlers[fromEl.nodeName];\n      if (specialElHandler) {\n        specialElHandler(fromEl, toEl);\n      }\n    } // END: morphChildren(...)\n\n    var morphedNode = fromNode;\n    var morphedNodeType = morphedNode.nodeType;\n    var toNodeType = toNode.nodeType;\n\n    if (!childrenOnly) {\n      // Handle the case where we are given two DOM nodes that are not\n      // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n      if (morphedNodeType === ELEMENT_NODE) {\n        if (toNodeType === ELEMENT_NODE) {\n          if (!compareNodeNames(fromNode, toNode)) {\n            onNodeDiscarded(fromNode);\n            morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n          }\n        } else {\n          // Going from an element node to a text node\n          morphedNode = toNode;\n        }\n      } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n        if (toNodeType === morphedNodeType) {\n          if (morphedNode.nodeValue !== toNode.nodeValue) {\n            morphedNode.nodeValue = toNode.nodeValue;\n          }\n\n          return morphedNode;\n        } else {\n          // Text node to something else\n          morphedNode = toNode;\n        }\n      }\n    }\n\n    if (morphedNode === toNode) {\n      // The \"to node\" was not compatible with the \"from node\" so we had to\n      // toss out the \"from node\" and use the \"to node\"\n      onNodeDiscarded(fromNode);\n    } else {\n      if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n        return;\n      }\n\n      morphEl(morphedNode, toNode, childrenOnly);\n\n      // We now need to loop over any keyed nodes that might need to be\n      // removed. We only do the removal if we know that the keyed node\n      // never found a match. When a keyed node is matched up we remove\n      // it out of fromNodesLookup and we use fromNodesLookup to determine\n      // if a keyed node has been matched up or not\n      if (keyedRemovalList) {\n        for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n          var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n          if (elToRemove) {\n            removeNode(elToRemove, elToRemove.parentNode, false);\n          }\n        }\n      }\n    }\n\n    if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n      if (morphedNode.actualize) {\n        morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n      }\n      // If we had to swap out the from node with a new node because the old\n      // node was not compatible with the target node then we need to\n      // replace the old DOM node in the original DOM tree. This is only\n      // possible if the original DOM node was part of a DOM tree which\n      // we know is the case if it has a parent node.\n      fromNode.parentNode.replaceChild(morphedNode, fromNode);\n    }\n\n    return morphedNode;\n  };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n", "import {\n  PHX_COMPONENT,\n  PHX_DISABLE_WITH,\n  PHX_FEEDBACK_FOR,\n  PHX_FEEDBACK_GROUP,\n  PHX_PRUNE,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_SKIP,\n  PHX_MAGIC_ID,\n  PHX_STATIC,\n  PHX_TRIGGER_ACTION,\n  PHX_UPDATE,\n  PHX_STREAM,\n  PHX_STREAM_REF,\n  PHX_VIEWPORT_TOP,\n  PHX_VIEWPORT_BOTTOM,\n} from \"./constants\"\n\nimport {\n  detectDuplicateIds,\n  isCid\n} from \"./utils\"\n\nimport DOM from \"./dom\"\nimport DOMPostMorphRestorer from \"./dom_post_morph_restorer\"\nimport morphdom from \"morphdom\"\n\nexport default class DOMPatch {\n  static patchEl(fromEl, toEl, activeElement){\n    morphdom(fromEl, toEl, {\n      childrenOnly: false,\n      onBeforeElUpdated: (fromEl, toEl) => {\n        if(activeElement && activeElement.isSameNode(fromEl) && DOM.isFormInput(fromEl)){\n          DOM.mergeFocusedInput(fromEl, toEl)\n          return false\n        }\n      }\n    })\n  }\n\n  constructor(view, container, id, html, streams, targetCID){\n    this.view = view\n    this.liveSocket = view.liveSocket\n    this.container = container\n    this.id = id\n    this.rootID = view.root.id\n    this.html = html\n    this.streams = streams\n    this.streamInserts = {}\n    this.streamComponentRestore = {}\n    this.targetCID = targetCID\n    this.cidPatch = isCid(this.targetCID)\n    this.pendingRemoves = []\n    this.phxRemove = this.liveSocket.binding(\"remove\")\n    this.callbacks = {\n      beforeadded: [], beforeupdated: [], beforephxChildAdded: [],\n      afteradded: [], afterupdated: [], afterdiscarded: [], afterphxChildAdded: [],\n      aftertransitionsDiscarded: []\n    }\n  }\n\n  before(kind, callback){ this.callbacks[`before${kind}`].push(callback) }\n  after(kind, callback){ this.callbacks[`after${kind}`].push(callback) }\n\n  trackBefore(kind, ...args){\n    this.callbacks[`before${kind}`].forEach(callback => callback(...args))\n  }\n\n  trackAfter(kind, ...args){\n    this.callbacks[`after${kind}`].forEach(callback => callback(...args))\n  }\n\n  markPrunableContentForRemoval(){\n    let phxUpdate = this.liveSocket.binding(PHX_UPDATE)\n    DOM.all(this.container, `[${phxUpdate}=append] > *, [${phxUpdate}=prepend] > *`, el => {\n      el.setAttribute(PHX_PRUNE, \"\")\n    })\n  }\n\n  perform(isJoinPatch){\n    let {view, liveSocket, container, html} = this\n    let targetContainer = this.isCIDPatch() ? this.targetCIDContainer(html) : container\n    if(this.isCIDPatch() && !targetContainer){ return }\n\n    let focused = liveSocket.getActiveElement()\n    let {selectionStart, selectionEnd} = focused && DOM.hasSelectionRange(focused) ? focused : {}\n    let phxUpdate = liveSocket.binding(PHX_UPDATE)\n    let phxFeedbackFor = liveSocket.binding(PHX_FEEDBACK_FOR)\n    let phxFeedbackGroup = liveSocket.binding(PHX_FEEDBACK_GROUP)\n    let disableWith = liveSocket.binding(PHX_DISABLE_WITH)\n    let phxViewportTop = liveSocket.binding(PHX_VIEWPORT_TOP)\n    let phxViewportBottom = liveSocket.binding(PHX_VIEWPORT_BOTTOM)\n    let phxTriggerExternal = liveSocket.binding(PHX_TRIGGER_ACTION)\n    let added = []\n    let feedbackContainers = []\n    let updates = []\n    let appendPrependUpdates = []\n\n    let externalFormTriggered = null\n\n    function morph(targetContainer, source, withChildren=false){\n      morphdom(targetContainer, source, {\n        // normally, we are running with childrenOnly, as the patch HTML for a LV\n        // does not include the LV attrs (data-phx-session, etc.)\n        // when we are patching a live component, we do want to patch the root element as well;\n        // another case is the recursive patch of a stream item that was kept on reset (-> onBeforeNodeAdded)\n        childrenOnly: targetContainer.getAttribute(PHX_COMPONENT) === null && !withChildren,\n        getNodeKey: (node) => {\n          if(DOM.isPhxDestroyed(node)){ return null }\n          // If we have a join patch, then by definition there was no PHX_MAGIC_ID.\n          // This is important to reduce the amount of elements morphdom discards.\n          if(isJoinPatch){ return node.id }\n          return node.id || (node.getAttribute && node.getAttribute(PHX_MAGIC_ID))\n        },\n        // skip indexing from children when container is stream\n        skipFromChildren: (from) => { return from.getAttribute(phxUpdate) === PHX_STREAM },\n        // tell morphdom how to add a child\n        addChild: (parent, child) => {\n          let {ref, streamAt} = this.getStreamInsert(child)\n          if(ref === undefined){ return parent.appendChild(child) }\n\n          this.setStreamRef(child, ref)\n\n          // streaming\n          if(streamAt === 0){\n            parent.insertAdjacentElement(\"afterbegin\", child)\n          } else if(streamAt === -1){\n            parent.appendChild(child)\n          } else if(streamAt > 0){\n            let sibling = Array.from(parent.children)[streamAt]\n            parent.insertBefore(child, sibling)\n          }\n        },\n        onBeforeNodeAdded: (el) => {\n          DOM.maybeAddPrivateHooks(el, phxViewportTop, phxViewportBottom)\n          this.trackBefore(\"added\", el)\n\n          let morphedEl = el\n          // this is a stream item that was kept on reset, recursively morph it\n          if(!isJoinPatch && this.streamComponentRestore[el.id]){\n            morphedEl = this.streamComponentRestore[el.id]\n            delete this.streamComponentRestore[el.id]\n            morph.call(this, morphedEl, el, true)\n          }\n\n          return morphedEl\n        },\n        onNodeAdded: (el) => {\n          if(el.getAttribute){ this.maybeReOrderStream(el, true) }\n          if(DOM.isFeedbackContainer(el, phxFeedbackFor)) feedbackContainers.push(el)\n\n          // hack to fix Safari handling of img srcset and video tags\n          if(el instanceof HTMLImageElement && el.srcset){\n            el.srcset = el.srcset\n          } else if(el instanceof HTMLVideoElement && el.autoplay){\n            el.play()\n          }\n          if(DOM.isNowTriggerFormExternal(el, phxTriggerExternal)){\n            externalFormTriggered = el\n          }\n\n          // nested view handling\n          if((DOM.isPhxChild(el) && view.ownsElement(el)) || DOM.isPhxSticky(el) && view.ownsElement(el.parentNode)){\n            this.trackAfter(\"phxChildAdded\", el)\n          }\n          added.push(el)\n        },\n        onNodeDiscarded: (el) => this.onNodeDiscarded(el),\n        onBeforeNodeDiscarded: (el) => {\n          if(el.getAttribute && el.getAttribute(PHX_PRUNE) !== null){ return true }\n          if(el.parentElement !== null && el.id &&\n            DOM.isPhxUpdate(el.parentElement, phxUpdate, [PHX_STREAM, \"append\", \"prepend\"])){\n            return false\n          }\n          if(this.maybePendingRemove(el)){ return false }\n          if(this.skipCIDSibling(el)){ return false }\n\n          return true\n        },\n        onElUpdated: (el) => {\n          if(DOM.isNowTriggerFormExternal(el, phxTriggerExternal)){\n            externalFormTriggered = el\n          }\n          updates.push(el)\n          this.maybeReOrderStream(el, false)\n        },\n        onBeforeElUpdated: (fromEl, toEl) => {\n          DOM.maybeAddPrivateHooks(toEl, phxViewportTop, phxViewportBottom)\n          // mark both from and to els as feedback containers, as we don't know yet which one will be used\n          // and we also need to remove the phx-no-feedback class when the phx-feedback-for attribute is removed\n          if(DOM.isFeedbackContainer(fromEl, phxFeedbackFor) || DOM.isFeedbackContainer(toEl, phxFeedbackFor)){\n            feedbackContainers.push(fromEl)\n            feedbackContainers.push(toEl)\n          }\n          DOM.cleanChildNodes(toEl, phxUpdate)\n          if(this.skipCIDSibling(toEl)){\n            // if this is a live component used in a stream, we may need to reorder it\n            this.maybeReOrderStream(fromEl)\n            return false\n          }\n          if(DOM.isPhxSticky(fromEl)){ return false }\n          if(DOM.isIgnored(fromEl, phxUpdate) || (fromEl.form && fromEl.form.isSameNode(externalFormTriggered))){\n            this.trackBefore(\"updated\", fromEl, toEl)\n            DOM.mergeAttrs(fromEl, toEl, {isIgnored: DOM.isIgnored(fromEl, phxUpdate)})\n            updates.push(fromEl)\n            DOM.applyStickyOperations(fromEl)\n            return false\n          }\n          if(fromEl.type === \"number\" && (fromEl.validity && fromEl.validity.badInput)){ return false }\n          if(!DOM.syncPendingRef(fromEl, toEl, disableWith)){\n            if(DOM.isUploadInput(fromEl)){\n              this.trackBefore(\"updated\", fromEl, toEl)\n              updates.push(fromEl)\n            }\n            DOM.applyStickyOperations(fromEl)\n            return false\n          }\n\n          // nested view handling\n          if(DOM.isPhxChild(toEl)){\n            let prevSession = fromEl.getAttribute(PHX_SESSION)\n            DOM.mergeAttrs(fromEl, toEl, {exclude: [PHX_STATIC]})\n            if(prevSession !== \"\"){ fromEl.setAttribute(PHX_SESSION, prevSession) }\n            fromEl.setAttribute(PHX_ROOT_ID, this.rootID)\n            DOM.applyStickyOperations(fromEl)\n            return false\n          }\n\n          // input handling\n          DOM.copyPrivates(toEl, fromEl)\n\n          let isFocusedFormEl = focused && fromEl.isSameNode(focused) && DOM.isFormInput(fromEl)\n          // skip patching focused inputs unless focus is a select that has changed options\n          let focusedSelectChanged = isFocusedFormEl && this.isChangedSelect(fromEl, toEl)\n          if(isFocusedFormEl && fromEl.type !== \"hidden\" && !focusedSelectChanged){\n            this.trackBefore(\"updated\", fromEl, toEl)\n            DOM.mergeFocusedInput(fromEl, toEl)\n            DOM.syncAttrsToProps(fromEl)\n            updates.push(fromEl)\n            DOM.applyStickyOperations(fromEl)\n            return false\n          } else {\n            // blur focused select if it changed so native UI is updated (ie safari won't update visible options)\n            if(focusedSelectChanged){ fromEl.blur() }\n            if(DOM.isPhxUpdate(toEl, phxUpdate, [\"append\", \"prepend\"])){\n              appendPrependUpdates.push(new DOMPostMorphRestorer(fromEl, toEl, toEl.getAttribute(phxUpdate)))\n            }\n\n            DOM.syncAttrsToProps(toEl)\n            DOM.applyStickyOperations(toEl)\n            this.trackBefore(\"updated\", fromEl, toEl)\n            return true\n          }\n        }\n      })\n    }\n\n    this.trackBefore(\"added\", container)\n    this.trackBefore(\"updated\", container, container)\n\n    liveSocket.time(\"morphdom\", () => {\n      this.streams.forEach(([ref, inserts, deleteIds, reset]) => {\n        inserts.forEach(([key, streamAt, limit]) => {\n          this.streamInserts[key] = {ref, streamAt, limit, reset}\n        })\n        if(reset !== undefined){\n          DOM.all(container, `[${PHX_STREAM_REF}=\"${ref}\"]`, child => {\n            this.removeStreamChildElement(child)\n          })\n        }\n        deleteIds.forEach(id => {\n          let child = container.querySelector(`[id=\"${id}\"]`)\n          if(child){ this.removeStreamChildElement(child) }\n        })\n      })\n\n      // clear stream items from the dead render if they are not inserted again\n      if(isJoinPatch){\n        DOM.all(this.container, `[${phxUpdate}=${PHX_STREAM}]`, el => {\n          // make sure to only remove elements owned by the current view\n          // see https://github.com/phoenixframework/phoenix_live_view/issues/3047\n          this.liveSocket.owner(el, (view) => {\n            if(view === this.view){\n              Array.from(el.children).forEach(child => {\n                this.removeStreamChildElement(child)\n              })\n            }\n          })\n        })\n      }\n\n      morph.call(this, targetContainer, html)\n    })\n\n    if(liveSocket.isDebugEnabled()){\n      detectDuplicateIds()\n      // warn if there are any inputs named \"id\"\n      Array.from(document.querySelectorAll(\"input[name=id]\")).forEach(node => {\n        if(node.form){\n          console.error(\"Detected an input with name=\\\"id\\\" inside a form! This will cause problems when patching the DOM.\\n\", node)\n        }\n      })\n    }\n\n    if(appendPrependUpdates.length > 0){\n      liveSocket.time(\"post-morph append/prepend restoration\", () => {\n        appendPrependUpdates.forEach(update => update.perform())\n      })\n    }\n\n    DOM.maybeHideFeedback(targetContainer, feedbackContainers, phxFeedbackFor, phxFeedbackGroup)\n\n    liveSocket.silenceEvents(() => DOM.restoreFocus(focused, selectionStart, selectionEnd))\n    DOM.dispatchEvent(document, \"phx:update\")\n    added.forEach(el => this.trackAfter(\"added\", el))\n    updates.forEach(el => this.trackAfter(\"updated\", el))\n\n    this.transitionPendingRemoves()\n\n    if(externalFormTriggered){\n      liveSocket.unload()\n      // use prototype's submit in case there's a form control with name or id of \"submit\"\n      // https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/submit\n      Object.getPrototypeOf(externalFormTriggered).submit.call(externalFormTriggered)\n    }\n    return true\n  }\n\n  onNodeDiscarded(el){\n    // nested view handling\n    if(DOM.isPhxChild(el) || DOM.isPhxSticky(el)){ this.liveSocket.destroyViewByEl(el) }\n    this.trackAfter(\"discarded\", el)\n  }\n\n  maybePendingRemove(node){\n    if(node.getAttribute && node.getAttribute(this.phxRemove) !== null){\n      this.pendingRemoves.push(node)\n      return true\n    } else {\n      return false\n    }\n  }\n\n  removeStreamChildElement(child){\n    // we need to store the node if it is actually re-added in the same patch\n    // we do NOT want to execute phx-remove, we do NOT want to call onNodeDiscarded\n    if(this.streamInserts[child.id]){\n      this.streamComponentRestore[child.id] = child\n      child.remove()\n    } else {\n      // only remove the element now if it has no phx-remove binding\n      if(!this.maybePendingRemove(child)){\n        child.remove()\n        this.onNodeDiscarded(child)\n      }\n    }\n  }\n\n  getStreamInsert(el){\n    let insert = el.id ? this.streamInserts[el.id] : {}\n    return insert || {}\n  }\n\n  setStreamRef(el, ref){\n    DOM.putSticky(el, PHX_STREAM_REF, el => el.setAttribute(PHX_STREAM_REF, ref))\n  }\n\n  maybeReOrderStream(el, isNew){\n    let {ref, streamAt, reset} = this.getStreamInsert(el)\n    if(streamAt === undefined){ return }\n\n    // we need to set the PHX_STREAM_REF here as well as addChild is invoked only for parents\n    this.setStreamRef(el, ref)\n\n    if(!reset && !isNew){\n      // we only reorder if the element is new or it's a stream reset\n      return\n    }\n\n    // check if the element has a parent element;\n    // it doesn't if we are currently recursively morphing (restoring a saved stream child)\n    // because the element is not yet added to the real dom;\n    // reordering does not make sense in that case anyway\n    if(!el.parentElement){ return }\n\n    if(streamAt === 0){\n      el.parentElement.insertBefore(el, el.parentElement.firstElementChild)\n    } else if(streamAt > 0){\n      let children = Array.from(el.parentElement.children)\n      let oldIndex = children.indexOf(el)\n      if(streamAt >= children.length - 1){\n        el.parentElement.appendChild(el)\n      } else {\n        let sibling = children[streamAt]\n        if(oldIndex > streamAt){\n          el.parentElement.insertBefore(el, sibling)\n        } else {\n          el.parentElement.insertBefore(el, sibling.nextElementSibling)\n        }\n      }\n    }\n\n    this.maybeLimitStream(el)\n  }\n\n  maybeLimitStream(el){\n    let {limit} = this.getStreamInsert(el)\n    let children = limit !== null && Array.from(el.parentElement.children)\n    if(limit && limit < 0 && children.length > limit * -1){\n      children.slice(0, children.length + limit).forEach(child => this.removeStreamChildElement(child))\n    } else if(limit && limit >= 0 && children.length > limit){\n      children.slice(limit).forEach(child => this.removeStreamChildElement(child))\n    }\n  }\n\n  transitionPendingRemoves(){\n    let {pendingRemoves, liveSocket} = this\n    if(pendingRemoves.length > 0){\n      liveSocket.transitionRemoves(pendingRemoves)\n      liveSocket.requestDOMUpdate(() => {\n        pendingRemoves.forEach(el => {\n          let child = DOM.firstPhxChild(el)\n          if(child){ liveSocket.destroyViewByEl(child) }\n          el.remove()\n        })\n        this.trackAfter(\"transitionsDiscarded\", pendingRemoves)\n      })\n    }\n  }\n\n  isChangedSelect(fromEl, toEl){\n    if(!(fromEl instanceof HTMLSelectElement) || fromEl.multiple){ return false }\n    if(fromEl.options.length !== toEl.options.length){ return true }\n\n    let fromSelected = fromEl.selectedOptions[0]\n    let toSelected = toEl.selectedOptions[0]\n    if(fromSelected && fromSelected.hasAttribute(\"selected\")){\n      toSelected.setAttribute(\"selected\", fromSelected.getAttribute(\"selected\"))\n    }\n\n    // in general we have to be very careful with using isEqualNode as it does not a reliable\n    // DOM tree equality check, but for selection attributes and options it works fine\n    return !fromEl.isEqualNode(toEl)\n  }\n\n  isCIDPatch(){ return this.cidPatch }\n\n  skipCIDSibling(el){\n    return el.nodeType === Node.ELEMENT_NODE && el.hasAttribute(PHX_SKIP)\n  }\n\n  targetCIDContainer(html){\n    if(!this.isCIDPatch()){ return }\n    let [first, ...rest] = DOM.findComponentNodeList(this.container, this.targetCID)\n    if(rest.length === 0 && DOM.childNodeLength(html) === 1){\n      return first\n    } else {\n      return first && first.parentNode\n    }\n  }\n\n  indexOf(parent, child){ return Array.from(parent.children).indexOf(child) }\n}\n", "import {\n  COMPONENTS,\n  DYNAMICS,\n  TEMPLATES,\n  EVENTS,\n  PHX_COMPONENT,\n  PHX_SKIP,\n  PHX_MAGIC_ID,\n  REPLY,\n  STATIC,\n  TITLE,\n  STREAM,\n  ROOT,\n} from \"./constants\"\n\nimport {\n  isObject,\n  logError,\n  isCid,\n} from \"./utils\"\n\nconst VOID_TAGS = new Set([\n  \"area\",\n  \"base\",\n  \"br\",\n  \"col\",\n  \"command\",\n  \"embed\",\n  \"hr\",\n  \"img\",\n  \"input\",\n  \"keygen\",\n  \"link\",\n  \"meta\",\n  \"param\",\n  \"source\",\n  \"track\",\n  \"wbr\"\n])\nconst quoteChars = new Set([\"'\", '\"'])\n\nexport let modifyRoot = (html, attrs, clearInnerHTML) => {\n  let i = 0\n  let insideComment = false\n  let beforeTag, afterTag, tag, tagNameEndsAt, id, newHTML\n\n  let lookahead = html.match(/^(\\s*(?:<!--.*?-->\\s*)*)<([^\\s\\/>]+)/)\n  if(lookahead === null) { throw new Error(`malformed html ${html}`) }\n\n  i = lookahead[0].length\n  beforeTag = lookahead[1]\n  tag = lookahead[2]\n  tagNameEndsAt = i\n\n  // Scan the opening tag for id, if there is any\n  for(i; i < html.length; i++){\n    if(html.charAt(i) === \">\" ){ break }\n    if(html.charAt(i) === \"=\"){\n      let isId = html.slice(i - 3, i) === \" id\"\n      i++;\n      let char = html.charAt(i)\n      if (quoteChars.has(char)) {\n        let attrStartsAt = i\n        i++\n        for(i; i < html.length; i++){\n          if(html.charAt(i) === char){ break }\n        }\n        if (isId) {\n          id = html.slice(attrStartsAt + 1, i)\n          break\n        }\n      }\n    }\n  }\n\n  let closeAt = html.length - 1\n  insideComment = false\n  while(closeAt >= beforeTag.length + tag.length){\n    let char = html.charAt(closeAt)\n    if(insideComment){\n      if(char === \"-\" && html.slice(closeAt - 3, closeAt) === \"<!-\"){\n        insideComment = false\n        closeAt -= 4\n      } else {\n        closeAt -= 1\n      }\n    } else if(char === \">\" && html.slice(closeAt - 2, closeAt) === \"--\"){\n      insideComment = true\n      closeAt -= 3\n    } else if(char === \">\"){\n      break\n    } else {\n      closeAt -= 1\n    }\n  }\n  afterTag = html.slice(closeAt + 1, html.length)\n\n  let attrsStr =\n    Object.keys(attrs)\n    .map(attr => attrs[attr] === true ? attr : `${attr}=\"${attrs[attr]}\"`)\n    .join(\" \")\n\n  if(clearInnerHTML){\n    // Keep the id if any\n    let idAttrStr = id ? ` id=\"${id}\"` : \"\";\n    if(VOID_TAGS.has(tag)){\n      newHTML = `<${tag}${idAttrStr}${attrsStr === \"\" ? \"\" : \" \"}${attrsStr}/>`\n    } else {\n      newHTML = `<${tag}${idAttrStr}${attrsStr === \"\" ? \"\" : \" \"}${attrsStr}></${tag}>`\n    }\n  } else {\n    let rest = html.slice(tagNameEndsAt, closeAt + 1)\n    newHTML = `<${tag}${attrsStr === \"\" ? \"\" : \" \"}${attrsStr}${rest}`\n  }\n\n  return [newHTML, beforeTag, afterTag]\n}\n\nexport default class Rendered {\n  static extract(diff){\n    let {[REPLY]: reply, [EVENTS]: events, [TITLE]: title} = diff\n    delete diff[REPLY]\n    delete diff[EVENTS]\n    delete diff[TITLE]\n    return {diff, title, reply: reply || null, events: events || []}\n  }\n\n  constructor(viewId, rendered){\n    this.viewId = viewId\n    this.rendered = {}\n    this.magicId = 0\n    this.mergeDiff(rendered)\n  }\n\n  parentViewId(){ return this.viewId }\n\n  toString(onlyCids){\n    let [str, streams] = this.recursiveToString(this.rendered, this.rendered[COMPONENTS], onlyCids, true, {})\n    return [str, streams]\n  }\n\n  recursiveToString(rendered, components = rendered[COMPONENTS], onlyCids, changeTracking, rootAttrs){\n    onlyCids = onlyCids ? new Set(onlyCids) : null\n    let output = {buffer: \"\", components: components, onlyCids: onlyCids, streams: new Set()}\n    this.toOutputBuffer(rendered, null, output, changeTracking, rootAttrs)\n    return [output.buffer, output.streams]\n  }\n\n  componentCIDs(diff){ return Object.keys(diff[COMPONENTS] || {}).map(i => parseInt(i)) }\n\n  isComponentOnlyDiff(diff){\n    if(!diff[COMPONENTS]){ return false }\n    return Object.keys(diff).length === 1\n  }\n\n  getComponent(diff, cid){ return diff[COMPONENTS][cid] }\n\n  resetRender(cid){\n    // we are racing a component destroy, it could not exist, so\n    // make sure that we don't try to set reset on undefined\n    if(this.rendered[COMPONENTS][cid]){\n      this.rendered[COMPONENTS][cid].reset = true\n    }\n  }\n\n  mergeDiff(diff){\n    let newc = diff[COMPONENTS]\n    let cache = {}\n    delete diff[COMPONENTS]\n    this.rendered = this.mutableMerge(this.rendered, diff)\n    this.rendered[COMPONENTS] = this.rendered[COMPONENTS] || {}\n\n    if(newc){\n      let oldc = this.rendered[COMPONENTS]\n\n      for(let cid in newc){\n        newc[cid] = this.cachedFindComponent(cid, newc[cid], oldc, newc, cache)\n      }\n\n      for(let cid in newc){ oldc[cid] = newc[cid] }\n      diff[COMPONENTS] = newc\n    }\n  }\n\n  cachedFindComponent(cid, cdiff, oldc, newc, cache){\n    if(cache[cid]){\n      return cache[cid]\n    } else {\n      let ndiff, stat, scid = cdiff[STATIC]\n\n      if(isCid(scid)){\n        let tdiff\n\n        if(scid > 0){\n          tdiff = this.cachedFindComponent(scid, newc[scid], oldc, newc, cache)\n        } else {\n          tdiff = oldc[-scid]\n        }\n\n        stat = tdiff[STATIC]\n        ndiff = this.cloneMerge(tdiff, cdiff, true)\n        ndiff[STATIC] = stat\n      } else {\n        ndiff = cdiff[STATIC] !== undefined || oldc[cid] === undefined ?\n          cdiff : this.cloneMerge(oldc[cid], cdiff, false)\n      }\n\n      cache[cid] = ndiff\n      return ndiff\n    }\n  }\n\n  mutableMerge(target, source){\n    if(source[STATIC] !== undefined){\n      return source\n    } else {\n      this.doMutableMerge(target, source)\n      return target\n    }\n  }\n\n  doMutableMerge(target, source){\n    for(let key in source){\n      let val = source[key]\n      let targetVal = target[key]\n      let isObjVal = isObject(val)\n      if(isObjVal && val[STATIC] === undefined && isObject(targetVal)){\n        this.doMutableMerge(targetVal, val)\n      } else {\n        target[key] = val\n      }\n    }\n    if(target[ROOT]){\n      target.newRender = true\n    }\n  }\n\n  // Merges cid trees together, copying statics from source tree.\n  //\n  // The `pruneMagicId` is passed to control pruning the magicId of the\n  // target. We must always prune the magicId when we are sharing statics\n  // from another component. If not pruning, we replicate the logic from\n  // mutableMerge, where we set newRender to true if there is a root\n  // (effectively forcing the new version to be rendered instead of skipped)\n  //\n  cloneMerge(target, source, pruneMagicId){\n    let merged = {...target, ...source}\n    for(let key in merged){\n      let val = source[key]\n      let targetVal = target[key]\n      if(isObject(val) && val[STATIC] === undefined && isObject(targetVal)){\n        merged[key] = this.cloneMerge(targetVal, val, pruneMagicId)\n      } else if(val === undefined && isObject(targetVal)){\n        merged[key] = this.cloneMerge(targetVal, {}, pruneMagicId)\n      }\n    }\n    if(pruneMagicId){\n      delete merged.magicId\n      delete merged.newRender\n    } else if(target[ROOT]){\n      merged.newRender = true\n    }\n    return merged\n  }\n\n  componentToString(cid){\n    let [str, streams] = this.recursiveCIDToString(this.rendered[COMPONENTS], cid, null)\n    let [strippedHTML, _before, _after] = modifyRoot(str, {})\n    return [strippedHTML, streams]\n  }\n\n  pruneCIDs(cids){\n    cids.forEach(cid => delete this.rendered[COMPONENTS][cid])\n  }\n\n  // private\n\n  get(){ return this.rendered }\n\n  isNewFingerprint(diff = {}){ return !!diff[STATIC] }\n\n  templateStatic(part, templates){\n    if(typeof (part) === \"number\") {\n      return templates[part]\n    } else {\n      return part\n    }\n  }\n\n  nextMagicID(){\n    this.magicId++\n    return `m${this.magicId}-${this.parentViewId()}`\n  }\n\n  // Converts rendered tree to output buffer.\n  //\n  // changeTracking controls if we can apply the PHX_SKIP optimization.\n  // It is disabled for comprehensions since we must re-render the entire collection\n  // and no individual element is tracked inside the comprehension.\n  toOutputBuffer(rendered, templates, output, changeTracking, rootAttrs = {}){\n    if(rendered[DYNAMICS]){ return this.comprehensionToBuffer(rendered, templates, output) }\n    let {[STATIC]: statics} = rendered\n    statics = this.templateStatic(statics, templates)\n    let isRoot = rendered[ROOT]\n    let prevBuffer = output.buffer\n    if(isRoot){ output.buffer = \"\" }\n\n    // this condition is called when first rendering an optimizable function component.\n    // LC have their magicId previously set\n    if(changeTracking && isRoot && !rendered.magicId){\n      rendered.newRender = true\n      rendered.magicId = this.nextMagicID()\n    }\n\n    output.buffer += statics[0]\n    for(let i = 1; i < statics.length; i++){\n      this.dynamicToBuffer(rendered[i - 1], templates, output, changeTracking)\n      output.buffer += statics[i]\n    }\n\n    // Applies the root tag \"skip\" optimization if supported, which clears\n    // the root tag attributes and innerHTML, and only maintains the magicId.\n    // We can only skip when changeTracking is supported (outside of a comprehension),\n    // and when the root element hasn't experienced an unrendered merge (newRender true).\n    if(isRoot){\n      let skip = false\n      let attrs\n      // When a LC is re-added to the page, we need to re-render the entire LC tree,\n      // therefore changeTracking is false; however, we need to keep all the magicIds\n      // from any function component so the next time the LC is updated, we can apply\n      // the skip optimization\n      if(changeTracking || rendered.magicId){\n        skip = changeTracking && !rendered.newRender\n        attrs = {[PHX_MAGIC_ID]: rendered.magicId, ...rootAttrs}\n      } else {\n        attrs = rootAttrs\n      }\n      if(skip){ attrs[PHX_SKIP] = true }\n      let [newRoot, commentBefore, commentAfter] = modifyRoot(output.buffer, attrs, skip)\n      rendered.newRender = false\n      output.buffer = prevBuffer + commentBefore + newRoot + commentAfter\n    }\n  }\n\n  comprehensionToBuffer(rendered, templates, output){\n    let {[DYNAMICS]: dynamics, [STATIC]: statics, [STREAM]: stream} = rendered\n    let [_ref, _inserts, deleteIds, reset] = stream || [null, {}, [], null]\n    statics = this.templateStatic(statics, templates)\n    let compTemplates = templates || rendered[TEMPLATES]\n    for(let d = 0; d < dynamics.length; d++){\n      let dynamic = dynamics[d]\n      output.buffer += statics[0]\n      for(let i = 1; i < statics.length; i++){\n        // Inside a comprehension, we don't track how dynamics change\n        // over time (and features like streams would make that impossible\n        // unless we move the stream diffing away from morphdom),\n        // so we can't perform root change tracking.\n        let changeTracking = false\n        this.dynamicToBuffer(dynamic[i - 1], compTemplates, output, changeTracking)\n        output.buffer += statics[i]\n      }\n    }\n\n    if(stream !== undefined && (rendered[DYNAMICS].length > 0 || deleteIds.length > 0 || reset)){\n      delete rendered[STREAM]\n      rendered[DYNAMICS] = []\n      output.streams.add(stream)\n    }\n  }\n\n  dynamicToBuffer(rendered, templates, output, changeTracking){\n    if(typeof (rendered) === \"number\"){\n      let [str, streams] = this.recursiveCIDToString(output.components, rendered, output.onlyCids)\n      output.buffer += str\n      output.streams = new Set([...output.streams, ...streams])\n    } else if(isObject(rendered)){\n      this.toOutputBuffer(rendered, templates, output, changeTracking, {})\n    } else {\n      output.buffer += rendered\n    }\n  }\n\n  recursiveCIDToString(components, cid, onlyCids){\n    let component = components[cid] || logError(`no component for CID ${cid}`, components)\n    let attrs = {[PHX_COMPONENT]: cid}\n    let skip = onlyCids && !onlyCids.has(cid)\n    // Two optimization paths apply here:\n    //\n    //   1. The onlyCids optimization works by the server diff telling us only specific\n    //     cid's have changed. This allows us to skip rendering any component that hasn't changed,\n    //     which ultimately sets PHX_SKIP root attribute and avoids rendering the innerHTML.\n    //\n    //   2. The root PHX_SKIP optimization generalizes to all HEEx function components, and\n    //     works in the same PHX_SKIP attribute fashion as 1, but the newRender tracking is done\n    //     at the general diff merge level. If we merge a diff with new dynamics, we necessarily have\n    //     experienced a change which must be a newRender, and thus we can't skip the render.\n    //\n    // Both optimization flows apply here. newRender is set based on the onlyCids optimization, and\n    // we track a deterministic magicId based on the cid.\n    //\n    // changeTracking is about the entire tree\n    // newRender is about the current root in the tree\n    //\n    // By default changeTracking is enabled, but we special case the flow where the client is pruning\n    // cids and the server adds the component back. In such cases, we explicitly disable changeTracking\n    // with resetRender for this cid, then re-enable it after the recursive call to skip the optimization\n    // for the entire component tree.\n    component.newRender = !skip\n    component.magicId = `c${cid}-${this.parentViewId()}`\n    // enable change tracking as long as the component hasn't been reset\n    let changeTracking = !component.reset\n    let [html, streams] = this.recursiveToString(component, components, onlyCids, changeTracking, attrs)\n    // disable reset after we've rendered\n    delete component.reset\n\n    return [html, streams]\n  }\n}\n", "let viewHookID = 1\nexport default class ViewHook {\n  static makeID(){ return viewHookID++ }\n  static elementID(el){ return el.phxHookId }\n\n  constructor(view, el, callbacks){\n    this.__view = view\n    this.liveSocket = view.liveSocket\n    this.__callbacks = callbacks\n    this.__listeners = new Set()\n    this.__isDisconnected = false\n    this.el = el\n    this.el.phxHookId = this.constructor.makeID()\n    for(let key in this.__callbacks){ this[key] = this.__callbacks[key] }\n  }\n\n  __mounted(){ this.mounted && this.mounted() }\n  __updated(){ this.updated && this.updated() }\n  __beforeUpdate(){ this.beforeUpdate && this.beforeUpdate() }\n  __destroyed(){ this.destroyed && this.destroyed() }\n  __reconnected(){\n    if(this.__isDisconnected){\n      this.__isDisconnected = false\n      this.reconnected && this.reconnected()\n    }\n  }\n  __disconnected(){\n    this.__isDisconnected = true\n    this.disconnected && this.disconnected()\n  }\n\n  pushEvent(event, payload = {}, onReply = function (){ }){\n    return this.__view.pushHookEvent(this.el, null, event, payload, onReply)\n  }\n\n  pushEventTo(phxTarget, event, payload = {}, onReply = function (){ }){\n    return this.__view.withinTargets(phxTarget, (view, targetCtx) => {\n      return view.pushHookEvent(this.el, targetCtx, event, payload, onReply)\n    })\n  }\n\n  handleEvent(event, callback){\n    let callbackRef = (customEvent, bypass) => bypass ? event : callback(customEvent.detail)\n    window.addEventListener(`phx:${event}`, callbackRef)\n    this.__listeners.add(callbackRef)\n    return callbackRef\n  }\n\n  removeHandleEvent(callbackRef){\n    let event = callbackRef(null, true)\n    window.removeEventListener(`phx:${event}`, callbackRef)\n    this.__listeners.delete(callbackRef)\n  }\n\n  upload(name, files){\n    return this.__view.dispatchUploads(null, name, files)\n  }\n\n  uploadTo(phxTarget, name, files){\n    return this.__view.withinTargets(phxTarget, (view, targetCtx) => {\n      view.dispatchUploads(targetCtx, name, files)\n    })\n  }\n\n  __cleanup__(){\n    this.__listeners.forEach(callbackRef => this.removeHandleEvent(callbackRef))\n  }\n}\n", "import {\n  BEFORE_UNLOAD_LOADER_TIMEOUT,\n  CHECKABLE_INPUTS,\n  CONSECUTIVE_RELOADS,\n  PHX_AUTO_RECOVER,\n  PHX_COMPONENT,\n  PHX_CONNECTED_CLASS,\n  PHX_DISABLE_WITH,\n  PHX_DISABLE_WITH_RESTORE,\n  PHX_DISABLED,\n  PHX_LOADING_CLASS,\n  PHX_EVENT_CLASSES,\n  PHX_ERROR_CLASS,\n  PHX_CLIENT_ERROR_CLASS,\n  PHX_SERVER_ERROR_CLASS,\n  PHX_FEEDBACK_FOR,\n  PHX_FEEDBACK_GROUP,\n  PHX_HAS_FOCUSED,\n  PHX_HAS_SUBMITTED,\n  PHX_HOOK,\n  PHX_PAGE_LOADING,\n  PHX_PARENT_ID,\n  PHX_PROGRESS,\n  PHX_READONLY,\n  PHX_REF,\n  PHX_REF_SRC,\n  PHX_ROOT_ID,\n  PHX_SESSION,\n  PHX_STATIC,\n  PHX_TRACK_STATIC,\n  PHX_TRACK_UPLOADS,\n  PHX_UPDATE,\n  PHX_UPLOAD_REF,\n  PHX_VIEW_SELECTOR,\n  PHX_MAIN,\n  PHX_MOUNTED,\n  PUSH_TIMEOUT,\n  PHX_VIEWPORT_TOP,\n  PHX_VIEWPORT_BOTTOM,\n} from \"./constants\"\n\nimport {\n  clone,\n  closestPhxBinding,\n  isEmpty,\n  isEqualObj,\n  logError,\n  maybe,\n  isCid,\n} from \"./utils\"\n\nimport Browser from \"./browser\"\nimport DOM from \"./dom\"\nimport DOMPatch from \"./dom_patch\"\nimport LiveUploader from \"./live_uploader\"\nimport Rendered from \"./rendered\"\nimport ViewHook from \"./view_hook\"\nimport JS from \"./js\"\n\nlet serializeForm = (form, metadata, onlyNames = []) => {\n  const {submitter, ...meta} = metadata\n\n  // We must inject the submitter in the order that it exists in the DOM\n  // releative to other inputs. For example, for checkbox groups, the order must be maintained.\n  let injectedElement\n  if(submitter && submitter.name){\n    const input = document.createElement(\"input\")\n    input.type = \"hidden\"\n    // set the form attribute if the submitter has one;\n    // this can happen if the element is outside the actual form element\n    const formId = submitter.getAttribute(\"form\")\n    if(formId){\n      input.setAttribute(\"form\", formId)\n    }\n    input.name = submitter.name\n    input.value = submitter.value\n    submitter.parentElement.insertBefore(input, submitter)\n    injectedElement = input\n  }\n\n  const formData = new FormData(form)\n  const toRemove = []\n\n  formData.forEach((val, key, _index) => {\n    if(val instanceof File){ toRemove.push(key) }\n  })\n\n  // Cleanup after building fileData\n  toRemove.forEach(key => formData.delete(key))\n\n  const params = new URLSearchParams()\n\n  for(let [key, val] of formData.entries()){\n    if(onlyNames.length === 0 || onlyNames.indexOf(key) >= 0){\n      params.append(key, val)\n    }\n  }\n\n  // remove the injected element again\n  // (it would be removed by the next dom patch anyway, but this is cleaner)\n  if(submitter && injectedElement){\n    submitter.parentElement.removeChild(injectedElement)\n  }\n\n  for(let metaKey in meta){ params.append(metaKey, meta[metaKey]) }\n\n  return params.toString()\n}\n\nexport default class View {\n  constructor(el, liveSocket, parentView, flash, liveReferer){\n    this.isDead = false\n    this.liveSocket = liveSocket\n    this.flash = flash\n    this.parent = parentView\n    this.root = parentView ? parentView.root : this\n    this.el = el\n    this.id = this.el.id\n    this.ref = 0\n    this.childJoins = 0\n    this.loaderTimer = null\n    this.pendingDiffs = []\n    this.pendingForms = new Set()\n    this.redirect = false\n    this.href = null\n    this.joinCount = this.parent ? this.parent.joinCount - 1 : 0\n    this.joinPending = true\n    this.destroyed = false\n    this.joinCallback = function(onDone){ onDone && onDone() }\n    this.stopCallback = function(){ }\n    this.pendingJoinOps = this.parent ? null : []\n    this.viewHooks = {}\n    this.formSubmits = []\n    this.children = this.parent ? null : {}\n    this.root.children[this.id] = {}\n    this.formsForRecovery = {}\n    this.channel = this.liveSocket.channel(`lv:${this.id}`, () => {\n      let url = this.href && this.expandURL(this.href)\n      return {\n        redirect: this.redirect ? url : undefined,\n        url: this.redirect ? undefined : url || undefined,\n        params: this.connectParams(liveReferer),\n        session: this.getSession(),\n        static: this.getStatic(),\n        flash: this.flash,\n      }\n    })\n  }\n\n  setHref(href){ this.href = href }\n\n  setRedirect(href){\n    this.redirect = true\n    this.href = href\n  }\n\n  isMain(){ return this.el.hasAttribute(PHX_MAIN) }\n\n  connectParams(liveReferer){\n    let params = this.liveSocket.params(this.el)\n    let manifest =\n      DOM.all(document, `[${this.binding(PHX_TRACK_STATIC)}]`)\n        .map(node => node.src || node.href).filter(url => typeof (url) === \"string\")\n\n    if(manifest.length > 0){ params[\"_track_static\"] = manifest }\n    params[\"_mounts\"] = this.joinCount\n    params[\"_live_referer\"] = liveReferer\n\n    return params\n  }\n\n  isConnected(){ return this.channel.canPush() }\n\n  getSession(){ return this.el.getAttribute(PHX_SESSION) }\n\n  getStatic(){\n    let val = this.el.getAttribute(PHX_STATIC)\n    return val === \"\" ? null : val\n  }\n\n  destroy(callback = function (){ }){\n    this.destroyAllChildren()\n    this.destroyed = true\n    delete this.root.children[this.id]\n    if(this.parent){ delete this.root.children[this.parent.id][this.id] }\n    clearTimeout(this.loaderTimer)\n    let onFinished = () => {\n      callback()\n      for(let id in this.viewHooks){\n        this.destroyHook(this.viewHooks[id])\n      }\n    }\n\n    DOM.markPhxChildDestroyed(this.el)\n\n    this.log(\"destroyed\", () => [\"the child has been removed from the parent\"])\n    this.channel.leave()\n      .receive(\"ok\", onFinished)\n      .receive(\"error\", onFinished)\n      .receive(\"timeout\", onFinished)\n  }\n\n  setContainerClasses(...classes){\n    this.el.classList.remove(\n      PHX_CONNECTED_CLASS,\n      PHX_LOADING_CLASS,\n      PHX_ERROR_CLASS,\n      PHX_CLIENT_ERROR_CLASS,\n      PHX_SERVER_ERROR_CLASS\n    )\n    this.el.classList.add(...classes)\n  }\n\n  showLoader(timeout){\n    clearTimeout(this.loaderTimer)\n    if(timeout){\n      this.loaderTimer = setTimeout(() => this.showLoader(), timeout)\n    } else {\n      for(let id in this.viewHooks){ this.viewHooks[id].__disconnected() }\n      this.setContainerClasses(PHX_LOADING_CLASS)\n    }\n  }\n\n  execAll(binding){\n    DOM.all(this.el, `[${binding}]`, el => this.liveSocket.execJS(el, el.getAttribute(binding)))\n  }\n\n  hideLoader(){\n    clearTimeout(this.loaderTimer)\n    this.setContainerClasses(PHX_CONNECTED_CLASS)\n    this.execAll(this.binding(\"connected\"))\n  }\n\n  triggerReconnected(){\n    for(let id in this.viewHooks){ this.viewHooks[id].__reconnected() }\n  }\n\n  log(kind, msgCallback){\n    this.liveSocket.log(this, kind, msgCallback)\n  }\n\n  transition(time, onStart, onDone = function(){}){\n    this.liveSocket.transition(time, onStart, onDone)\n  }\n\n  // calls the callback with the view and target element for the given phxTarget\n  // targets can be:\n  //  * an element itself, then it is simply passed to liveSocket.owner;\n  //  * a CID (Component ID), then we first search the component's element in the DOM\n  //  * a selector, then we search the selector in the DOM and call the callback\n  //    for each element found with the corresponding owner view\n  withinTargets(phxTarget, callback, dom = document, viewEl){\n    // in the form recovery case we search in a template fragment instead of\n    // the real dom, therefore we optionally pass dom and viewEl\n\n    if(phxTarget instanceof HTMLElement || phxTarget instanceof SVGElement){\n      return this.liveSocket.owner(phxTarget, view => callback(view, phxTarget))\n    }\n\n    if(isCid(phxTarget)){\n      let targets = DOM.findComponentNodeList(viewEl || this.el, phxTarget)\n      if(targets.length === 0){\n        logError(`no component found matching phx-target of ${phxTarget}`)\n      } else {\n        callback(this, parseInt(phxTarget))\n      }\n    } else {\n      let targets = Array.from(dom.querySelectorAll(phxTarget))\n      if(targets.length === 0){ logError(`nothing found matching the phx-target selector \"${phxTarget}\"`) }\n      targets.forEach(target => this.liveSocket.owner(target, view => callback(view, target)))\n    }\n  }\n\n  applyDiff(type, rawDiff, callback){\n    this.log(type, () => [\"\", clone(rawDiff)])\n    let {diff, reply, events, title} = Rendered.extract(rawDiff)\n    callback({diff, reply, events})\n    if(typeof title === \"string\"){ window.requestAnimationFrame(() => DOM.putTitle(title)) }\n  }\n\n  onJoin(resp){\n    let {rendered, container, liveview_version} = resp\n    if(container){\n      let [tag, attrs] = container\n      this.el = DOM.replaceRootContainer(this.el, tag, attrs)\n    }\n    this.childJoins = 0\n    this.joinPending = true\n    this.flash = null\n    if(this.root === this){\n      this.formsForRecovery = this.getFormsForRecovery()\n    }\n\n    if(liveview_version !== this.liveSocket.version()){\n      console.error(`LiveView asset version mismatch. JavaScript version ${this.liveSocket.version()} vs. server ${liveview_version}. To avoid issues, please ensure that your assets use the same version as the server.`)\n    }\n\n    Browser.dropLocal(this.liveSocket.localStorage, window.location.pathname, CONSECUTIVE_RELOADS)\n    this.applyDiff(\"mount\", rendered, ({diff, events}) => {\n      this.rendered = new Rendered(this.id, diff)\n      let [html, streams] = this.renderContainer(null, \"join\")\n      this.dropPendingRefs()\n      this.joinCount++\n\n      this.maybeRecoverForms(html, () => {\n        this.onJoinComplete(resp, html, streams, events)\n      })\n    })\n  }\n\n  dropPendingRefs(){\n    DOM.all(document, `[${PHX_REF_SRC}=\"${this.id}\"][${PHX_REF}]`, el => {\n      el.removeAttribute(PHX_REF)\n      el.removeAttribute(PHX_REF_SRC)\n    })\n  }\n\n  onJoinComplete({live_patch}, html, streams, events){\n    // In order to provide a better experience, we want to join\n    // all LiveViews first and only then apply their patches.\n    if(this.joinCount > 1 || (this.parent && !this.parent.isJoinPending())){\n      return this.applyJoinPatch(live_patch, html, streams, events)\n    }\n\n    // One downside of this approach is that we need to find phxChildren\n    // in the html fragment, instead of directly on the DOM. The fragment\n    // also does not include PHX_STATIC, so we need to copy it over from\n    // the DOM.\n    let newChildren = DOM.findPhxChildrenInFragment(html, this.id).filter(toEl => {\n      let fromEl = toEl.id && this.el.querySelector(`[id=\"${toEl.id}\"]`)\n      let phxStatic = fromEl && fromEl.getAttribute(PHX_STATIC)\n      if(phxStatic){ toEl.setAttribute(PHX_STATIC, phxStatic) }\n      // set PHX_ROOT_ID to prevent events from being dispatched to the root view\n      // while the child join is still pending\n      if(fromEl){ fromEl.setAttribute(PHX_ROOT_ID, this.root.id) }\n      return this.joinChild(toEl)\n    })\n\n    if(newChildren.length === 0){\n      if(this.parent){\n        this.root.pendingJoinOps.push([this, () => this.applyJoinPatch(live_patch, html, streams, events)])\n        this.parent.ackJoin(this)\n      } else {\n        this.onAllChildJoinsComplete()\n        this.applyJoinPatch(live_patch, html, streams, events)\n      }\n    } else {\n      this.root.pendingJoinOps.push([this, () => this.applyJoinPatch(live_patch, html, streams, events)])\n    }\n  }\n\n  attachTrueDocEl(){\n    this.el = DOM.byId(this.id)\n    this.el.setAttribute(PHX_ROOT_ID, this.root.id)\n  }\n\n  // this is invoked for dead and live views, so we must filter by\n  // by owner to ensure we aren't duplicating hooks across disconnect\n  // and connected states. This also handles cases where hooks exist\n  // in a root layout with a LV in the body\n  execNewMounted(){\n    let phxViewportTop = this.binding(PHX_VIEWPORT_TOP)\n    let phxViewportBottom = this.binding(PHX_VIEWPORT_BOTTOM)\n    DOM.all(this.el, `[${phxViewportTop}], [${phxViewportBottom}]`, hookEl => {\n      if(this.ownsElement(hookEl)){\n        DOM.maybeAddPrivateHooks(hookEl, phxViewportTop, phxViewportBottom)\n        this.maybeAddNewHook(hookEl)\n      }\n    })\n    DOM.all(this.el, `[${this.binding(PHX_HOOK)}], [data-phx-${PHX_HOOK}]`, hookEl => {\n      if(this.ownsElement(hookEl)){\n        this.maybeAddNewHook(hookEl)\n      }\n    })\n    DOM.all(this.el, `[${this.binding(PHX_MOUNTED)}]`, el => {\n      if(this.ownsElement(el)){\n        this.maybeMounted(el)\n      }\n    })\n  }\n\n  applyJoinPatch(live_patch, html, streams, events){\n    this.attachTrueDocEl()\n    let patch = new DOMPatch(this, this.el, this.id, html, streams, null)\n    patch.markPrunableContentForRemoval()\n    this.performPatch(patch, false, true)\n    this.joinNewChildren()\n    this.execNewMounted()\n\n    this.joinPending = false\n    this.liveSocket.dispatchEvents(events)\n    this.applyPendingUpdates()\n\n    if(live_patch){\n      let {kind, to} = live_patch\n      this.liveSocket.historyPatch(to, kind)\n    }\n    this.hideLoader()\n    if(this.joinCount > 1){ this.triggerReconnected() }\n    this.stopCallback()\n  }\n\n  triggerBeforeUpdateHook(fromEl, toEl){\n    this.liveSocket.triggerDOM(\"onBeforeElUpdated\", [fromEl, toEl])\n    let hook = this.getHook(fromEl)\n    let isIgnored = hook && DOM.isIgnored(fromEl, this.binding(PHX_UPDATE))\n    if(hook && !fromEl.isEqualNode(toEl) && !(isIgnored && isEqualObj(fromEl.dataset, toEl.dataset))){\n      hook.__beforeUpdate()\n      return hook\n    }\n  }\n\n  maybeMounted(el){\n    let phxMounted = el.getAttribute(this.binding(PHX_MOUNTED))\n    let hasBeenInvoked = phxMounted && DOM.private(el, \"mounted\")\n    if(phxMounted && !hasBeenInvoked){\n      this.liveSocket.execJS(el, phxMounted)\n      DOM.putPrivate(el, \"mounted\", true)\n    }\n  }\n\n  maybeAddNewHook(el, force){\n    let newHook = this.addHook(el)\n    if(newHook){ newHook.__mounted() }\n  }\n\n  performPatch(patch, pruneCids, isJoinPatch = false){\n    let removedEls = []\n    let phxChildrenAdded = false\n    let updatedHookIds = new Set()\n\n    patch.after(\"added\", el => {\n      this.liveSocket.triggerDOM(\"onNodeAdded\", [el])\n      let phxViewportTop = this.binding(PHX_VIEWPORT_TOP)\n      let phxViewportBottom = this.binding(PHX_VIEWPORT_BOTTOM)\n      DOM.maybeAddPrivateHooks(el, phxViewportTop, phxViewportBottom)\n      this.maybeAddNewHook(el)\n      if(el.getAttribute){ this.maybeMounted(el) }\n    })\n\n    patch.after(\"phxChildAdded\", el => {\n      if(DOM.isPhxSticky(el)){\n        this.liveSocket.joinRootViews()\n      } else {\n        phxChildrenAdded = true\n      }\n    })\n\n    patch.before(\"updated\", (fromEl, toEl) => {\n      let hook = this.triggerBeforeUpdateHook(fromEl, toEl)\n      if(hook){ updatedHookIds.add(fromEl.id) }\n    })\n\n    patch.after(\"updated\", el => {\n      if(updatedHookIds.has(el.id)){ this.getHook(el).__updated() }\n    })\n\n    patch.after(\"discarded\", (el) => {\n      if(el.nodeType === Node.ELEMENT_NODE){ removedEls.push(el) }\n    })\n\n    patch.after(\"transitionsDiscarded\", els => this.afterElementsRemoved(els, pruneCids))\n    patch.perform(isJoinPatch)\n    this.afterElementsRemoved(removedEls, pruneCids)\n\n    return phxChildrenAdded\n  }\n\n  afterElementsRemoved(elements, pruneCids){\n    let destroyedCIDs = []\n    elements.forEach(parent => {\n      let components = DOM.all(parent, `[${PHX_COMPONENT}]`)\n      let hooks = DOM.all(parent, `[${this.binding(PHX_HOOK)}]`)\n      components.concat(parent).forEach(el => {\n        let cid = this.componentID(el)\n        if(isCid(cid) && destroyedCIDs.indexOf(cid) === -1){ destroyedCIDs.push(cid) }\n      })\n      hooks.concat(parent).forEach(hookEl => {\n        let hook = this.getHook(hookEl)\n        hook && this.destroyHook(hook)\n      })\n    })\n    // We should not pruneCids on joins. Otherwise, in case of\n    // rejoins, we may notify cids that no longer belong to the\n    // current LiveView to be removed.\n    if(pruneCids){\n      this.maybePushComponentsDestroyed(destroyedCIDs)\n    }\n  }\n\n  joinNewChildren(){\n    DOM.findPhxChildren(this.el, this.id).forEach(el => this.joinChild(el))\n  }\n\n  maybeRecoverForms(html, callback){\n    const phxChange = this.binding(\"change\")\n    const oldForms = this.root.formsForRecovery\n    // So why do we create a template element here?\n    // One way to recover forms would be to immediately apply the mount\n    // patch and then afterwards recover the forms. However, this would\n    // cause a flicker, because the mount patch would remove the form content\n    // until it is restored. Therefore LV decided to do form recovery with the\n    // raw HTML before it is applied and delay the mount patch until the form\n    // recovery events are done.\n    let template = document.createElement(\"template\")\n    template.innerHTML = html\n    // because we work with a template element, we must manually copy the attributes\n    // otherwise the owner / target helpers don't work properly\n    const rootEl = template.content.firstElementChild\n    rootEl.id = this.id\n    rootEl.setAttribute(PHX_ROOT_ID, this.root.id)\n    rootEl.setAttribute(PHX_SESSION, this.getSession())\n    rootEl.setAttribute(PHX_STATIC, this.getStatic())\n    rootEl.setAttribute(PHX_PARENT_ID, this.parent ? this.parent.id : null)\n\n    // we go over all form elements in the new HTML for the LV\n    // and look for old forms in the `formsForRecovery` object;\n    // the formsForRecovery can also contain forms from child views\n    const formsToRecover =\n      // we go over all forms in the new DOM; because this is only the HTML for the current\n      // view, we can be sure that all forms are owned by this view:\n      DOM.all(template.content, \"form\")\n        // only recover forms that have an id and are in the old DOM\n        .filter(newForm => newForm.id && oldForms[newForm.id])\n        // abandon forms we already tried to recover to prevent looping a failed state\n        .filter(newForm => !this.pendingForms.has(newForm.id))\n        // only recover if the form has the same phx-change value\n        .filter(newForm => oldForms[newForm.id].getAttribute(phxChange) === newForm.getAttribute(phxChange))\n        .map(newForm => {\n          return [oldForms[newForm.id], newForm]\n        })\n\n    if(formsToRecover.length === 0){\n      return callback()\n    }\n\n    formsToRecover.forEach(([oldForm, newForm], i) => {\n      this.pendingForms.add(newForm.id)\n      this.pushFormRecovery(oldForm, newForm, template.content, () => {\n        this.pendingForms.delete(newForm.id)\n        // we only call the callback once all forms have been recovered\n        if(i === formsToRecover.length - 1){\n          callback()\n        }\n      })\n    })\n  }\n\n  getChildById(id){ return this.root.children[this.id][id] }\n\n  getDescendentByEl(el){\n    if(el.id === this.id){\n      return this\n    } else {\n      return this.children[el.getAttribute(PHX_PARENT_ID)][el.id]\n    }\n  }\n\n  destroyDescendent(id){\n    for(let parentId in this.root.children){\n      for(let childId in this.root.children[parentId]){\n        if(childId === id){ return this.root.children[parentId][childId].destroy() }\n      }\n    }\n  }\n\n  joinChild(el){\n    let child = this.getChildById(el.id)\n    if(!child){\n      let view = new View(el, this.liveSocket, this)\n      this.root.children[this.id][view.id] = view\n      view.join()\n      this.childJoins++\n      return true\n    }\n  }\n\n  isJoinPending(){ return this.joinPending }\n\n  ackJoin(_child){\n    this.childJoins--\n\n    if(this.childJoins === 0){\n      if(this.parent){\n        this.parent.ackJoin(this)\n      } else {\n        this.onAllChildJoinsComplete()\n      }\n    }\n  }\n\n  onAllChildJoinsComplete(){\n    // we can clear pending form recoveries now that we've joined.\n    // They either all resolved or were abandoned\n    this.pendingForms.clear()\n    // we can also clear the formsForRecovery object to not keep old form elements around\n    this.formsForRecovery = {}\n    this.joinCallback(() => {\n      this.pendingJoinOps.forEach(([view, op]) => {\n        if(!view.isDestroyed()){ op() }\n      })\n      this.pendingJoinOps = []\n    })\n  }\n\n  update(diff, events){\n    if(this.isJoinPending() || (this.liveSocket.hasPendingLink() && this.root.isMain())){\n      return this.pendingDiffs.push({diff, events})\n    }\n\n    this.rendered.mergeDiff(diff)\n    let phxChildrenAdded = false\n\n    // When the diff only contains component diffs, then walk components\n    // and patch only the parent component containers found in the diff.\n    // Otherwise, patch entire LV container.\n    if(this.rendered.isComponentOnlyDiff(diff)){\n      this.liveSocket.time(\"component patch complete\", () => {\n        let parentCids = DOM.findExistingParentCIDs(this.el, this.rendered.componentCIDs(diff))\n        parentCids.forEach(parentCID => {\n          if(this.componentPatch(this.rendered.getComponent(diff, parentCID), parentCID)){ phxChildrenAdded = true }\n        })\n      })\n    } else if(!isEmpty(diff)){\n      this.liveSocket.time(\"full patch complete\", () => {\n        let [html, streams] = this.renderContainer(diff, \"update\")\n        let patch = new DOMPatch(this, this.el, this.id, html, streams, null)\n        phxChildrenAdded = this.performPatch(patch, true)\n      })\n    }\n\n    this.liveSocket.dispatchEvents(events)\n    if(phxChildrenAdded){ this.joinNewChildren() }\n  }\n\n  renderContainer(diff, kind){\n    return this.liveSocket.time(`toString diff (${kind})`, () => {\n      let tag = this.el.tagName\n      // Don't skip any component in the diff nor any marked as pruned\n      // (as they may have been added back)\n      let cids = diff ? this.rendered.componentCIDs(diff) : null\n      let [html, streams] = this.rendered.toString(cids)\n      return [`<${tag}>${html}</${tag}>`, streams]\n    })\n  }\n\n  componentPatch(diff, cid){\n    if(isEmpty(diff)) return false\n    let [html, streams] = this.rendered.componentToString(cid)\n    let patch = new DOMPatch(this, this.el, this.id, html, streams, cid)\n    let childrenAdded = this.performPatch(patch, true)\n    return childrenAdded\n  }\n\n  getHook(el){ return this.viewHooks[ViewHook.elementID(el)] }\n\n  addHook(el){\n    if(ViewHook.elementID(el) || !el.getAttribute){ return }\n    let hookName = el.getAttribute(`data-phx-${PHX_HOOK}`) || el.getAttribute(this.binding(PHX_HOOK))\n    if(hookName && !this.ownsElement(el)){ return }\n    let callbacks = this.liveSocket.getHookCallbacks(hookName)\n\n    if(callbacks){\n      if(!el.id){ logError(`no DOM ID for hook \"${hookName}\". Hooks require a unique ID on each element.`, el) }\n      let hook = new ViewHook(this, el, callbacks)\n      this.viewHooks[ViewHook.elementID(hook.el)] = hook\n      return hook\n    } else if(hookName !== null){\n      logError(`unknown hook found for \"${hookName}\"`, el)\n    }\n  }\n\n  destroyHook(hook){\n    hook.__destroyed()\n    hook.__cleanup__()\n    delete this.viewHooks[ViewHook.elementID(hook.el)]\n  }\n\n  applyPendingUpdates(){\n    this.pendingDiffs.forEach(({diff, events}) => this.update(diff, events))\n    this.pendingDiffs = []\n    this.eachChild(child => child.applyPendingUpdates())\n  }\n\n  eachChild(callback){\n    let children = this.root.children[this.id] || {}\n    for(let id in children){ callback(this.getChildById(id)) }\n  }\n\n  onChannel(event, cb){\n    this.liveSocket.onChannel(this.channel, event, resp => {\n      if(this.isJoinPending()){\n        this.root.pendingJoinOps.push([this, () => cb(resp)])\n      } else {\n        this.liveSocket.requestDOMUpdate(() => cb(resp))\n      }\n    })\n  }\n\n  bindChannel(){\n    // The diff event should be handled by the regular update operations.\n    // All other operations are queued to be applied only after join.\n    this.liveSocket.onChannel(this.channel, \"diff\", (rawDiff) => {\n      this.liveSocket.requestDOMUpdate(() => {\n        this.applyDiff(\"update\", rawDiff, ({diff, events}) => this.update(diff, events))\n      })\n    })\n    this.onChannel(\"redirect\", ({to, flash}) => this.onRedirect({to, flash}))\n    this.onChannel(\"live_patch\", (redir) => this.onLivePatch(redir))\n    this.onChannel(\"live_redirect\", (redir) => this.onLiveRedirect(redir))\n    this.channel.onError(reason => this.onError(reason))\n    this.channel.onClose(reason => this.onClose(reason))\n  }\n\n  destroyAllChildren(){ this.eachChild(child => child.destroy()) }\n\n  onLiveRedirect(redir){\n    let {to, kind, flash} = redir\n    let url = this.expandURL(to)\n    this.liveSocket.historyRedirect(url, kind, flash)\n  }\n\n  onLivePatch(redir){\n    let {to, kind} = redir\n    this.href = this.expandURL(to)\n    this.liveSocket.historyPatch(to, kind)\n  }\n\n  expandURL(to){\n    return to.startsWith(\"/\") ? `${window.location.protocol}//${window.location.host}${to}` : to\n  }\n\n  onRedirect({to, flash}){ this.liveSocket.redirect(to, flash) }\n\n  isDestroyed(){ return this.destroyed }\n\n  joinDead(){ this.isDead = true }\n\n  join(callback){\n    this.showLoader(this.liveSocket.loaderTimeout)\n    this.bindChannel()\n    if(this.isMain()){\n      this.stopCallback = this.liveSocket.withPageLoading({to: this.href, kind: \"initial\"})\n    }\n    this.joinCallback = (onDone) => {\n      onDone = onDone || function(){}\n      callback ? callback(this.joinCount, onDone) : onDone()\n    }\n    this.liveSocket.wrapPush(this, {timeout: false}, () => {\n      return this.channel.join()\n        .receive(\"ok\", data => {\n          if(!this.isDestroyed()){\n            this.liveSocket.requestDOMUpdate(() => this.onJoin(data))\n          }\n        })\n        .receive(\"error\", resp => !this.isDestroyed() && this.onJoinError(resp))\n        .receive(\"timeout\", () => !this.isDestroyed() && this.onJoinError({reason: \"timeout\"}))\n    })\n  }\n\n  onJoinError(resp){\n    if(resp.reason === \"reload\"){\n      this.log(\"error\", () => [`failed mount with ${resp.status}. Falling back to page request`, resp])\n      if(this.isMain()){ this.onRedirect({to: this.href}) }\n      return\n    } else if(resp.reason === \"unauthorized\" || resp.reason === \"stale\"){\n      this.log(\"error\", () => [\"unauthorized live_redirect. Falling back to page request\", resp])\n      if(this.isMain()){ this.onRedirect({to: this.href}) }\n      return\n    }\n    if(resp.redirect || resp.live_redirect){\n      this.joinPending = false\n      this.channel.leave()\n    }\n    if(resp.redirect){ return this.onRedirect(resp.redirect) }\n    if(resp.live_redirect){ return this.onLiveRedirect(resp.live_redirect) }\n    this.displayError([PHX_LOADING_CLASS, PHX_ERROR_CLASS, PHX_SERVER_ERROR_CLASS])\n    this.log(\"error\", () => [\"unable to join\", resp])\n    if(this.liveSocket.isConnected()){ this.liveSocket.reloadWithJitter(this) }\n  }\n\n  onClose(reason){\n    if(this.isDestroyed()){ return }\n    if(this.liveSocket.hasPendingLink() && reason !== \"leave\"){\n      return this.liveSocket.reloadWithJitter(this)\n    }\n    this.destroyAllChildren()\n    this.liveSocket.dropActiveElement(this)\n    // document.activeElement can be null in Internet Explorer 11\n    if(document.activeElement){ document.activeElement.blur() }\n    if(this.liveSocket.isUnloaded()){\n      this.showLoader(BEFORE_UNLOAD_LOADER_TIMEOUT)\n    }\n  }\n\n  onError(reason){\n    this.onClose(reason)\n    if(this.liveSocket.isConnected()){ this.log(\"error\", () => [\"view crashed\", reason]) }\n    if(!this.liveSocket.isUnloaded()){\n      if(this.liveSocket.isConnected()){\n        this.displayError([PHX_LOADING_CLASS, PHX_ERROR_CLASS, PHX_SERVER_ERROR_CLASS])\n      } else {\n        this.displayError([PHX_LOADING_CLASS, PHX_ERROR_CLASS, PHX_CLIENT_ERROR_CLASS])\n      }\n    }\n  }\n\n  displayError(classes){\n    if(this.isMain()){ DOM.dispatchEvent(window, \"phx:page-loading-start\", {detail: {to: this.href, kind: \"error\"}}) }\n    this.showLoader()\n    this.setContainerClasses(...classes)\n    this.execAll(this.binding(\"disconnected\"))\n  }\n\n  pushWithReply(refGenerator, event, payload, onReply = function (){ }){\n    if(!this.isConnected()){ return }\n\n    let [ref, [el], opts] = refGenerator ? refGenerator() : [null, [], {}]\n    let onLoadingDone = function(){ }\n    if(opts.page_loading || (el && (el.getAttribute(this.binding(PHX_PAGE_LOADING)) !== null))){\n      onLoadingDone = this.liveSocket.withPageLoading({kind: \"element\", target: el})\n    }\n\n    if(typeof (payload.cid) !== \"number\"){ delete payload.cid }\n    return (\n      this.liveSocket.wrapPush(this, {timeout: true}, () => {\n        return this.channel.push(event, payload, PUSH_TIMEOUT).receive(\"ok\", resp => {\n          let finish = (hookReply) => {\n            if(resp.redirect){ this.onRedirect(resp.redirect) }\n            if(resp.live_patch){ this.onLivePatch(resp.live_patch) }\n            if(resp.live_redirect){ this.onLiveRedirect(resp.live_redirect) }\n            onLoadingDone()\n            onReply(resp, hookReply)\n          }\n          if(resp.diff){\n            this.liveSocket.requestDOMUpdate(() => {\n              this.applyDiff(\"update\", resp.diff, ({diff, reply, events}) => {\n                if(ref !== null){ this.undoRefs(ref) }\n                this.update(diff, events)\n                finish(reply)\n              })\n            })\n          } else {\n            if(ref !== null){ this.undoRefs(ref) }\n            finish(null)\n          }\n        })\n      })\n    )\n  }\n\n  undoRefs(ref, onlyEls){\n    onlyEls = onlyEls ? new Set(onlyEls) : null\n    if(!this.isConnected()){ return } // exit if external form triggered\n\n    DOM.all(document, `[${PHX_REF_SRC}=\"${this.id}\"][${PHX_REF}=\"${ref}\"]`, el => {\n      if(onlyEls && !onlyEls.has(el)){ return }\n\n      el.dispatchEvent(new CustomEvent(\"phx:unlock\", {bubbles: true, cancelable: false}))\n      let disabledVal = el.getAttribute(PHX_DISABLED)\n      let readOnlyVal = el.getAttribute(PHX_READONLY)\n      // remove refs\n      el.removeAttribute(PHX_REF)\n      el.removeAttribute(PHX_REF_SRC)\n      // restore inputs\n      if(readOnlyVal !== null){\n        el.readOnly = readOnlyVal === \"true\" ? true : false\n        el.removeAttribute(PHX_READONLY)\n      }\n      if(disabledVal !== null){\n        el.disabled = disabledVal === \"true\" ? true : false\n        el.removeAttribute(PHX_DISABLED)\n      }\n      // remove classes\n      PHX_EVENT_CLASSES.forEach(className => DOM.removeClass(el, className))\n      // restore disables\n      let disableRestore = el.getAttribute(PHX_DISABLE_WITH_RESTORE)\n      if(disableRestore !== null){\n        el.innerText = disableRestore\n        el.removeAttribute(PHX_DISABLE_WITH_RESTORE)\n      }\n      let toEl = DOM.private(el, PHX_REF)\n      if(toEl){\n        let hook = this.triggerBeforeUpdateHook(el, toEl)\n        DOMPatch.patchEl(el, toEl, this.liveSocket.getActiveElement())\n        if(hook){ hook.__updated() }\n        DOM.deletePrivate(el, PHX_REF)\n      }\n    })\n  }\n\n  putRef(elements, event, opts = {}){\n    let newRef = this.ref++\n    let disableWith = this.binding(PHX_DISABLE_WITH)\n    if(opts.loading){ elements = elements.concat(DOM.all(document, opts.loading))}\n\n    for(let el of elements){\n      el.setAttribute(PHX_REF, newRef)\n      el.setAttribute(PHX_REF_SRC, this.el.id)\n      if(opts.submitter && !(el === opts.submitter || el === opts.form)){ continue }\n\n      el.classList.add(`phx-${event}-loading`)\n      el.dispatchEvent(new CustomEvent(`phx:${event}-loading`, {bubbles: true, cancelable: false}))\n      let disableText = el.getAttribute(disableWith)\n      if(disableText !== null){\n        if(!el.getAttribute(PHX_DISABLE_WITH_RESTORE)){\n          el.setAttribute(PHX_DISABLE_WITH_RESTORE, el.innerText)\n        }\n        if(disableText !== \"\"){ el.innerText = disableText }\n        // PHX_DISABLED could have already been set in disableForm\n        el.setAttribute(PHX_DISABLED, el.getAttribute(PHX_DISABLED) || el.disabled)\n        el.setAttribute(\"disabled\", \"\")\n      }\n    }\n    return [newRef, elements, opts]\n  }\n\n  componentID(el){\n    let cid = el.getAttribute && el.getAttribute(PHX_COMPONENT)\n    return cid ? parseInt(cid) : null\n  }\n\n  targetComponentID(target, targetCtx, opts = {}){\n    if(isCid(targetCtx)){ return targetCtx }\n\n    let cidOrSelector = opts.target || target.getAttribute(this.binding(\"target\"))\n    if(isCid(cidOrSelector)){\n      return parseInt(cidOrSelector)\n    } else if(targetCtx && (cidOrSelector !== null || opts.target)){\n      return this.closestComponentID(targetCtx)\n    } else {\n      return null\n    }\n  }\n\n  closestComponentID(targetCtx){\n    if(isCid(targetCtx)){\n      return targetCtx\n    } else if(targetCtx){\n      return maybe(targetCtx.closest(`[${PHX_COMPONENT}]`), el => this.ownsElement(el) && this.componentID(el))\n    } else {\n      return null\n    }\n  }\n\n  pushHookEvent(el, targetCtx, event, payload, onReply){\n    if(!this.isConnected()){\n      this.log(\"hook\", () => [\"unable to push hook event. LiveView not connected\", event, payload])\n      return false\n    }\n    let [ref, els, opts] = this.putRef([el], \"hook\")\n    this.pushWithReply(() => [ref, els, opts], \"event\", {\n      type: \"hook\",\n      event: event,\n      value: payload,\n      cid: this.closestComponentID(targetCtx)\n    }, (resp, reply) => onReply(reply, ref))\n\n    return ref\n  }\n\n  extractMeta(el, meta, value){\n    let prefix = this.binding(\"value-\")\n    for(let i = 0; i < el.attributes.length; i++){\n      if(!meta){ meta = {} }\n      let name = el.attributes[i].name\n      if(name.startsWith(prefix)){ meta[name.replace(prefix, \"\")] = el.getAttribute(name) }\n    }\n    if(el.value !== undefined && !(el instanceof HTMLFormElement)){\n      if(!meta){ meta = {} }\n      meta.value = el.value\n\n      if(el.tagName === \"INPUT\" && CHECKABLE_INPUTS.indexOf(el.type) >= 0 && !el.checked){\n        delete meta.value\n      }\n    }\n    if(value){\n      if(!meta){ meta = {} }\n      for(let key in value){ meta[key] = value[key] }\n    }\n    return meta\n  }\n\n\n  pushEvent(type, el, targetCtx, phxEvent, meta, opts = {}, onReply){\n    this.pushWithReply(() => this.putRef([el], type, opts), \"event\", {\n      type: type,\n      event: phxEvent,\n      value: this.extractMeta(el, meta, opts.value),\n      cid: this.targetComponentID(el, targetCtx, opts)\n    }, (resp, reply) => onReply && onReply(reply))\n  }\n\n  pushFileProgress(fileEl, entryRef, progress, onReply = function (){ }){\n    this.liveSocket.withinOwners(fileEl.form, (view, targetCtx) => {\n      view.pushWithReply(null, \"progress\", {\n        event: fileEl.getAttribute(view.binding(PHX_PROGRESS)),\n        ref: fileEl.getAttribute(PHX_UPLOAD_REF),\n        entry_ref: entryRef,\n        progress: progress,\n        cid: view.targetComponentID(fileEl.form, targetCtx)\n      }, onReply)\n    })\n  }\n\n  pushInput(inputEl, targetCtx, forceCid, phxEvent, opts, callback){\n    let uploads\n    let cid = isCid(forceCid) ? forceCid : this.targetComponentID(inputEl.form, targetCtx, opts)\n    let refGenerator = () => this.putRef([inputEl, inputEl.form], \"change\", opts)\n    let formData\n    let meta  = this.extractMeta(inputEl.form)\n    if(inputEl instanceof HTMLButtonElement){ meta.submitter = inputEl }\n    if(inputEl.getAttribute(this.binding(\"change\"))){\n      formData = serializeForm(inputEl.form, {_target: opts._target, ...meta}, [inputEl.name])\n    } else {\n      formData = serializeForm(inputEl.form, {_target: opts._target, ...meta})\n    }\n    if(DOM.isUploadInput(inputEl) && inputEl.files && inputEl.files.length > 0){\n      LiveUploader.trackFiles(inputEl, Array.from(inputEl.files))\n    }\n    uploads = LiveUploader.serializeUploads(inputEl)\n\n    let event = {\n      type: \"form\",\n      event: phxEvent,\n      value: formData,\n      uploads: uploads,\n      cid: cid\n    }\n    this.pushWithReply(refGenerator, \"event\", event, resp => {\n      DOM.showError(inputEl, this.liveSocket.binding(PHX_FEEDBACK_FOR), this.liveSocket.binding(PHX_FEEDBACK_GROUP))\n      if(DOM.isUploadInput(inputEl) && DOM.isAutoUpload(inputEl)){\n        if(LiveUploader.filesAwaitingPreflight(inputEl).length > 0){\n          let [ref, _els] = refGenerator()\n          this.undoRefs(ref, [inputEl.form])\n          this.uploadFiles(inputEl.form, targetCtx, ref, cid, (_uploads) => {\n            callback && callback(resp)\n            this.triggerAwaitingSubmit(inputEl.form)\n            this.undoRefs(ref)\n          })\n        }\n      } else {\n        callback && callback(resp)\n      }\n    })\n  }\n\n  triggerAwaitingSubmit(formEl){\n    let awaitingSubmit = this.getScheduledSubmit(formEl)\n    if(awaitingSubmit){\n      let [_el, _ref, _opts, callback] = awaitingSubmit\n      this.cancelSubmit(formEl)\n      callback()\n    }\n  }\n\n  getScheduledSubmit(formEl){\n    return this.formSubmits.find(([el, _ref, _opts, _callback]) => el.isSameNode(formEl))\n  }\n\n  scheduleSubmit(formEl, ref, opts, callback){\n    if(this.getScheduledSubmit(formEl)){ return true }\n    this.formSubmits.push([formEl, ref, opts, callback])\n  }\n\n  cancelSubmit(formEl){\n    this.formSubmits = this.formSubmits.filter(([el, ref, _callback]) => {\n      if(el.isSameNode(formEl)){\n        this.undoRefs(ref)\n        return false\n      } else {\n        return true\n      }\n    })\n  }\n\n  disableForm(formEl, opts = {}){\n    let filterIgnored = el => {\n      let userIgnored = closestPhxBinding(el, `${this.binding(PHX_UPDATE)}=ignore`, el.form)\n      return !(userIgnored || closestPhxBinding(el, \"data-phx-update=ignore\", el.form))\n    }\n    let filterDisables = el => {\n      return el.hasAttribute(this.binding(PHX_DISABLE_WITH))\n    }\n    let filterButton = el => el.tagName == \"BUTTON\"\n\n    let filterInput = el => [\"INPUT\", \"TEXTAREA\", \"SELECT\"].includes(el.tagName)\n\n    let formElements = Array.from(formEl.elements)\n    let disables = formElements.filter(filterDisables)\n    let buttons = formElements.filter(filterButton).filter(filterIgnored)\n    let inputs = formElements.filter(filterInput).filter(filterIgnored)\n\n    buttons.forEach(button => {\n      button.setAttribute(PHX_DISABLED, button.disabled)\n      button.disabled = true\n    })\n    inputs.forEach(input => {\n      input.setAttribute(PHX_READONLY, input.readOnly)\n      input.readOnly = true\n      if(input.files){\n        input.setAttribute(PHX_DISABLED, input.disabled)\n        input.disabled = true\n      }\n    })\n    formEl.setAttribute(this.binding(PHX_PAGE_LOADING), \"\")\n    return this.putRef([formEl].concat(disables).concat(buttons).concat(inputs), \"submit\", opts)\n  }\n\n  pushFormSubmit(formEl, targetCtx, phxEvent, submitter, opts, onReply){\n    let refGenerator = () => this.disableForm(formEl, {...opts, form: formEl, submitter: submitter})\n    let cid = this.targetComponentID(formEl, targetCtx)\n    if(LiveUploader.hasUploadsInProgress(formEl)){\n      let [ref, _els] = refGenerator()\n      let push = () => this.pushFormSubmit(formEl, targetCtx, phxEvent, submitter, opts, onReply)\n      return this.scheduleSubmit(formEl, ref, opts, push)\n    } else if(LiveUploader.inputsAwaitingPreflight(formEl).length > 0){\n      let [ref, els] = refGenerator()\n      let proxyRefGen = () => [ref, els, opts]\n      this.uploadFiles(formEl, targetCtx, ref, cid, (uploads) => {\n        // if we still having pending preflights it means we have invalid entries\n        // and the phx-submit cannot be completed\n        if(LiveUploader.inputsAwaitingPreflight(formEl).length > 0){\n          return this.undoRefs(ref)\n        }\n        let meta = this.extractMeta(formEl)\n        let formData = serializeForm(formEl, {submitter, ...meta})\n        this.pushWithReply(proxyRefGen, \"event\", {\n          type: \"form\",\n          event: phxEvent,\n          value: formData,\n          cid: cid\n        }, onReply)\n      })\n    } else if(!(formEl.hasAttribute(PHX_REF) && formEl.classList.contains(\"phx-submit-loading\"))){\n      let meta = this.extractMeta(formEl)\n      let formData = serializeForm(formEl, {submitter, ...meta})\n      this.pushWithReply(refGenerator, \"event\", {\n        type: \"form\",\n        event: phxEvent,\n        value: formData,\n        cid: cid\n      }, onReply)\n    }\n  }\n\n  uploadFiles(formEl, targetCtx, ref, cid, onComplete){\n    let joinCountAtUpload = this.joinCount\n    let inputEls = LiveUploader.activeFileInputs(formEl)\n    let numFileInputsInProgress = inputEls.length\n\n    // get each file input\n    inputEls.forEach(inputEl => {\n      let uploader = new LiveUploader(inputEl, this, () => {\n        numFileInputsInProgress--\n        if(numFileInputsInProgress === 0){ onComplete() }\n      });\n\n      let entries = uploader.entries().map(entry => entry.toPreflightPayload())\n\n      if(entries.length === 0) {\n        numFileInputsInProgress--\n        return\n      }\n\n      let payload = {\n        ref: inputEl.getAttribute(PHX_UPLOAD_REF),\n        entries: entries,\n        cid: this.targetComponentID(inputEl.form, targetCtx)\n      }\n\n      this.log(\"upload\", () => [\"sending preflight request\", payload])\n\n      this.pushWithReply(null, \"allow_upload\", payload, resp => {\n        this.log(\"upload\", () => [\"got preflight response\", resp])\n        // the preflight will reject entries beyond the max entries\n        // so we error and cancel entries on the client that are missing from the response\n        uploader.entries().forEach(entry => {\n          if(resp.entries && !resp.entries[entry.ref]){\n            this.handleFailedEntryPreflight(entry.ref, \"failed preflight\", uploader)\n          }\n        })\n        // for auto uploads, we may have an empty entries response from the server\n        // for form submits that contain invalid entries\n        if(resp.error || Object.keys(resp.entries).length === 0){\n          this.undoRefs(ref)\n          let errors = resp.error || []\n          errors.map(([entry_ref, reason]) => {\n            this.handleFailedEntryPreflight(entry_ref, reason, uploader)\n          })\n        } else {\n          let onError = (callback) => {\n            this.channel.onError(() => {\n              if(this.joinCount === joinCountAtUpload){ callback() }\n            })\n          }\n          uploader.initAdapterUpload(resp, onError, this.liveSocket)\n        }\n      })\n    })\n  }\n\n  handleFailedEntryPreflight(uploadRef, reason, uploader){\n    if(uploader.isAutoUpload()){\n      // uploadRef may be top level upload config ref or entry ref\n      let entry = uploader.entries().find(entry => entry.ref === uploadRef.toString())\n      if(entry){ entry.cancel() }\n    } else {\n      uploader.entries().map(entry => entry.cancel())\n    }\n    this.log(\"upload\", () => [`error for entry ${uploadRef}`, reason])\n  }\n\n  dispatchUploads(targetCtx, name, filesOrBlobs){\n    let targetElement = this.targetCtxElement(targetCtx) || this.el\n    let inputs = DOM.findUploadInputs(targetElement).filter(el => el.name === name)\n    if(inputs.length === 0){ logError(`no live file inputs found matching the name \"${name}\"`) }\n    else if(inputs.length > 1){ logError(`duplicate live file inputs found matching the name \"${name}\"`) }\n    else { DOM.dispatchEvent(inputs[0], PHX_TRACK_UPLOADS, {detail: {files: filesOrBlobs}}) }\n  }\n\n  targetCtxElement(targetCtx) {\n    if(isCid(targetCtx)){\n      let [target] = DOM.findComponentNodeList(this.el, targetCtx)\n      return target\n    } else if(targetCtx) {\n      return targetCtx\n    } else {\n      return null\n    }\n  }\n\n  pushFormRecovery(oldForm, newForm, templateDom, callback){\n    // we are only recovering forms inside the current view, therefore it is safe to\n    // skip withinOwners here and always use this when referring to the view\n    const phxChange = this.binding(\"change\")\n    const phxTarget = newForm.getAttribute(this.binding(\"target\")) || newForm\n    const phxEvent = newForm.getAttribute(this.binding(PHX_AUTO_RECOVER)) || newForm.getAttribute(this.binding(\"change\"))\n    const inputs = Array.from(oldForm.elements).filter(el => DOM.isFormInput(el) && el.name && !el.hasAttribute(phxChange))\n    if(inputs.length === 0){ return }\n\n    // we must clear tracked uploads before recovery as they no longer have valid refs\n    inputs.forEach(input => input.hasAttribute(PHX_UPLOAD_REF) && LiveUploader.clearFiles(input))\n    // pushInput assumes that there is a source element that initiated the change;\n    // because this is not the case when we recover forms, we provide the first input we find\n    let input = inputs.find(el => el.type !== \"hidden\") || inputs[0]\n\n    // in the case that there are multiple targets, we count the number of pending recovery events\n    // and only call the callback once all events have been processed\n    let pending = 0\n    // withinTargets(phxTarget, callback, dom, viewEl)\n    this.withinTargets(phxTarget, (targetView, targetCtx) => {\n      const cid = this.targetComponentID(newForm, targetCtx)\n      pending++\n      targetView.pushInput(input, targetCtx, cid, phxEvent, {_target: input.name}, () => {\n        pending--\n        if(pending === 0){ callback() }\n      })\n    }, templateDom, templateDom)\n  }\n\n  pushLinkPatch(href, targetEl, callback){\n    let linkRef = this.liveSocket.setPendingLink(href)\n    let refGen = targetEl ? () => this.putRef([targetEl], \"click\") : null\n    let fallback = () => this.liveSocket.redirect(window.location.href)\n    let url = href.startsWith(\"/\") ? `${location.protocol}//${location.host}${href}` : href\n\n    let push = this.pushWithReply(refGen, \"live_patch\", {url}, resp => {\n      this.liveSocket.requestDOMUpdate(() => {\n        if(resp.link_redirect){\n          this.liveSocket.replaceMain(href, null, callback, linkRef)\n        } else {\n          if(this.liveSocket.commitPendingLink(linkRef)){\n            this.href = href\n          }\n          this.applyPendingUpdates()\n          callback && callback(linkRef)\n        }\n      })\n    })\n\n    if(push){\n      push.receive(\"timeout\", fallback)\n    } else {\n      fallback()\n    }\n  }\n\n  getFormsForRecovery(){\n    if(this.joinCount === 0){ return {} }\n\n    let phxChange = this.binding(\"change\")\n\n    return DOM.all(this.el, `form[${phxChange}]`)\n      .filter(form => form.id)\n      .filter(form => form.elements.length > 0)\n      .filter(form => form.getAttribute(this.binding(PHX_AUTO_RECOVER)) !== \"ignore\")\n      .map(form => form.cloneNode(true))\n      .reduce((acc, form) => {\n        acc[form.id] = form\n        return acc\n      }, {})\n  }\n\n  maybePushComponentsDestroyed(destroyedCIDs){\n    let willDestroyCIDs = destroyedCIDs.filter(cid => {\n      return DOM.findComponentNodeList(this.el, cid).length === 0\n    })\n\n    if(willDestroyCIDs.length > 0){\n      // we must reset the render change tracking for cids that\n      // could be added back from the server so we don't skip them\n      willDestroyCIDs.forEach(cid => this.rendered.resetRender(cid))\n\n      this.pushWithReply(null, \"cids_will_destroy\", {cids: willDestroyCIDs}, () => {\n        // we must wait for pending transitions to complete before determining\n        // if the cids were added back to the DOM in the meantime (#3139)\n        this.liveSocket.requestDOMUpdate(() => {\n          // See if any of the cids we wanted to destroy were added back,\n          // if they were added back, we don't actually destroy them.\n          let completelyDestroyCIDs = willDestroyCIDs.filter(cid => {\n            return DOM.findComponentNodeList(this.el, cid).length === 0\n          })\n  \n          if(completelyDestroyCIDs.length > 0){\n            this.pushWithReply(null, \"cids_destroyed\", {cids: completelyDestroyCIDs}, (resp) => {\n              this.rendered.pruneCIDs(resp.cids)\n            })\n          }\n        })\n      })\n    }\n  }\n\n  ownsElement(el){\n    let parentViewEl = el.closest(PHX_VIEW_SELECTOR)\n    return el.getAttribute(PHX_PARENT_ID) === this.id ||\n      (parentViewEl && parentViewEl.id === this.id) ||\n      (!parentViewEl && this.isDead)\n  }\n\n  submitForm(form, targetCtx, phxEvent, submitter, opts = {}){\n    DOM.putPrivate(form, PHX_HAS_SUBMITTED, true)\n    const phxFeedbackFor = this.liveSocket.binding(PHX_FEEDBACK_FOR)\n    const phxFeedbackGroup = this.liveSocket.binding(PHX_FEEDBACK_GROUP)\n    const inputs = Array.from(form.elements)\n    inputs.forEach(input => DOM.putPrivate(input, PHX_HAS_SUBMITTED, true))\n    this.liveSocket.blurActiveElement(this)\n    this.pushFormSubmit(form, targetCtx, phxEvent, submitter, opts, () => {\n      inputs.forEach(input => DOM.showError(input, phxFeedbackFor, phxFeedbackGroup))\n      this.liveSocket.restorePreviouslyActiveFocus()\n    })\n  }\n\n  binding(kind){ return this.liveSocket.binding(kind) }\n}\n", "/** Initializes the LiveSocket\n *\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"wss://example.com/live\"`,\n *                                               `\"/live\"` (inherited host & protocol)\n * @param {Phoenix.Socket} socket - the required Phoenix Socket class imported from \"phoenix\". For example:\n *\n *     import {Socket} from \"phoenix\"\n *     import {LiveSocket} from \"phoenix_live_view\"\n *     let liveSocket = new LiveSocket(\"/live\", Socket, {...})\n *\n * @param {Object} [opts] - Optional configuration. Outside of keys listed below, all\n * configuration is passed directly to the Phoenix Socket constructor.\n * @param {Object} [opts.defaults] - The optional defaults to use for various bindings,\n * such as `phx-debounce`. Supports the following keys:\n *\n *   - debounce - the millisecond phx-debounce time. Defaults 300\n *   - throttle - the millisecond phx-throttle time. Defaults 300\n *\n * @param {Function} [opts.params] - The optional function for passing connect params.\n * The function receives the element associated with a given LiveView. For example:\n *\n *     (el) => {view: el.getAttribute(\"data-my-view-name\", token: window.myToken}\n *\n * @param {string} [opts.bindingPrefix] - The optional prefix to use for all phx DOM annotations.\n * Defaults to \"phx-\".\n * @param {Object} [opts.hooks] - The optional object for referencing LiveView hook callbacks.\n * @param {Object} [opts.uploaders] - The optional object for referencing LiveView uploader callbacks.\n * @param {integer} [opts.loaderTimeout] - The optional delay in milliseconds to wait before apply\n * loading states.\n * @param {integer} [opts.maxReloads] - The maximum reloads before entering failsafe mode.\n * @param {integer} [opts.reloadJitterMin] - The minimum time between normal reload attempts.\n * @param {integer} [opts.reloadJitterMax] - The maximum time between normal reload attempts.\n * @param {integer} [opts.failsafeJitter] - The time between reload attempts in failsafe mode.\n * @param {Function} [opts.viewLogger] - The optional function to log debug information. For example:\n *\n *     (view, kind, msg, obj) => console.log(`${view.id} ${kind}: ${msg} - `, obj)\n *\n * @param {Object} [opts.metadata] - The optional object mapping event names to functions for\n * populating event metadata. For example:\n *\n *     metadata: {\n *       click: (e, el) => {\n *         return {\n *           ctrlKey: e.ctrlKey,\n *           metaKey: e.metaKey,\n *           detail: e.detail || 1,\n *         }\n *       },\n *       keydown: (e, el) => {\n *         return {\n *           key: e.key,\n *           ctrlKey: e.ctrlKey,\n *           metaKey: e.metaKey,\n *           shiftKey: e.shiftKey\n *         }\n *       }\n *     }\n * @param {Object} [opts.sessionStorage] - An optional Storage compatible object\n * Useful when LiveView won't have access to `sessionStorage`.  For example, This could\n * happen if a site loads a cross-domain LiveView in an iframe.  Example usage:\n *\n *     class InMemoryStorage {\n *       constructor() { this.storage = {} }\n *       getItem(keyName) { return this.storage[keyName] || null }\n *       removeItem(keyName) { delete this.storage[keyName] }\n *       setItem(keyName, keyValue) { this.storage[keyName] = keyValue }\n *     }\n *\n * @param {Object} [opts.localStorage] - An optional Storage compatible object\n * Useful for when LiveView won't have access to `localStorage`.\n * See `opts.sessionStorage` for examples.\n*/\n\nimport {\n  BINDING_PREFIX,\n  CONSECUTIVE_RELOADS,\n  DEFAULTS,\n  FAILSAFE_JITTER,\n  LOADER_TIMEOUT,\n  MAX_RELOADS,\n  PHX_DEBOUNCE,\n  PHX_DROP_TARGET,\n  PHX_HAS_FOCUSED,\n  PHX_KEY,\n  PHX_LINK_STATE,\n  PHX_LIVE_LINK,\n  PHX_LV_DEBUG,\n  PHX_LV_LATENCY_SIM,\n  PHX_LV_PROFILE,\n  PHX_MAIN,\n  PHX_PARENT_ID,\n  PHX_VIEW_SELECTOR,\n  PHX_ROOT_ID,\n  PHX_THROTTLE,\n  PHX_TRACK_UPLOADS,\n  PHX_SESSION,\n  PHX_FEEDBACK_FOR,\n  PHX_FEEDBACK_GROUP,\n  RELOAD_JITTER_MIN,\n  RELOAD_JITTER_MAX,\n  PHX_REF,\n} from \"./constants\"\n\nimport {\n  clone,\n  closestPhxBinding,\n  closure,\n  debug,\n  maybe\n} from \"./utils\"\n\nimport Browser from \"./browser\"\nimport DOM from \"./dom\"\nimport Hooks from \"./hooks\"\nimport LiveUploader from \"./live_uploader\"\nimport View from \"./view\"\nimport JS from \"./js\"\n\nexport default class LiveSocket {\n  constructor(url, phxSocket, opts = {}){\n    this.unloaded = false\n    if(!phxSocket || phxSocket.constructor.name === \"Object\"){\n      throw new Error(`\n      a phoenix Socket must be provided as the second argument to the LiveSocket constructor. For example:\n\n          import {Socket} from \"phoenix\"\n          import {LiveSocket} from \"phoenix_live_view\"\n          let liveSocket = new LiveSocket(\"/live\", Socket, {...})\n      `)\n    }\n    this.socket = new phxSocket(url, opts)\n    this.bindingPrefix = opts.bindingPrefix || BINDING_PREFIX\n    this.opts = opts\n    this.params = closure(opts.params || {})\n    this.viewLogger = opts.viewLogger\n    this.metadataCallbacks = opts.metadata || {}\n    this.defaults = Object.assign(clone(DEFAULTS), opts.defaults || {})\n    this.activeElement = null\n    this.prevActive = null\n    this.silenced = false\n    this.main = null\n    this.outgoingMainEl = null\n    this.clickStartedAtTarget = null\n    this.linkRef = 1\n    this.roots = {}\n    this.href = window.location.href\n    this.pendingLink = null\n    this.currentLocation = clone(window.location)\n    this.hooks = opts.hooks || {}\n    this.uploaders = opts.uploaders || {}\n    this.loaderTimeout = opts.loaderTimeout || LOADER_TIMEOUT\n    this.reloadWithJitterTimer = null\n    this.maxReloads = opts.maxReloads || MAX_RELOADS\n    this.reloadJitterMin = opts.reloadJitterMin || RELOAD_JITTER_MIN\n    this.reloadJitterMax = opts.reloadJitterMax || RELOAD_JITTER_MAX\n    this.failsafeJitter = opts.failsafeJitter || FAILSAFE_JITTER\n    this.localStorage = opts.localStorage || window.localStorage\n    this.sessionStorage = opts.sessionStorage || window.sessionStorage\n    this.boundTopLevelEvents = false\n    this.serverCloseRef = null\n    this.domCallbacks = Object.assign({\n      onPatchStart: closure(),\n      onPatchEnd: closure(),\n      onNodeAdded: closure(),\n      onBeforeElUpdated: closure()},\n    opts.dom || {})\n    this.transitions = new TransitionSet()\n    window.addEventListener(\"pagehide\", _e => {\n      this.unloaded = true\n    })\n    this.socket.onOpen(() => {\n      if(this.isUnloaded()){\n        // reload page if being restored from back/forward cache and browser does not emit \"pageshow\"\n        window.location.reload()\n      }\n    })\n  }\n\n  // public\n\n  version(){ return LV_VSN }\n\n  isProfileEnabled(){ return this.sessionStorage.getItem(PHX_LV_PROFILE) === \"true\" }\n\n  isDebugEnabled(){ return this.sessionStorage.getItem(PHX_LV_DEBUG) === \"true\" }\n\n  isDebugDisabled(){ return this.sessionStorage.getItem(PHX_LV_DEBUG) === \"false\" }\n\n  enableDebug(){ this.sessionStorage.setItem(PHX_LV_DEBUG, \"true\") }\n\n  enableProfiling(){ this.sessionStorage.setItem(PHX_LV_PROFILE, \"true\") }\n\n  disableDebug(){ this.sessionStorage.setItem(PHX_LV_DEBUG, \"false\") }\n\n  disableProfiling(){ this.sessionStorage.removeItem(PHX_LV_PROFILE) }\n\n  enableLatencySim(upperBoundMs){\n    this.enableDebug()\n    console.log(\"latency simulator enabled for the duration of this browser session. Call disableLatencySim() to disable\")\n    this.sessionStorage.setItem(PHX_LV_LATENCY_SIM, upperBoundMs)\n  }\n\n  disableLatencySim(){ this.sessionStorage.removeItem(PHX_LV_LATENCY_SIM) }\n\n  getLatencySim(){\n    let str = this.sessionStorage.getItem(PHX_LV_LATENCY_SIM)\n    return str ? parseInt(str) : null\n  }\n\n  getSocket(){ return this.socket }\n\n  connect(){\n    // enable debug by default if on localhost and not explicitly disabled\n    if(window.location.hostname === \"localhost\" && !this.isDebugDisabled()){ this.enableDebug() }\n    let doConnect = () => {\n      if(this.joinRootViews()){\n        this.bindTopLevelEvents()\n        this.socket.connect()\n      } else if(this.main){\n        this.socket.connect()\n      } else {\n        this.bindTopLevelEvents({dead: true})\n      }\n      this.joinDeadView()\n    }\n    if([\"complete\", \"loaded\", \"interactive\"].indexOf(document.readyState) >= 0){\n      doConnect()\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => doConnect())\n    }\n  }\n\n  disconnect(callback){\n    clearTimeout(this.reloadWithJitterTimer)\n    // remove the socket close listener to avoid trying to handle\n    // a server close event when it is actually caused by us disconnecting\n    if(this.serverCloseRef){\n      this.socket.off(this.serverCloseRef)\n      this.serverCloseRef = null\n    }\n    this.socket.disconnect(callback)\n  }\n\n  replaceTransport(transport){\n    clearTimeout(this.reloadWithJitterTimer)\n    this.socket.replaceTransport(transport)\n    this.connect()\n  }\n\n  execJS(el, encodedJS, eventType = null){\n    this.owner(el, view => JS.exec(eventType, encodedJS, view, el))\n  }\n\n  // private\n\n  execJSHookPush(el, phxEvent, data, callback){\n    this.withinOwners(el, view => {\n      JS.exec(\"hook\", phxEvent, view, el, [\"push\", {data, callback}])\n    })\n  }\n\n  unload(){\n    if(this.unloaded){ return }\n    if(this.main && this.isConnected()){ this.log(this.main, \"socket\", () => [\"disconnect for page nav\"]) }\n    this.unloaded = true\n    this.destroyAllViews()\n    this.disconnect()\n  }\n\n  triggerDOM(kind, args){ this.domCallbacks[kind](...args) }\n\n  time(name, func){\n    if(!this.isProfileEnabled() || !console.time){ return func() }\n    console.time(name)\n    let result = func()\n    console.timeEnd(name)\n    return result\n  }\n\n  log(view, kind, msgCallback){\n    if(this.viewLogger){\n      let [msg, obj] = msgCallback()\n      this.viewLogger(view, kind, msg, obj)\n    } else if(this.isDebugEnabled()){\n      let [msg, obj] = msgCallback()\n      debug(view, kind, msg, obj)\n    }\n  }\n\n  requestDOMUpdate(callback){\n    this.transitions.after(callback)\n  }\n\n  transition(time, onStart, onDone = function(){}){\n    this.transitions.addTransition(time, onStart, onDone)\n  }\n\n  onChannel(channel, event, cb){\n    channel.on(event, data => {\n      let latency = this.getLatencySim()\n      if(!latency){\n        cb(data)\n      } else {\n        setTimeout(() => cb(data), latency)\n      }\n    })\n  }\n\n  wrapPush(view, opts, push){\n    let latency = this.getLatencySim()\n    let oldJoinCount = view.joinCount\n    if(!latency){\n      if(this.isConnected() && opts.timeout){\n        return push().receive(\"timeout\", () => {\n          if(view.joinCount === oldJoinCount && !view.isDestroyed()){\n            this.reloadWithJitter(view, () => {\n              this.log(view, \"timeout\", () => [\"received timeout while communicating with server. Falling back to hard refresh for recovery\"])\n            })\n          }\n        })\n      } else {\n        return push()\n      }\n    }\n\n    let fakePush = {\n      receives: [],\n      receive(kind, cb){ this.receives.push([kind, cb]) }\n    }\n    setTimeout(() => {\n      if(view.isDestroyed()){ return }\n      fakePush.receives.reduce((acc, [kind, cb]) => acc.receive(kind, cb), push())\n    }, latency)\n    return fakePush\n  }\n\n  reloadWithJitter(view, log){\n    clearTimeout(this.reloadWithJitterTimer)\n    this.disconnect()\n    let minMs = this.reloadJitterMin\n    let maxMs = this.reloadJitterMax\n    let afterMs = Math.floor(Math.random() * (maxMs - minMs + 1)) + minMs\n    let tries = Browser.updateLocal(this.localStorage, window.location.pathname, CONSECUTIVE_RELOADS, 0, count => count + 1)\n    if(tries > this.maxReloads){\n      afterMs = this.failsafeJitter\n    }\n    this.reloadWithJitterTimer = setTimeout(() => {\n      // if view has recovered, such as transport replaced, then cancel\n      if(view.isDestroyed() || view.isConnected()){ return }\n      view.destroy()\n      log ? log() : this.log(view, \"join\", () => [`encountered ${tries} consecutive reloads`])\n      if(tries > this.maxReloads){\n        this.log(view, \"join\", () => [`exceeded ${this.maxReloads} consecutive reloads. Entering failsafe mode`])\n      }\n      if(this.hasPendingLink()){\n        window.location = this.pendingLink\n      } else {\n        window.location.reload()\n      }\n    }, afterMs)\n  }\n\n  getHookCallbacks(name){\n    return name && name.startsWith(\"Phoenix.\") ? Hooks[name.split(\".\")[1]] : this.hooks[name]\n  }\n\n  isUnloaded(){ return this.unloaded }\n\n  isConnected(){ return this.socket.isConnected() }\n\n  getBindingPrefix(){ return this.bindingPrefix }\n\n  binding(kind){ return `${this.getBindingPrefix()}${kind}` }\n\n  channel(topic, params){ return this.socket.channel(topic, params) }\n\n  joinDeadView(){\n    let body = document.body\n    if(body && !this.isPhxView(body) && !this.isPhxView(document.firstElementChild)){\n      let view = this.newRootView(body)\n      view.setHref(this.getHref())\n      view.joinDead()\n      if(!this.main){ this.main = view }\n      window.requestAnimationFrame(() => view.execNewMounted())\n    }\n  }\n\n  joinRootViews(){\n    let rootsFound = false\n    DOM.all(document, `${PHX_VIEW_SELECTOR}:not([${PHX_PARENT_ID}])`, rootEl => {\n      if(!this.getRootById(rootEl.id)){\n        let view = this.newRootView(rootEl)\n        view.setHref(this.getHref())\n        view.join()\n        if(rootEl.hasAttribute(PHX_MAIN)){ this.main = view }\n      }\n      rootsFound = true\n    })\n    return rootsFound\n  }\n\n  redirect(to, flash){\n    this.unload()\n    Browser.redirect(to, flash)\n  }\n\n  replaceMain(href, flash, callback = null, linkRef = this.setPendingLink(href)){\n    let liveReferer = this.currentLocation.href\n    this.outgoingMainEl = this.outgoingMainEl || this.main.el\n    let newMainEl = DOM.cloneNode(this.outgoingMainEl, \"\")\n    this.main.showLoader(this.loaderTimeout)\n    this.main.destroy()\n\n    this.main = this.newRootView(newMainEl, flash, liveReferer)\n    this.main.setRedirect(href)\n    this.transitionRemoves(null, true)\n    this.main.join((joinCount, onDone) => {\n      if(joinCount === 1 && this.commitPendingLink(linkRef)){\n        this.requestDOMUpdate(() => {\n          DOM.findPhxSticky(document).forEach(el => newMainEl.appendChild(el))\n          this.outgoingMainEl.replaceWith(newMainEl)\n          this.outgoingMainEl = null\n          callback && callback(linkRef)\n          onDone()\n        })\n      }\n    })\n  }\n\n  transitionRemoves(elements, skipSticky){\n    let removeAttr = this.binding(\"remove\")\n    elements = elements || DOM.all(document, `[${removeAttr}]`)\n\n    if(skipSticky){\n      const stickies = DOM.findPhxSticky(document) || []\n      elements = elements.filter(el => !DOM.isChildOfAny(el, stickies))\n    }\n    elements.forEach(el => {\n      this.execJS(el, el.getAttribute(removeAttr), \"remove\")\n    })\n  }\n\n  isPhxView(el){ return el.getAttribute && el.getAttribute(PHX_SESSION) !== null }\n\n  newRootView(el, flash, liveReferer){\n    let view = new View(el, this, null, flash, liveReferer)\n    this.roots[view.id] = view\n    return view\n  }\n\n  owner(childEl, callback){\n    let view = maybe(childEl.closest(PHX_VIEW_SELECTOR), el => this.getViewByEl(el)) || this.main\n    if(view){ callback(view) }\n  }\n\n  withinOwners(childEl, callback){\n    this.owner(childEl, view => callback(view, childEl))\n  }\n\n  getViewByEl(el){\n    let rootId = el.getAttribute(PHX_ROOT_ID)\n    return maybe(this.getRootById(rootId), root => root.getDescendentByEl(el))\n  }\n\n  getRootById(id){ return this.roots[id] }\n\n  destroyAllViews(){\n    for(let id in this.roots){\n      this.roots[id].destroy()\n      delete this.roots[id]\n    }\n    this.main = null\n  }\n\n  destroyViewByEl(el){\n    let root = this.getRootById(el.getAttribute(PHX_ROOT_ID))\n    if(root && root.id === el.id){\n      root.destroy()\n      delete this.roots[root.id]\n    } else if(root){\n      root.destroyDescendent(el.id)\n    }\n  }\n\n  setActiveElement(target){\n    if(this.activeElement === target){ return }\n    this.activeElement = target\n    let cancel = () => {\n      if(target === this.activeElement){ this.activeElement = null }\n      target.removeEventListener(\"mouseup\", this)\n      target.removeEventListener(\"touchend\", this)\n    }\n    target.addEventListener(\"mouseup\", cancel)\n    target.addEventListener(\"touchend\", cancel)\n  }\n\n  getActiveElement(){\n    if(document.activeElement === document.body){\n      return this.activeElement || document.activeElement\n    } else {\n      // document.activeElement can be null in Internet Explorer 11\n      return document.activeElement || document.body\n    }\n  }\n\n  dropActiveElement(view){\n    if(this.prevActive && view.ownsElement(this.prevActive)){\n      this.prevActive = null\n    }\n  }\n\n  restorePreviouslyActiveFocus(){\n    if(this.prevActive && this.prevActive !== document.body){\n      this.prevActive.focus()\n    }\n  }\n\n  blurActiveElement(){\n    this.prevActive = this.getActiveElement()\n    if(this.prevActive !== document.body){ this.prevActive.blur() }\n  }\n\n  bindTopLevelEvents({dead} = {}){\n    if(this.boundTopLevelEvents){ return }\n\n    this.boundTopLevelEvents = true\n    // enter failsafe reload if server has gone away intentionally, such as \"disconnect\" broadcast\n    this.serverCloseRef = this.socket.onClose(event => {\n      // failsafe reload if normal closure and we still have a main LV\n      if(event && event.code === 1000 && this.main){ return this.reloadWithJitter(this.main) }\n    })\n    document.body.addEventListener(\"click\", function (){ }) // ensure all click events bubble for mobile Safari\n    window.addEventListener(\"pageshow\", e => {\n      if(e.persisted){ // reload page if being restored from back/forward cache\n        this.getSocket().disconnect()\n        this.withPageLoading({to: window.location.href, kind: \"redirect\"})\n        window.location.reload()\n      }\n    }, true)\n    if(!dead){ this.bindNav() }\n    this.bindClicks()\n    if(!dead){ this.bindForms() }\n    this.bind({keyup: \"keyup\", keydown: \"keydown\"}, (e, type, view, targetEl, phxEvent, phxTarget) => {\n      let matchKey = targetEl.getAttribute(this.binding(PHX_KEY))\n      let pressedKey = e.key && e.key.toLowerCase() // chrome clicked autocompletes send a keydown without key\n      if(matchKey && matchKey.toLowerCase() !== pressedKey){ return }\n\n      let data = {key: e.key, ...this.eventMeta(type, e, targetEl)}\n      JS.exec(type, phxEvent, view, targetEl, [\"push\", {data}])\n    })\n    this.bind({blur: \"focusout\", focus: \"focusin\"}, (e, type, view, targetEl, phxEvent, phxTarget) => {\n      if(!phxTarget){\n        let data = {key: e.key, ...this.eventMeta(type, e, targetEl)}\n        JS.exec(type, phxEvent, view, targetEl, [\"push\", {data}])\n      }\n    })\n    this.bind({blur: \"blur\", focus: \"focus\"}, (e, type, view, targetEl, phxEvent, phxTarget) => {\n      // blur and focus are triggered on document and window. Discard one to avoid dups\n      if(phxTarget === \"window\"){\n        let data = this.eventMeta(type, e, targetEl)\n        JS.exec(type, phxEvent, view, targetEl, [\"push\", {data}])\n      }\n    })\n    window.addEventListener(\"dragover\", e => e.preventDefault())\n    window.addEventListener(\"drop\", e => {\n      e.preventDefault()\n      let dropTargetId = maybe(closestPhxBinding(e.target, this.binding(PHX_DROP_TARGET)), trueTarget => {\n        return trueTarget.getAttribute(this.binding(PHX_DROP_TARGET))\n      })\n      let dropTarget = dropTargetId && document.getElementById(dropTargetId)\n      let files = Array.from(e.dataTransfer.files || [])\n      if(!dropTarget || dropTarget.disabled || files.length === 0 || !(dropTarget.files instanceof FileList)){ return }\n\n      LiveUploader.trackFiles(dropTarget, files, e.dataTransfer)\n      dropTarget.dispatchEvent(new Event(\"input\", {bubbles: true}))\n    })\n    this.on(PHX_TRACK_UPLOADS, e => {\n      let uploadTarget = e.target\n      if(!DOM.isUploadInput(uploadTarget)){ return }\n      let files = Array.from(e.detail.files || []).filter(f => f instanceof File || f instanceof Blob)\n      LiveUploader.trackFiles(uploadTarget, files)\n      uploadTarget.dispatchEvent(new Event(\"input\", {bubbles: true}))\n    })\n  }\n\n  eventMeta(eventName, e, targetEl){\n    let callback = this.metadataCallbacks[eventName]\n    return callback ? callback(e, targetEl) : {}\n  }\n\n  setPendingLink(href){\n    this.linkRef++\n    this.pendingLink = href\n    return this.linkRef\n  }\n\n  commitPendingLink(linkRef){\n    if(this.linkRef !== linkRef){\n      return false\n    } else {\n      this.href = this.pendingLink\n      this.pendingLink = null\n      return true\n    }\n  }\n\n  getHref(){ return this.href }\n\n  hasPendingLink(){ return !!this.pendingLink }\n\n  bind(events, callback){\n    for(let event in events){\n      let browserEventName = events[event]\n\n      this.on(browserEventName, e => {\n        let binding = this.binding(event)\n        let windowBinding = this.binding(`window-${event}`)\n        let targetPhxEvent = e.target.getAttribute && e.target.getAttribute(binding)\n        if(targetPhxEvent){\n          this.debounce(e.target, e, browserEventName, () => {\n            this.withinOwners(e.target, view => {\n              callback(e, event, view, e.target, targetPhxEvent, null)\n            })\n          })\n        } else {\n          DOM.all(document, `[${windowBinding}]`, el => {\n            let phxEvent = el.getAttribute(windowBinding)\n            this.debounce(el, e, browserEventName, () => {\n              this.withinOwners(el, view => {\n                callback(e, event, view, el, phxEvent, \"window\")\n              })\n            })\n          })\n        }\n      })\n    }\n  }\n\n  bindClicks(){\n    window.addEventListener(\"mousedown\", e => this.clickStartedAtTarget = e.target)\n    this.bindClick(\"click\", \"click\")\n  }\n\n  bindClick(eventName, bindingName){\n    let click = this.binding(bindingName)\n    window.addEventListener(eventName, e => {\n      let target = null\n      // a synthetic click event (detail 0) will not have caused a mousedown event,\n      // therefore the clickStartedAtTarget is stale\n      if(e.detail === 0) this.clickStartedAtTarget = e.target\n      let clickStartedAtTarget = this.clickStartedAtTarget || e.target\n      target = closestPhxBinding(clickStartedAtTarget, click)\n      this.dispatchClickAway(e, clickStartedAtTarget)\n      this.clickStartedAtTarget = null\n      let phxEvent = target && target.getAttribute(click)\n      if(!phxEvent){\n        if(DOM.isNewPageClick(e, window.location)){ this.unload() }\n        return\n      }\n\n      if(target.getAttribute(\"href\") === \"#\"){ e.preventDefault() }\n\n      // noop if we are in the middle of awaiting an ack for this el already\n      if(target.hasAttribute(PHX_REF)){ return }\n\n      this.debounce(target, e, \"click\", () => {\n        this.withinOwners(target, view => {\n          JS.exec(\"click\", phxEvent, view, target, [\"push\", {data: this.eventMeta(\"click\", e, target)}])\n        })\n      })\n    }, false)\n  }\n\n  dispatchClickAway(e, clickStartedAt){\n    let phxClickAway = this.binding(\"click-away\")\n    DOM.all(document, `[${phxClickAway}]`, el => {\n      if(!(el.isSameNode(clickStartedAt) || el.contains(clickStartedAt))){\n        this.withinOwners(el, view => {\n          let phxEvent = el.getAttribute(phxClickAway)\n          if(JS.isVisible(el) && JS.isInViewport(el)){\n            JS.exec(\"click\", phxEvent, view, el, [\"push\", {data: this.eventMeta(\"click\", e, e.target)}])\n          }\n        })\n      }\n    })\n  }\n\n  bindNav(){\n    if(!Browser.canPushState()){ return }\n    if(history.scrollRestoration){ history.scrollRestoration = \"manual\" }\n    let scrollTimer = null\n    window.addEventListener(\"scroll\", _e => {\n      clearTimeout(scrollTimer)\n      scrollTimer = setTimeout(() => {\n        Browser.updateCurrentState(state => Object.assign(state, {scroll: window.scrollY}))\n      }, 100)\n    })\n    window.addEventListener(\"popstate\", event => {\n      if(!this.registerNewLocation(window.location)){ return }\n      let {type, id, root, scroll} = event.state || {}\n      let href = window.location.href\n\n      DOM.dispatchEvent(window, \"phx:navigate\", {detail: {href, patch: type === \"patch\", pop: true}})\n      this.requestDOMUpdate(() => {\n        if(this.main.isConnected() && (type === \"patch\" && id === this.main.id)){\n          this.main.pushLinkPatch(href, null, () => {\n            this.maybeScroll(scroll)\n          })\n        } else {\n          this.replaceMain(href, null, () => {\n            if(root){ this.replaceRootHistory() }\n            this.maybeScroll(scroll)\n          })\n        }\n      })\n    }, false)\n    window.addEventListener(\"click\", e => {\n      let target = closestPhxBinding(e.target, PHX_LIVE_LINK)\n      let type = target && target.getAttribute(PHX_LIVE_LINK)\n      if(!type || !this.isConnected() || !this.main || DOM.wantsNewTab(e)){ return }\n\n      // When wrapping an SVG element in an anchor tag, the href can be an SVGAnimatedString\n      let href = target.href instanceof SVGAnimatedString ? target.href.baseVal : target.href\n\n      let linkState = target.getAttribute(PHX_LINK_STATE)\n      e.preventDefault()\n      e.stopImmediatePropagation() // do not bubble click to regular phx-click bindings\n      if(this.pendingLink === href){ return }\n\n      this.requestDOMUpdate(() => {\n        if(type === \"patch\"){\n          this.pushHistoryPatch(href, linkState, target)\n        } else if(type === \"redirect\"){\n          this.historyRedirect(href, linkState)\n        } else {\n          throw new Error(`expected ${PHX_LIVE_LINK} to be \"patch\" or \"redirect\", got: ${type}`)\n        }\n        let phxClick = target.getAttribute(this.binding(\"click\"))\n        if(phxClick){\n          this.requestDOMUpdate(() => this.execJS(target, phxClick, \"click\"))\n        }\n      })\n    }, false)\n  }\n\n  maybeScroll(scroll){\n    if(typeof(scroll) === \"number\"){\n      requestAnimationFrame(() => {\n        window.scrollTo(0, scroll)\n      }) // the body needs to render before we scroll.\n    }\n  }\n\n  dispatchEvent(event, payload = {}){\n    DOM.dispatchEvent(window, `phx:${event}`, {detail: payload})\n  }\n\n  dispatchEvents(events){\n    events.forEach(([event, payload]) => this.dispatchEvent(event, payload))\n  }\n\n  withPageLoading(info, callback){\n    DOM.dispatchEvent(window, \"phx:page-loading-start\", {detail: info})\n    let done = () => DOM.dispatchEvent(window, \"phx:page-loading-stop\", {detail: info})\n    return callback ? callback(done) : done\n  }\n\n  pushHistoryPatch(href, linkState, targetEl){\n    if(!this.isConnected() || !this.main.isMain()){ return Browser.redirect(href) }\n\n    this.withPageLoading({to: href, kind: \"patch\"}, done => {\n      this.main.pushLinkPatch(href, targetEl, linkRef => {\n        this.historyPatch(href, linkState, linkRef)\n        done()\n      })\n    })\n  }\n\n  historyPatch(href, linkState, linkRef = this.setPendingLink(href)){\n    if(!this.commitPendingLink(linkRef)){ return }\n\n    Browser.pushState(linkState, {type: \"patch\", id: this.main.id}, href)\n    DOM.dispatchEvent(window, \"phx:navigate\", {detail: {patch: true, href, pop: false}})\n    this.registerNewLocation(window.location)\n  }\n\n  historyRedirect(href, linkState, flash){\n    if(!this.isConnected() || !this.main.isMain()){ return Browser.redirect(href, flash) }\n\n    // convert to full href if only path prefix\n    if(/^\\/$|^\\/[^\\/]+.*$/.test(href)){\n      let {protocol, host} = window.location\n      href = `${protocol}//${host}${href}`\n    }\n    let scroll = window.scrollY\n    this.withPageLoading({to: href, kind: \"redirect\"}, done => {\n      this.replaceMain(href, flash, (linkRef) => {\n        if(linkRef === this.linkRef){\n          Browser.pushState(linkState, {type: \"redirect\", id: this.main.id, scroll: scroll}, href)\n          DOM.dispatchEvent(window, \"phx:navigate\", {detail: {href, patch: false, pop: false}})\n          this.registerNewLocation(window.location)\n        }\n        done()\n      })\n    })\n  }\n\n  replaceRootHistory(){\n    Browser.pushState(\"replace\", {root: true, type: \"patch\", id: this.main.id})\n  }\n\n  registerNewLocation(newLocation){\n    let {pathname, search} = this.currentLocation\n    if(pathname + search === newLocation.pathname + newLocation.search){\n      return false\n    } else {\n      this.currentLocation = clone(newLocation)\n      return true\n    }\n  }\n\n  bindForms(){\n    let iterations = 0\n    let externalFormSubmitted = false\n\n    // disable forms on submit that track phx-change but perform external submit\n    this.on(\"submit\", e => {\n      let phxSubmit = e.target.getAttribute(this.binding(\"submit\"))\n      let phxChange = e.target.getAttribute(this.binding(\"change\"))\n      if(!externalFormSubmitted && phxChange && !phxSubmit){\n        externalFormSubmitted = true\n        e.preventDefault()\n        this.withinOwners(e.target, view => {\n          view.disableForm(e.target)\n          // safari needs next tick\n          window.requestAnimationFrame(() => {\n            if(DOM.isUnloadableFormSubmit(e)){ this.unload() }\n            e.target.submit()\n          })\n        })\n      }\n    }, true)\n\n    this.on(\"submit\", e => {\n      let phxEvent = e.target.getAttribute(this.binding(\"submit\"))\n      if(!phxEvent){\n        if(DOM.isUnloadableFormSubmit(e)){ this.unload() }\n        return\n      }\n      e.preventDefault()\n      e.target.disabled = true\n      this.withinOwners(e.target, view => {\n        JS.exec(\"submit\", phxEvent, view, e.target, [\"push\", {submitter: e.submitter}])\n      })\n    }, false)\n\n    for(let type of [\"change\", \"input\"]){\n      this.on(type, e => {\n        let phxChange = this.binding(\"change\")\n        let input = e.target\n        let inputEvent = input.getAttribute(phxChange)\n        let formEvent = input.form && input.form.getAttribute(phxChange)\n        let phxEvent = inputEvent || formEvent\n        if(!phxEvent){ return }\n        if(input.type === \"number\" && input.validity && input.validity.badInput){ return }\n\n        let dispatcher = inputEvent ? input : input.form\n        let currentIterations = iterations\n        iterations++\n        let {at: at, type: lastType} = DOM.private(input, \"prev-iteration\") || {}\n        // Browsers should always fire at least one \"input\" event before every \"change\"\n        // Ignore \"change\" events, unless there was no prior \"input\" event.\n        // This could happen if user code triggers a \"change\" event, or if the browser is non-conforming.\n        if(at === currentIterations - 1 && type === \"change\" && lastType === \"input\"){ return }\n\n        DOM.putPrivate(input, \"prev-iteration\", {at: currentIterations, type: type})\n\n        this.debounce(input, e, type, () => {\n          this.withinOwners(dispatcher, view => {\n            DOM.putPrivate(input, PHX_HAS_FOCUSED, true)\n            if(!DOM.isTextualInput(input)){\n              this.setActiveElement(input)\n            }\n            JS.exec(\"change\", phxEvent, view, input, [\"push\", {_target: e.target.name, dispatcher: dispatcher}])\n          })\n        })\n      }, false)\n    }\n    this.on(\"reset\", (e) => {\n      let form = e.target\n      DOM.resetForm(form, this.binding(PHX_FEEDBACK_FOR), this.binding(PHX_FEEDBACK_GROUP))\n      let input = Array.from(form.elements).find(el => el.type === \"reset\")\n      if(input){\n        // wait until next tick to get updated input value\n        window.requestAnimationFrame(() => {\n          input.dispatchEvent(new Event(\"input\", {bubbles: true, cancelable: false}))\n        })\n      }\n    })\n  }\n\n  debounce(el, event, eventType, callback){\n    if(eventType === \"blur\" || eventType === \"focusout\"){ return callback() }\n\n    let phxDebounce = this.binding(PHX_DEBOUNCE)\n    let phxThrottle = this.binding(PHX_THROTTLE)\n    let defaultDebounce = this.defaults.debounce.toString()\n    let defaultThrottle = this.defaults.throttle.toString()\n\n    this.withinOwners(el, view => {\n      let asyncFilter = () => !view.isDestroyed() && document.body.contains(el)\n      DOM.debounce(el, event, phxDebounce, defaultDebounce, phxThrottle, defaultThrottle, asyncFilter, () => {\n        callback()\n      })\n    })\n  }\n\n  silenceEvents(callback){\n    this.silenced = true\n    callback()\n    this.silenced = false\n  }\n\n  on(event, callback){\n    window.addEventListener(event, e => {\n      if(!this.silenced){ callback(e) }\n    })\n  }\n}\n\nclass TransitionSet {\n  constructor(){\n    this.transitions = new Set()\n    this.pendingOps = []\n  }\n\n  reset(){\n    this.transitions.forEach(timer => {\n      clearTimeout(timer)\n      this.transitions.delete(timer)\n    })\n    this.flushPendingOps()\n  }\n\n  after(callback){\n    if(this.size() === 0){\n      callback()\n    } else {\n      this.pushPendingOp(callback)\n    }\n  }\n\n  addTransition(time, onStart, onDone){\n    onStart()\n    let timer = setTimeout(() => {\n      this.transitions.delete(timer)\n      onDone()\n      this.flushPendingOps()\n    }, time)\n    this.transitions.add(timer)\n  }\n\n  pushPendingOp(op){ this.pendingOps.push(op) }\n\n  size(){ return this.transitions.size }\n\n  flushPendingOps(){\n    if(this.size() > 0){ return }\n    let op = this.pendingOps.shift()\n    if(op){\n      op()\n      this.flushPendingOps()\n    }\n  }\n}\n", "import { Howl, Howler } from 'howler';\n\n\nexport const guitarSounds = {\n    \"1\": new Howl({\n        src: ['sounds/ax-grinder__a2-pmute.wav']\n    }),\n    \"2\": new Howl({\n        src: ['sounds/ax-grinder__b2-pmute.wav']\n    }),\n    \"3\": new Howl({\n        src: ['sounds/ax-grinder__c2-pmute.wav']\n    }),\n    \"4\": new Howl({\n        src: ['sounds/ax-grinder__d2-pmute.wav']\n    }),\n    \"5\": new Howl({\n        src: ['sounds/ax-grinder__e2-pmute.wav']\n    }),\n    \"6\": new Howl({\n        src: ['sounds/ax-grinder__f2-pmute.wav']\n    }),\n    \"7\": new Howl({\n        src: ['sounds/ax-grinder__g2-pmute.wav']\n    })\n}\n\nexport const drumSounds = {\n    \"1\": new Howl({\n        src: ['sounds/snare-drum.wav']\n    }),\n    \"2\": new Howl({\n        src: ['sounds/kick-drum.wav']\n    }),\n    \"3\": new Howl({\n        src: ['sounds/bass-drum.wav']\n    }),\n    \"4\": new Howl({\n        src: ['sounds/cymbal-drum.mp3']\n    }),\n}", "import \"phoenix_html\"\nimport { Socket } from \"phoenix\"\nimport { LiveSocket } from \"phoenix_live_view\"\n\nimport { guitarSounds, drumSounds } from './sounds'\n\nwindow.playGuitar = ({ chord, stroke }) => {\n    if (guitarSounds[chord]) {\n        guitarSounds[chord].play()\n\n    } else {\n        console.log(`Failed to find chord ${chord}`)\n    }\n}\n\nwindow.playDrum = ({ key }) => {\n    drumSounds[key].play()\n}\n\nwindow.addEventListener(\"keydown\", event => {\n    console.log(\"Keys disabled, heh, sry\")\n    event.preventDefault()\n});\n\nlet Hooks = {};\n\nHooks.PlayGuitar = {\n  mounted() {\n    const chord = this.el.dataset.chord;\n    window.playGuitar && window.playGuitar({ chord: chord, stroke: 'down' });\n  }\n}\n\nHooks.PlayDrums = {\n  mounted() {\n    const key = this.el.dataset.key;\n    window.playDrum && window.playDrum({ key: key });\n  }\n}\n\nlet liveSocket = new LiveSocket(\"/live\", Socket, {hooks: Hooks, params: {}})\n\nliveSocket.connect();\n"],
  "mappings": "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",
  "names": []
}
